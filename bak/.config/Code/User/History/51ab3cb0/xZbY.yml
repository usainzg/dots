name: Build and Test w/CMake
on:
  push:
    branches:
      - main
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  LLVM_SHA_FILE: llvm-sha.txt
  LLVM_CACHE_NUMBER: 2  # Increase to reset cache

jobs:
  build_llvm_linux:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - uses: seanmiddleditch/gha-setup-ninja@master

      - name: Install prerequisites
        run: |
          sudo apt update
          sudo apt install -y uuid-dev

      - name: Cache LLVM artifact
        id: cache-llvm
        uses: actions/cache@v4.2.3
        with:
          path: |
            ./externals/llvm-project
          key: ${{ runner.os }}-cmake-${{ hashFiles('bazel/import_llvm.bzl') }}-${{ hashFiles('**/CMakeLists.txt') }}

      - name: Cache topoly-distmem build
        id: cache-topoly-distmem
        uses: actions/cache@v4.2.3
        with:
          path: |
            ./build
          key: ${{ runner.os }}-cmake-${{ hashFiles('bazel/import_llvm.bzl') }}-${{ hashFiles('**/CMakeLists.txt') }}

      - name: Git config
        run: |
          git config --global --add safe.directory ${GITHUB_WORKSPACE}
      
      - name: Ensure submodules are initialized
        run: |
          git submodule sync --recursive
          git submodule update --init --recursive

      - name: Build LLVM
        if: steps.cache-llvm.outputs.cache-hit != 'true'
        run: |
          LLVM_COMMIT=$(grep LLVM_COMMIT ${GITHUB_WORKSPACE}/bazel/import_llvm.bzl | head -n 1 | cut -d'"' -f 2 )
          echo "Checking out LLVM commit: ${LLVM_COMMIT}"
          git submodule update --init --recursive
          cd externals/llvm-project
          if ! git checkout ${LLVM_COMMIT}; then
            echo "Error: Unable to checkout LLVM commit ${LLVM_COMMIT}. Please verify the hash."
            exit 1
          fi
          mkdir -p build && cd build
          cmake -G Ninja ../llvm -DLLVM_ENABLE_PROJECTS=mlir -DLLVM_BUILD_EXAMPLES=ON -DLLVM_ENABLE_ASSERTIONS=ON -DCMAKE_BUILD_TYPE=Release -DLLVM_ENABLE_RTTI=ON -DLLVM_TARGETS_TO_BUILD="host"
          cmake --build . --target check-mlir
 
      - name: Build and test topoly-distmem
        run: |
          mkdir build && cd build
          cmake -DLLVM_DIR=${GITHUB_WORKSPACE}/externals/llvm-project/build/lib/cmake/llvm -DMLIR_DIR=${GITHUB_WORKSPACE}/externals/llvm-project/build/lib/cmake/mlir -DBUILD_DEPS="ON" -DBUILD_SHARED_LIBS="OFF" ..
          cmake --build . --target MLIRAffineDistributeToMPIPasses
          cmake --build . --target mlir-headers
          cmake --build . --target topoly-distmem-opt
          cmake --build . --target check-topoly-distmem
