{"input":{"location":{"$mid":1,"external":"vscode-userdata:/home/usainzg/.vscode/extensions/extensions.json","path":"/home/usainzg/.vscode/extensions/extensions.json","scheme":"vscode-userdata"},"mtime":1761206963112,"profile":true,"profileScanOptions":{"bailOutWhenFileNotFound":true},"type":1,"validate":true,"productVersion":"1.105.1","productDate":"2025-10-14T22:33:36.618Z","productCommit":"7d842fb85a0275a4a8e4d7e040d2625abbf7f084","devMode":false,"language":"en","translations":{}},"result":[{"type":1,"identifier":{"id":"llvm-vs-code-extensions.vscode-mlir","uuid":"223e0adc-e5c8-4025-bfb8-b7a1ff223705"},"manifest":{"name":"vscode-mlir","displayName":"MLIR","description":"MLIR Language Extension","version":"0.0.11","publisher":"llvm-vs-code-extensions","homepage":"https://mlir.llvm.org/","icon":"icon.png","engines":{"vscode":"^1.67.0"},"categories":["Programming Languages"],"keywords":["LLVM","MLIR","PDLL","TableGen","tblgen","tablegen"],"activationEvents":["onFileSystem:mlir.bytecode-mlir","onCustomEditor:mlir.bytecode","onLanguage:mlir","onLanguage:pdll","onLanguage:tablegen"],"main":"./out/extension","scripts":{"vscode:prepublish":"tsc -p ./","compile":"tsc -watch -p ./","format":"clang-format -i --glob=\"{src,test}/*.ts\"","package":"vsce package","publish":"vsce publish","git-clang-format":"git-clang-format"},"dependencies":{"base64-js":"^1.5.1","chokidar":"3.5.2","vscode-languageclient":"^8.0.2-next.5"},"devDependencies":{"@types/mocha":"^7.0.2","@types/node":"^14.17.0","@types/vscode":"~1.67.0","clang-format":"^1.8.0","typescript":"^4.6.4","vsce":"^2.7.0","vscode-test":"^1.3.0"},"repository":{"type":"git","url":"https://github.com/llvm/vscode-mlir.git"},"contributes":{"customEditors":[{"viewType":"mlir.bytecode","displayName":"MLIR Bytecode","priority":"default","selector":[{"filenamePattern":"*.mlirbc"}]}],"languages":[{"id":"mlir","aliases":["MLIR","mlir"],"extensions":[".mlir",".mlirbc"],"configuration":"./language-configuration.json"},{"id":"mlir-injection"},{"id":"pdll","aliases":["PDLL","pdll"],"extensions":[".pdll"],"configuration":"./pdll-language-configuration.json"},{"id":"tablegen","aliases":["TableGen","tblgen"],"extensions":[".td"],"configuration":"./tablegen-language-configuration.json"}],"grammars":[{"language":"mlir","scopeName":"source.mlir","path":"./grammar.json"},{"language":"mlir-injection","scopeName":"markdown.mlir.codeblock","path":"markdown-grammar.json","injectTo":["text.html.markdown"],"embeddedLanguages":{"meta.embedded.block.mlir":"mlir","meta.embedded.block.pdll":"pdll","meta.embedded.block.tablegen":"tablegen"}},{"scopeName":"source.cpp.mlir","path":"./cpp-grammar.json","injectTo":["source.cpp"],"embeddedLanguages":{"source.mlir":"mlir"}},{"language":"pdll","scopeName":"source.pdll","path":"./pdll-grammar.json"},{"language":"tablegen","scopeName":"source.tablegen","path":"./tablegen-grammar.json"}],"configuration":{"type":"object","title":"MLIR","properties":{"mlir.server_path":{"scope":"resource","type":"string","description":"The file path of the mlir-lsp-server executable."},"mlir.pdll_server_path":{"scope":"resource","type":"string","description":"The file path of the mlir-pdll-lsp-server executable."},"mlir.pdll_compilation_databases":{"scope":"resource","type":"array","description":"A list of `pdll_compile_commands.yml` database files containing information about .pdll files processed by the server."},"mlir.tablegen_server_path":{"scope":"resource","type":"string","description":"The file path of the tblgen-lsp-server executable."},"mlir.tablegen_compilation_databases":{"scope":"resource","type":"array","description":"A list of `tablegen_compile_commands.yml` database files containing information about .td files processed by the server."},"mlir.onSettingsChanged":{"type":"string","default":"prompt","description":"Action taken when a setting change requires a server restart to take effect.","enum":["prompt","restart","ignore"],"enumDescriptions":["Prompt the user for restarting the server","Automatically restart the server","Do nothing"]}}},"commands":[{"command":"mlir.restart","title":"mlir: Restart language server"},{"command":"mlir.viewPDLLOutput","title":"mlir-pdll: View PDLL output"}],"menus":{"editor/context":[{"command":"mlir.viewPDLLOutput","group":"z_commands","when":"editorLangId == pdll"}]}}},"location":{"$mid":1,"path":"/home/usainzg/.vscode/extensions/llvm-vs-code-extensions.vscode-mlir-0.0.11","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"LLVM","metadata":{"installedTimestamp":1753985555674,"pinned":false,"source":"gallery","id":"223e0adc-e5c8-4025-bfb8-b7a1ff223705","publisherId":"0f47d2a3-0735-453c-a89e-dc4193d6b6fa","publisherDisplayName":"LLVM","targetPlatform":"undefined","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":2291620},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"llvm-vs-code-extensions.vscode-clangd","uuid":"103154cb-b81d-4e1b-8281-c5f4fa563d37"},"manifest":{"name":"vscode-clangd","displayName":"clangd","description":"C/C++ completion, navigation, and insights","version":"0.2.0","publisher":"llvm-vs-code-extensions","license":"MIT","homepage":"https://clangd.llvm.org/","icon":"icon.png","engines":{"vscode":"^1.75.0"},"categories":["Programming Languages","Linters","Formatters"],"keywords":["C","C++","clang","clangd","LLVM"],"activationEvents":["onLanguage:c","onLanguage:cpp","onLanguage:cuda-cpp","onLanguage:objective-c","onLanguage:objective-cpp"],"main":"./out/bundle","scripts":{"esbuild":"esbuild ./src/extension.ts --bundle --outfile=out/bundle.js --external:@aws-sdk/client-s3 --external:vscode --format=cjs --platform=node","vscode:prepublish":"npm run check-ts && npm run esbuild -- --minify --keep-names","compile":"npm run esbuild -- --sourcemap","check-ts":"tsc -noEmit -p ./","format":"clang-format -i --glob=\"{src,test}/*.ts\"","test-compile":"tsc -p ./ && npm run compile","test":"npm run test-compile && node ./out/test/index.js","package":"vsce package --baseImagesUrl https://raw.githubusercontent.com/clangd/vscode-clangd/master/","publish":"vsce publish --baseImagesUrl https://raw.githubusercontent.com/clangd/vscode-clangd/master/","publish-openvsx":"ovsx publish --baseImagesUrl https://raw.githubusercontent.com/clangd/vscode-clangd/master/","package-pre-release":"vsce package --pre-release --baseImagesUrl https://raw.githubusercontent.com/clangd/vscode-clangd/master/","publish-pre-release":"vsce publish --pre-release --baseImagesUrl https://raw.githubusercontent.com/clangd/vscode-clangd/master/","publish-openvsx-pre-release":"ovsx publish --pre-release --baseImagesUrl https://raw.githubusercontent.com/clangd/vscode-clangd/master/","git-clang-format":"git-clang-format --extensions=ts"},"dependencies":{"@clangd/install":"0.1.20","vscode-languageclient":"^9.0.1"},"devDependencies":{"@types/glob":"^8.1.0","@types/mocha":"^10.0.7","@types/node":"^22.0.2","@types/sinon":"^17.0.3","@types/vscode":"^1.75.0","@vscode/test-electron":"^2.4.1","@vscode/vsce":"^3.2.2","clang-format":"^1.8.0","esbuild":"^0.25.0","glob":"^11.0.0","mocha":"^11.1.0","ovsx":"^0.10.1","sinon":"^19.0.2","typescript":"^5.5.4"},"repository":{"type":"git","url":"https://github.com/clangd/vscode-clangd.git"},"qna":"marketplace","capabilities":{"untrustedWorkspaces":{"supported":false,"description":"Clangd isn't safe to run on untrusted code as it embeds clang as a parser. Parsing source files as one navigates a code base, carries the risk of being exploited."}},"contributes":{"languages":[{"id":"cpp","filenamePatterns":["**/include/c++/**","**/MSVC/*/include/**"],"firstLine":"^/[/*].*-\\*-\\s*C\\+\\+\\s*-\\*-.*"}],"configuration":{"type":"object","title":"clangd","properties":{"clangd.path":{"type":"string","default":"clangd","scope":"machine-overridable","description":"The path to clangd executable, e.g.: /usr/bin/clangd."},"clangd.useScriptAsExecutable":{"type":"boolean","default":false,"scope":"machine-overridable","description":"Allows the path to be a script e.g.: clangd.sh."},"clangd.arguments":{"type":"array","default":[],"items":{"type":"string"},"description":"Arguments for clangd server."},"clangd.trace":{"type":"string","description":"Names a file that clangd should log a performance trace to, in chrome trace-viewer JSON format."},"clangd.semanticHighlighting":{"type":"boolean","default":true,"description":"Enable semantic highlighting in clangd.","deprecationMessage":"Legacy semanticHighlights is no longer supported. Please use `editor.semanticHighlighting.enabled` instead."},"clangd.fallbackFlags":{"type":"array","default":[],"items":{"type":"string"},"description":"Extra clang flags used to parse files when no compilation database is found."},"clangd.serverCompletionRanking":{"type":"boolean","default":true,"description":"Always rank completion items on the server as you type. This produces more accurate results at the cost of higher latency than client-side filtering."},"clangd.restartAfterCrash":{"type":"boolean","default":true,"description":"Auto restart clangd (up to 4 times) if it crashes."},"clangd.checkUpdates":{"type":"boolean","default":false,"description":"Check for language server updates on startup."},"clangd.onConfigChanged":{"type":"string","default":"prompt","description":"What to do when clangd configuration files are changed. Ignored for clangd 12+, which can reload such files itself; however, this can be overridden with clangd.onConfigChanged.forceEnable.","enum":["prompt","restart","ignore"],"enumDescriptions":["Prompt the user for restarting the server","Automatically restart the server","Do nothing"]},"clangd.onConfigChanged.forceEnable":{"type":"boolean","default":false,"description":"Force enable of \"On Config Changed\" option regardless of clangd version."},"clangd.detectExtensionConflicts":{"type":"boolean","default":true,"description":"Warn about conflicting extensions and suggest disabling them."},"clangd.inactiveRegions.useBackgroundHighlight":{"type":"boolean","default":false,"description":"Use a background highlight rather than opacity to identify inactive preprocessor regions."},"clangd.inactiveRegions.opacity":{"type":"number","default":0.55,"description":"Opacity of inactive regions (used only if clangd.inactiveRegions.useBackgroundHighlight=false)"},"clangd.enableCodeCompletion":{"type":"boolean","default":true,"description":"Enable code completion provided by the language server"},"clangd.enableHover":{"type":"boolean","default":true,"description":"Enable hovers provided by the language server"},"clangd.enable":{"type":"boolean","default":true,"description":"Enable clangd language server features"}}},"colors":[{"id":"clangd.inactiveRegions.background","description":"Background color of inactive code regions (used only if clangd.inactiveRegions.useBackgroundHighlight=true)","defaults":{"dark":"#1212124C","light":"#DCDCDC4C","highContrast":"#FCFCFC4C"}}],"commands":[{"command":"clangd.switchheadersource","category":"clangd","title":"Switch Between Source/Header"},{"command":"clangd.install","category":"clangd","title":"Download language server"},{"command":"clangd.update","category":"clangd","title":"Check for language server update"},{"command":"clangd.activate","category":"clangd","title":"Manually activate extension"},{"command":"clangd.restart","category":"clangd","title":"Restart language server"},{"command":"clangd.typeHierarchy","category":"clangd","title":"Open Type Hierarchy"},{"command":"clangd.typeHierarchy.viewParents","category":"clangd","title":"Types: Show Base Classes","icon":"$(triangle-up)"},{"command":"clangd.typeHierarchy.viewChildren","category":"clangd","title":"Types: Show Derived Classes","icon":"$(triangle-down)"},{"command":"clangd.typeHierarchy.close","category":"clangd","enablement":"clangd.typeHierarchyView.visible","title":"Close type hierarchy view","icon":"$(panel-close)"},{"command":"clangd.memoryUsage","category":"clangd","title":"Show memory usage","enablement":"clangd.memoryUsage.supported","icon":"$(refresh)"},{"command":"clangd.memoryUsage.close","category":"clangd","enablement":"clangd.memoryUsage.visible","title":"Close memory usage view","icon":"$(panel-close)"},{"command":"clangd.ast","category":"clangd","title":"Show AST","enablement":"clangd.ast.supported","icon":"$(list-tree)"},{"command":"clangd.ast.close","category":"clangd","enablement":"clangd.ast.visible","title":"Close AST view","icon":"$(panel-close)"},{"command":"clangd.projectConfig","category":"clangd","title":"Open project configuration file","icon":"$(gear)"},{"command":"clangd.userConfig","category":"clangd","title":"Open user configuration file","icon":"$(gear)"},{"command":"clangd.inlayHints.toggle","category":"clangd","title":"Toggle inlay hints","enablement":"clangd.inlayHints.supported"}],"keybindings":[{"command":"clangd.switchheadersource","key":"Alt+o","mac":"Alt+cmd+o","when":"(resourceLangId == c || resourceLangId == cpp || resourceLangId == cuda-cpp || resourceLangId == objective-c || resourceLangId == objective-cpp) && editorTextFocus"},{"command":"clangd.typeHierarchy","key":"Shift+Alt+t","when":"(resourceLangId == cpp || resourceLangId == cuda-cpp || resourceLangId == objective-c || resourceLangId == objective-cpp) && editorTextFocus"}],"menus":{"editor/context":[{"command":"clangd.typeHierarchy","when":"resourceLangId == cpp && clangd.enableTypeHierarchy","group":"0_navigation@4","_comment":"see https://github.com/microsoft/vscode-references-view/blob/f63eaed9934ca5ecc8f3fb3ca096f38c6e5e181f/package.json#L162"},{"command":"clangd.switchheadersource","when":"resourceLangId == c || resourceLangId == cpp || resourceLangId == cuda-cpp || resourceLangId == objective-c || resourceLangId == objective-cpp","group":"0_navigation@5"},{"command":"clangd.ast","when":"(resourceLangId == c || resourceLangId == cpp || resourceLangId == cuda-cpp || resourceLangId == objective-c || resourceLangId == objective-cpp) && clangd.ast.supported"}],"view/title":[{"command":"clangd.typeHierarchy.viewParents","when":"view == clangd.typeHierarchyView","group":"navigation"},{"command":"clangd.typeHierarchy.viewChildren","when":"view == clangd.typeHierarchyView","group":"navigation"},{"command":"clangd.typeHierarchy.close","when":"view == clangd.typeHierarchyView","group":"navigation"},{"command":"clangd.memoryUsage.close","when":"view == clangd.memoryUsage","group":"navigation"},{"command":"clangd.memoryUsage","when":"view == clangd.memoryUsage","group":"navigation"},{"command":"clangd.ast.close","when":"view == clangd.ast","group":"navigation"}],"commandPalette":[{"command":"clangd.typeHierarchy.viewParents","when":"resourceLangId == cpp"},{"command":"clangd.typeHierarchy.viewChildren","when":"resourceLangId == cpp"},{"command":"clangd.memoryUsage","when":"clangd.memoryUsage.supported"}]},"views":{"explorer":[{"id":"clangd.typeHierarchyView","name":"Type Hierarchy","when":"clangd.typeHierarchyVisible"},{"id":"clangd.memoryUsage","name":"clangd Memory Usage","when":"clangd.memoryUsage.hasData"},{"id":"clangd.ast","name":"AST","when":"clangd.ast.hasData"}]}}},"location":{"$mid":1,"path":"/home/usainzg/.vscode/extensions/llvm-vs-code-extensions.vscode-clangd-0.2.0","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"LLVM","metadata":{"installedTimestamp":1753985580839,"pinned":false,"source":"gallery","id":"103154cb-b81d-4e1b-8281-c5f4fa563d37","publisherId":"0f47d2a3-0735-453c-a89e-dc4193d6b6fa","publisherDisplayName":"LLVM","targetPlatform":"undefined","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":1433924},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"ms-vscode.cmake-tools","uuid":"7c889349-8749-43d4-8b5e-08939936d7f4"},"manifest":{"name":"cmake-tools","displayName":"CMake Tools","description":"Extended CMake support in Visual Studio Code","version":"1.21.36","publisher":"ms-vscode","repository":{"type":"git","url":"https://github.com/microsoft/vscode-cmake-tools"},"license":"MIT","bugs":{"url":"https://github.com/microsoft/vscode-cmake-tools/issues"},"homepage":"https://github.com/microsoft/vscode-cmake-tools","keywords":["cmake","tools","build","c++","native","syntaxes"],"engines":{"vscode":"^1.88.0"},"categories":["Other","Debuggers","Programming Languages"],"galleryBanner":{"color":"#13578c","theme":"dark"},"icon":"res/logo.png","activationEvents":["onCommand:cmake.cacheVariable","onCommand:cmake.activeFolderName","onCommand:cmake.activeFolderPath","onCommand:cmake.activeConfigurePresetName","onCommand:cmake.activeBuildPresetName","onCommand:cmake.activeTestPresetName","onCommand:cmake.activePackagePresetName","onCommand:cmake.activeWorkflowPresetName","onCommand:cmake.buildTargetName","onCommand:cmake.launchTargetPath","onCommand:cmake.launchTargetDirectory","onCommand:cmake.launchTargetFilename","onCommand:cmake.launchTargetName","onCommand:cmake.getLaunchTargetPath","onCommand:cmake.getLaunchTargetDirectory","onCommand:cmake.getLaunchTargetFilename","onCommand:cmake.getlaunchTargetName","onCommand:cmake.buildType","onCommand:cmake.buildDirectory","onCommand:cmake.executableTargets","onCommand:cmake.buildKit","onCommand:cmake.tasksBuildCommand","onDebugResolve:cmake","onDebugInitialConfigurations","onDebugDynamicConfigurations:cmake","workspaceContains:CMakeLists.txt","workspaceContains:*/CMakeLists.txt","workspaceContains:*/*/CMakeLists.txt","workspaceContains:*/*/*/CMakeLists.txt","workspaceContains:.vscode/cmake-kits.json","onFileSystem:cmake-tools-schema","onLanguage:cmake","onLanguage:cmake-cache"],"main":"./dist/main","contributes":{"icons":{"cmake-tools-build":{"description":"CMake build icon","default":{"fontPath":"./res/product-icons.woff2","fontCharacter":"\\E001"}},"cmake-tools-clean-configure":{"description":"CMake clean configure icon","default":{"fontPath":"./res/product-icons.woff2","fontCharacter":"\\E002"}},"cmake-tools-clean":{"description":"CMake clean icon","default":{"fontPath":"./res/product-icons.woff2","fontCharacter":"\\E003"}},"cmake-tools-cmake-view-1":{"description":"CMake view icon 1","default":{"fontPath":"./res/product-icons.woff2","fontCharacter":"\\E004"}},"cmake-tools-cmake-view-2":{"description":"CMake view icon 2","default":{"fontPath":"./res/product-icons.woff2","fontCharacter":"\\E005"}},"cmake-tools-configure":{"description":"CMake configure icon","default":{"fontPath":"./res/product-icons.woff2","fontCharacter":"\\E006"}}},"languages":[{"id":"cmake","extensions":[".cmake"],"filenames":["CMakelists.txt"],"aliases":["CMake"]},{"id":"cmake-cache","filenames":["CMakeCache.txt"],"aliases":["CMake Cache"]}],"grammars":[{"language":"cmake","scopeName":"source.cmake","path":"./syntaxes/CMake.tmLanguage.json"},{"language":"cmake-cache","scopeName":"source.cmakecache","path":"./syntaxes/CMakeCache.tmLanguage.json"}],"commands":[{"command":"cmake.openCMakePresets","title":"Open CMakePresets.json","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake"},{"command":"cmake.addConfigurePreset","title":"Add Configure Preset","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake"},{"command":"cmake.addBuildPreset","title":"Add Build Preset","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake"},{"command":"cmake.addTestPreset","title":"Add Test Preset","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake"},{"command":"cmake.addPackagePreset","title":"Add Package Preset","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake"},{"command":"cmake.addWorkflowPreset","title":"Add Workflow Preset","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake"},{"command":"cmake.selectConfigurePreset","title":"Select Configure Preset","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake"},{"command":"cmake.projectStatus.viewConfigureSettings","title":"View the settings overriding your Configure Preset","when":"cmake:enabelFullFeatureSet && useCMakePresets","category":"CMake","icon":"$(settings-gear)"},{"command":"cmake.projectStatus.selectConfigurePreset","title":"Select Configure Preset","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake","icon":"$(edit)"},{"command":"cmake.selectBuildPreset","title":"Select Build Preset","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake"},{"command":"cmake.projectStatus.viewBuildSettings","title":"View the settings overriding your Build Preset","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake","icon":"$(settings-gear)"},{"command":"cmake.projectStatus.selectBuildPreset","title":"Select Build Preset","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake","icon":"$(edit)"},{"command":"cmake.projectStatus.viewTestSettings","title":"View the settings overriding your Test Preset","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake","icon":"$(settings-gear)"},{"command":"cmake.projectStatus.viewPackageSettings","title":"View the settings overriding your Package Preset","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake","icon":"$(settings-gear)"},{"command":"cmake.selectTestPreset","title":"Select Test Preset","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake"},{"command":"cmake.projectStatus.selectTestPreset","title":"Select Test Preset","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake","icon":"$(edit)"},{"command":"cmake.projectStatus.setTestTarget","title":"Set Test Target","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake","icon":"$(edit)"},{"command":"cmake.selectPackagePreset","title":"Select Package Preset","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake"},{"command":"cmake.projectStatus.selectPackagePreset","title":"Select Package Preset","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake","icon":"$(edit)"},{"command":"cmake.selectWorkflowPreset","title":"Select Workflow Preset","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake"},{"command":"cmake.projectStatus.selectWorkflowPreset","title":"Select Workflow Preset","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake","icon":"$(edit)"},{"command":"cmake.viewLog","title":"Open the CMake Tools Log File","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.logDiagnostics","title":"Log Diagnostics","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.selectActiveFolder","title":"Select Active Folder","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.projectStatus.selectActiveProject","title":"Select Active Folder","when":"cmake:enableFullFeatureSet","category":"CMake","icon":"$(edit)"},{"command":"cmake.outline.selectWorkspace","when":"cmake:enableFullFeatureSet","title":"Select Active Folder","icon":"$(gear)"},{"command":"cmake.editKits","title":"Edit User-Local CMake Kits","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.scanForKits","title":"Scan for Kits","when":"cmake:enableFullFeatureSet && !useCMakePresets","category":"CMake"},{"command":"cmake.scanForCompilers","title":"Scan for Compilers","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake"},{"command":"cmake.selectKit","title":"Select a Kit","when":"cmake:enableFullFeatureSet && !useCMakePresets","category":"CMake"},{"command":"cmake.projectStatus.selectKit","title":"Select a Kit","when":"cmake:enableFullFeatureSet","category":"CMake","icon":"$(edit)"},{"command":"cmake.setVariant","title":"Select Variant","when":"cmake:enableFullFeatureSet && !useCMakePresets","category":"CMake"},{"command":"cmake.projectStatus.setVariant","title":"Select Variant","when":"cmake:enableFullFeatureSet && !useCMakePresets","category":"CMake","icon":"$(edit)"},{"command":"cmake.setVariantAll","title":"Select Variant for All Projects","when":"cmake:enableFullFeatureSet && !useCMakePresets","category":"CMake"},{"command":"cmake.configure","title":"Configure","category":"CMake"},{"command":"cmake.configureWithDebugger","title":"Configure with CMake Debugger","category":"CMake","enablement":"cmake:cmakeDebuggerAvailable"},{"command":"cmake.outline.configure","title":"Configure","icon":"$(cmake-tools-configure)"},{"command":"cmake.projectStatus.configure","title":"Configure","icon":"$(cmake-tools-configure)","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.outline.configureWithDebugger","title":"Configure with CMake Debugger","icon":"$(debug)","enablement":"cmake:cmakeDebuggerAvailable"},{"command":"cmake.showConfigureCommand","title":"Show Configure Command","category":"CMake"},{"command":"cmake.configureAll","title":"Configure All Projects","category":"CMake"},{"command":"cmake.configureAllWithDebugger","title":"Configure All Projects with CMake Debugger","category":"CMake","enablement":"cmake:cmakeDebuggerAvailable"},{"command":"cmake.outline.configureAll","title":"Configure All Projects","icon":"$(cmake-tools-configure)"},{"command":"cmake.outline.configureAllWithDebugger","title":"Configure All Projects with CMake Debugger","icon":"$(debug)","enablement":"cmake:cmakeDebuggerAvailable"},{"command":"cmake.build","title":"Build","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.outline.build","title":"Build","when":"cmake:enableFullFeatureSet","icon":"$(cmake-tools-build)"},{"command":"cmake.projectStatus.build","title":"Build","when":"cmake:enableFullFeatureSet","icon":"$(cmake-tools-build)"},{"command":"cmake.outline.buildTarget","title":"Build","when":"cmake:enableFullFeatureSet","icon":"$(cmake-tools-build)"},{"command":"cmake.showBuildCommand","title":"Show Build Command","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.buildAll","title":"Build All Projects","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.outline.buildAll","title":"Build All Projects","when":"cmake:enableFullFeatureSet","icon":"$(cmake-tools-build)"},{"command":"cmake.compileFile","title":"Compile Active File","category":"CMake","when":"cmake:enableFullFeatureSet","icon":"$(cmake-tools-build)"},{"command":"cmake.outline.compileFile","title":"Compile File","when":"cmake:enableFullFeatureSet","icon":"$(cmake-tools-build)"},{"command":"cmake.install","title":"Install","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.installAll","title":"Install All Projects","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.buildWithTarget","title":"Build Target","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.setDefaultTarget","title":"Set Build Target","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.outline.setDefaultTarget","when":"cmake:enableFullFeatureSet","title":"Set Build Target"},{"command":"cmake.projectStatus.setDefaultTarget","title":"Set Build Target","when":"cmake:enableFullFeatureSet","category":"CMake","icon":"$(edit)"},{"command":"cmake.cleanConfigure","title":"Delete Cache and Reconfigure","category":"CMake"},{"command":"cmake.outline.cleanConfigure","title":"Clean Reconfigure"},{"command":"cmake.projectStatus.cleanConfigure","title":"Delete Cache and Reconfigure","when":"cmake:enableFullFeatureSet","category":"CMake","icon":"$(cmake-tools-clean-configure)"},{"command":"cmake.projectStatus.openSettings","title":"Open CMake Tools Extension Settings","when":"cmake:enableFullFeatureSet","category":"CMake","icon":"$(settings-gear)"},{"command":"cmake.projectStatus.openVisibilitySettings","title":"Open Visibility Settings","when":"cmake:enabelFullFeatureSet","category":"CMake","icon":"$(json)"},{"command":"cmake.cleanConfigureWithDebugger","title":"Delete Cache and Reconfigure with CMake Debugger","category":"CMake","enablement":"cmake:cmakeDebuggerAvailable"},{"command":"cmake.outline.cleanConfigureWithDebugger","title":"Clean Reconfigure with CMake Debugger","enablement":"cmake:cmakeDebuggerAvailable"},{"command":"cmake.cleanConfigureAll","title":"Delete Cache and Reconfigure All Projects","category":"CMake"},{"command":"cmake.outline.cleanConfigureAll","title":"Clean Reconfigure All Projects"},{"command":"cmake.cleanConfigureAllWithDebugger","title":"Delete Cache and Reconfigure All Projects with CMake Debugger","category":"CMake","enablement":"cmake:cmakeDebuggerAvailable"},{"command":"cmake.outline.cleanConfigureAllWithDebugger","title":"Clean Reconfigure All Projects with CMake Debugger","enablement":"cmake:cmakeDebuggerAvailable"},{"command":"cmake.clean","title":"Clean","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.outline.clean","when":"cmake:enableFullFeatureSet","title":"Clean","icon":"$(cmake-tools-clean)"},{"command":"cmake.cleanAll","title":"Clean All Projects","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.outline.cleanAll","when":"cmake:enableFullFeatureSet","title":"Clean All Projects"},{"command":"cmake.cleanRebuild","title":"Clean Rebuild","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.outline.cleanRebuild","when":"cmake:enableFullFeatureSet","title":"Clean Rebuild"},{"command":"cmake.cleanRebuildAll","title":"Clean Rebuild All Projects","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.outline.cleanRebuildAll","when":"cmake:enableFullFeatureSet","title":"Clean Rebuild All Projects"},{"command":"cmake.editCacheUI","when":"cmake:enableFullFeatureSet","title":"Edit CMake Cache (UI)","category":"CMake"},{"command":"cmake.outline.editCacheUI","when":"cmake:enableFullFeatureSet","title":"Edit CMake Cache (UI)"},{"command":"cmake.ctest","title":"Run Tests","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.projectStatus.ctest","title":"Run Tests","when":"cmake:enableFullFeatureSet","icon":"$(beaker)","category":"CMake"},{"command":"cmake.ctestAll","title":"Run Tests for All Projects","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.revealTestExplorer","title":"Reveal Test Explorer","when":"cmake:enableFullFeatureSet && cmake:testExplorerIntegrationEnabled","category":"CMake"},{"command":"cmake.refreshTests","title":"Refresh Tests","when":"cmake:enableFullFeatureSet && cmake:testExplorerIntegrationEnabled","category":"CMake"},{"command":"cmake.refreshTestsAll","title":"Refresh Tests for All Projects","when":"cmake:enableFullFeatureSet && cmake:testExplorerIntegrationEnabled","category":"CMake"},{"command":"cmake.cpack","title":"Run CPack","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake"},{"command":"cmake.projectStatus.cpack","title":"Run CPack","when":"cmake:enableFullFeatureSet && useCMakePresets","icon":"$(package)","category":"CMake"},{"command":"cmake.workflow","title":"Run Workflow","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake"},{"command":"cmake.projectStatus.workflow","title":"Run Workflow","when":"cmake:enableFullFeatureSet && useCMakePresets","icon":"$(run)","category":"CMake"},{"command":"cmake.cpackAll","title":"Run CPack for All Projects","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake"},{"command":"cmake.workflowAll","title":"Run Workflow for All Projects","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake"},{"command":"cmake.editCache","title":"Edit CMake Cache","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.quickStart","title":"Quick Start","category":"CMake"},{"command":"cmake.debugTarget","title":"Debug","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.outline.debugTarget","when":"cmake:enableFullFeatureSet","title":"Debug"},{"command":"cmake.projectStatus.debugTarget","when":"cmake:enableFullFeatureSet","title":"Debug","category":"CMake","icon":"$(debug-alt)"},{"command":"cmake.debugTargetAll","title":"Debug All Projects","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.projectStatus.setDebugTarget","when":"cmake:enableFullFeatureSet","title":"Set Launch/Debug Target","icon":"$(edit)"},{"command":"cmake.launchTarget","title":"Run Without Debugging","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.outline.launchTarget","when":"cmake:enableFullFeatureSet","title":"Run in Terminal"},{"command":"cmake.projectStatus.launchTarget","when":"cmake:enableFullFeatureSet","title":"Run in Terminal","category":"CMake","icon":"$(run)"},{"command":"cmake.launchTargetAll","title":"Run All Projects Without Debugging","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.selectLaunchTarget","title":"Set Launch/Debug Target","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.outline.setLaunchTarget","when":"cmake:enableFullFeatureSet","title":"Set Launch/Debug Target"},{"command":"cmake.projectStatus.setLaunchTarget","when":"cmake:enableFullFeatureSet","title":"Set Launch/Debug Target","icon":"$(edit)"},{"command":"cmake.stop","title":"Cancel Build","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.projectStatus.stop","title":"Cancel Build","when":"cmake:enableFullFeatureSet","category":"CMake","icon":"$(x)"},{"command":"cmake.outline.stop","title":"Cancel Build","when":"cmake:enableFullFeatureSet","icon":"$(x)"},{"command":"cmake.stopAll","title":"Cancel Build for All Projects","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.outline.stopAll","title":"Cancel Build for All Projects","when":"cmake:enableFullFeatureSet","icon":"$(x)"},{"command":"cmake.resetState","title":"Reset CMake Tools Extension State (For troubleshooting)","category":"CMake"},{"command":"cmake.openSettings","title":"Open CMake Tools Extension Settings","category":"CMake"},{"command":"cmake.outline.runUtilityTarget","when":"cmake:enableFullFeatureSet","title":"Run Utility"},{"command":"cmake.outline.revealInCMakeLists","when":"cmake:enableFullFeatureSet","title":"Open CMakeLists.txt"},{"command":"cmake.projectStatus.update","when":"cmake:enableFullFeatureSet","title":"Refresh the project status","category":"CMake","icon":"$(refresh)"},{"command":"cmake.pinnedCommands.add","when":"cmake:enableFullFeatureSet","title":"Add a CMake command to pin","category":"CMake","icon":"$(add)"},{"command":"cmake.pinnedCommands.remove","when":"cmake:enableFullFeatureSet","title":"Unpin Command","category":"CMake","icon":"$(remove)"},{"command":"cmake.pinnedCommands.run","when":"cmake:enableFullFeatureSet","title":"Run Command","category":"CMake","icon":"$(play-circle)"},{"command":"cmake.appendBuildDirectoryToWorkspace","when":"cmake:enableFullFeatureSet","title":"Append Build Directory to Current Workspace","category":"CMake"}],"taskDefinitions":[{"type":"cmake","required":["command"],"properties":{"label":{"type":"string","description":"The name of the task"},"command":{"type":"string","enum":["build","configure","install","test","clean","cleanRebuild"],"description":"CMake command"},"targets":{"type":"array","items":{"type":"string"},"description":"CMake build targets"},"preset":{"type":"string","description":"CMake preset name. This is a configuration, build or test preset, based on the CMake command"},"options":{"type":"object","description":"Additional command options","properties":{"cwd":{"type":"string","description":"The current working directory of the executed program or script. If omitted Code's current workspace root is used."},"environment":{"type":"object","markdownDescription":"Environment variables in the format of \"name\": \"value\"."}}},"detail":{"type":"string","description":"Additional details of the task"}}}],"breakpoints":[{"language":"cmake"}],"debuggers":[{"type":"cmake","label":"CMake Debugger","languages":["cmake"],"configurationAttributes":{"launch":{"properties":{"scriptPath":{"type":"string","descripttion":"The path to the script to debug.","default":"script.cmake"},"scriptArgs":{"type":"array","items":{"type":"string"},"default":[],"description":"Arguments for the script to debug."},"scriptEnv":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string","description":"Name"},"value":{"type":"string","description":"Value"}}},"default":[],"description":"Environment for the script to use."},"dapLog":{"type":"string","description":"Where the debugger DAP log should be logged.","default":""},"pipeName":{"type":"string","description":"Name of the pipe (on Windows) or domain socket (on Unix) to use for debugger communication.","default":""},"clean":{"type":"boolean","description":"Clean prior to configuring.","default":false},"configureAll":{"type":"boolean","description":"Configure for all projects.","default":false},"cmakeDebugType":{"type":"string","enum":["configure","external","script"],"description":"The type of the CMake debug session. Available options are: \"configure\", \"external\", \"script\"."}},"required":["cmakeDebugType"],"oneOf":[{"properties":{"cmakeDebugType":{"enum":["script"]},"scriptPath":{"type":"string","description":"The path to the script to debug.","default":""},"scriptArgs":{"type":"array","items":{"type":"string"},"default":[],"description":"Arguments for the script to debug."},"scriptEnv":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string","description":"Name"},"value":{"type":"string","description":"Value"}}},"default":[],"description":"Environment for the script to use."},"dapLog":{"type":"string","description":"Where the debugger DAP log should be logged.","default":""}},"required":["scriptPath"]},{"properties":{"cmakeDebugType":{"enum":["configure"]},"clean":{"type":"boolean","description":"Clean prior to configuring.","default":false},"configureAll":{"type":"boolean","description":"Configure for all projects.","default":false},"dapLog":{"type":"string","description":"Where the debugger DAP log should be logged.","default":""}}},{"properties":{"cmakeDebugType":{"enum":["external"]}},"required":["pipeName"]}]}},"initialConfigurations":[],"configurationSnippets":[{"label":"CMake: Configure","description":"Debug a CMake project configuration","body":{"type":"cmake","request":"launch","name":"CMake: Configure project","cmakeDebugType":"configure","clean":false,"configureAll":false}},{"label":"CMake: Script","description":"Debug a CMake script","body":{"type":"cmake","request":"launch","name":"CMake: Script debugging","cmakeDebugType":"script","scriptPath":"^\"\\${workspaceFolder}/<...>.cmake\""}},{"label":"CMake: External","description":"Connect to an externally launched CMake invocation","body":{"type":"cmake","request":"launch","name":"CMake: Externally launched","cmakeDebugType":"external","pipeName":"<...>"}}]}],"menus":{"commandPalette":[{"command":"cmake.openCMakePresets","when":"cmake:enableFullFeatureSet && useCMakePresets"},{"command":"cmake.addConfigurePreset","when":"cmake:enableFullFeatureSet && useCMakePresets"},{"command":"cmake.addBuildPreset","when":"cmake:enableFullFeatureSet && useCMakePresets"},{"command":"cmake.addTestPreset","when":"cmake:enableFullFeatureSet && useCMakePresets"},{"command":"cmake.addPackagePreset","when":"cmake:enableFullFeatureSet && useCMakePresets"},{"command":"cmake.addWorkflowPreset","when":"cmake:enableFullFeatureSet && useCMakePresets"},{"command":"cmake.selectConfigurePreset","when":"cmake:enableFullFeatureSet && useCMakePresets"},{"command":"cmake.selectBuildPreset","when":"cmake:enableFullFeatureSet && useCMakePresets"},{"command":"cmake.selectTestPreset","when":"cmake:enableFullFeatureSet && useCMakePresets"},{"command":"cmake.selectPackagePreset","when":"cmake:enableFullFeatureSet && useCMakePresets"},{"command":"cmake.selectWorkflowPreset","when":"cmake:enableFullFeatureSet && useCMakePresets"},{"command":"cmake.viewLog","when":"cmake:enableFullFeatureSet"},{"command":"cmake.configure"},{"command":"cmake.configureWithDebugger","when":"cmake:cmakeDebuggerAvailable"},{"command":"cmake.showConfigureCommand"},{"command":"cmake.scanForKits","when":"cmake:enableFullFeatureSet && !useCMakePresets"},{"command":"cmake.scanForCompilers","when":"cmake:enableFullFeatureSet && useCMakePresets"},{"command":"cmake.selectKit","when":"cmake:enableFullFeatureSet && !useCMakePresets"},{"command":"cmake.editKits","when":"cmake:enableFullFeatureSet && !useCMakePresets"},{"command":"cmake.quickStart"},{"command":"cmake.selectActiveFolder","when":"cmake:enableFullFeatureSet"},{"command":"cmake.resetState"},{"command":"cmake.openSettings"},{"command":"cmake.configureAll","when":"cmake:multiProject"},{"command":"cmake.configureAllWithDebugger","when":"cmake:multiProject && cmake:cmakeDebuggerAvailable"},{"command":"cmake.build","when":"cmake:enableFullFeatureSet"},{"command":"cmake.showBuildCommand","when":"cmake:enableFullFeatureSet"},{"command":"cmake.buildAll","when":"cmake:multiProject && cmake:enableFullFeatureSet"},{"command":"cmake.install","when":"cmake:enableFullFeatureSet"},{"command":"cmake.installAll","when":"cmake:multiProject && cmake:enableFullFeatureSet"},{"command":"cmake.buildWithTarget","when":"cmake:enableFullFeatureSet"},{"command":"cmake.compileFile","when":"cmake:enableFullFeatureSet"},{"command":"cmake.setVariant","when":"cmake:enableFullFeatureSet && !useCMakePresets"},{"command":"cmake.setVariantAll","when":"cmake:multiProject && cmake:enableFullFeatureSet && !useCMakePresets"},{"command":"cmake.setDefaultTarget","when":"cmake:enableFullFeatureSet"},{"command":"cmake.cleanConfigure"},{"command":"cmake.cleanConfigureAll","when":"cmake:multiProject"},{"command":"cmake.cleanConfigureWithDebugger","when":"cmake:cmakeDebuggerAvailable"},{"command":"cmake.cleanConfigureAllWithDebugger","when":"cmake:multiProject && cmake:cmakeDebuggerAvailable"},{"command":"cmake.clean","when":"cmake:enableFullFeatureSet"},{"command":"cmake.cleanAll","when":"cmake:multiProject && cmake:enableFullFeatureSet"},{"command":"cmake.cleanRebuild","when":"cmake:enableFullFeatureSet"},{"command":"cmake.cleanRebuildAll","when":"cmake:multiProject && cmake:enableFullFeatureSet"},{"command":"cmake.editCacheUI","when":"cmake:enableFullFeatureSet"},{"command":"cmake.ctest","when":"cmake:enableFullFeatureSet"},{"command":"cmake.cpack","when":"cmake:enableFullFeatureSet && useCMakePresets"},{"command":"cmake.workflow","when":"cmake:enableFullFeatureSet && useCMakePresets"},{"command":"cmake.ctestAll","when":"cmake:multiProject && cmake:enableFullFeatureSet"},{"command":"cmake.cpackAll","when":"cmake:multiProject && cmake:enableFullFeatureSet && useCMakePresets"},{"command":"cmake.workflowAll","when":"cmake:multiProject && cmake:enableFullFeatureSet && useCMakePresets"},{"command":"cmake.revealTestExplorer","when":"cmake:enableFullFeatureSet && cmake:testExplorerIntegrationEnabled"},{"command":"cmake.refreshTests","when":"cmake:enableFullFeatureSet && cmake:testExplorerIntegrationEnabled"},{"command":"cmake.refreshTestsAll","when":"cmake:multiProject && cmake:enableFullFeatureSet && cmake:testExplorerIntegrationEnabled"},{"command":"cmake.editCache","when":"cmake:enableFullFeatureSet"},{"command":"cmake.debugTarget","when":"!cmake:hideDebugCommand && cmake:enableFullFeatureSet"},{"command":"cmake.debugTargetAll","when":"cmake:multiProject && !cmake:hideDebugCommand && cmake:enableFullFeatureSet"},{"command":"cmake.launchTarget","when":"!cmake:hideLaunchCommand && cmake:enableFullFeatureSet"},{"command":"cmake.launchTargetAll","when":"cmake:multiProject && !cmake:hideLaunchCommand && cmake:enableFullFeatureSet"},{"command":"cmake.selectLaunchTarget","when":"cmake:enableFullFeatureSet"},{"command":"cmake.stop","when":"cmake:enableFullFeatureSet"},{"command":"cmake.stopAll","when":"cmake:multiProject && cmake:enableFullFeatureSet"},{"command":"cmake.logDiagnostics","when":"cmake:enableFullFeatureSet"},{"command":"cmake.outline.configure","when":"never"},{"command":"cmake.outline.configureAll","when":"never"},{"command":"cmake.outline.configureWithDebugger","when":"never"},{"command":"cmake.outline.configureAllWithDebugger","when":"never"},{"command":"cmake.outline.build","when":"never"},{"command":"cmake.outline.buildAll","when":"never"},{"command":"cmake.outline.compileFile","when":"never"},{"command":"cmake.outline.selectWorkspace","when":"never"},{"command":"cmake.outline.cleanConfigure","when":"never"},{"command":"cmake.outline.cleanConfigureAll","when":"never"},{"command":"cmake.outline.cleanConfigureWithDebugger","when":"never"},{"command":"cmake.outline.cleanConfigureAllWithDebugger","when":"never"},{"command":"cmake.outline.clean","when":"never"},{"command":"cmake.outline.cleanAll","when":"never"},{"command":"cmake.outline.cleanRebuild","when":"never"},{"command":"cmake.outline.cleanRebuildAll","when":"never"},{"command":"cmake.outline.editCacheUI","when":"never"},{"command":"cmake.outline.stop","when":"never"},{"command":"cmake.outline.stopAll","when":"never"},{"command":"cmake.outline.buildTarget","when":"never"},{"command":"cmake.outline.runUtilityTarget","when":"never"},{"command":"cmake.outline.debugTarget","when":"never"},{"command":"cmake.outline.launchTarget","when":"never"},{"command":"cmake.outline.setDefaultTarget","when":"never"},{"command":"cmake.outline.setLaunchTarget","when":"never"},{"command":"cmake.outline.revealInCMakeLists","when":"never"},{"command":"cmake.projectStatus.update","when":"never"},{"command":"cmake.pinnedCommands.add","when":"never"},{"command":"cmake.pinnedCommands.remove","when":"never"},{"command":"cmake.pinnedCommands.run","when":"never"},{"command":"cmake.projectStatus.stop","when":"never"},{"command":"cmake.projectStatus.selectKit","when":"never"},{"command":"cmake.projectStatus.configure","when":"never"},{"command":"cmake.projectStatus.cleanConfigure","when":"never"},{"command":"cmake.projectStatus.openSettings","when":"never"},{"command":"cmake.projectStatus.openVisibilitySettings","when":"never"},{"command":"cmake.projectStatus.setVariant","when":"never"},{"command":"cmake.projectStatus.selectConfigurePreset","when":"never"},{"command":"cmake.projectStatus.viewConfigureSettings","when":"never"},{"command":"cmake.projectStatus.build","when":"never"},{"command":"cmake.projectStatus.viewBuildSettings","when":"never"},{"command":"cmake.projectStatus.setDefaultTarget","when":"never"},{"command":"cmake.projectStatus.selectBuildPreset","when":"never"},{"command":"cmake.projectStatus.viewTestSettings","when":"never"},{"command":"cmake.projectStatus.viewPackageSettings","when":"never"},{"command":"cmake.projectStatus.selectPackagePreset","when":"never"},{"command":"cmake.projectStatus.selectWorkflowPreset","when":"never"},{"command":"cmake.projectStatus.ctest","when":"never"},{"command":"cmake.projectStatus.cpack","when":"never"},{"command":"cmake.projectStatus.workflow","when":"never"},{"command":"cmake.projectStatus.debugTarget","when":"never"},{"command":"cmake.projectStatus.launchTarget","when":"never"},{"command":"cmake.projectStatus.setDebugTarget","when":"never"},{"command":"cmake.projectStatus.setLaunchTarget","when":"never"},{"command":"cmake.projectStatus.selectActiveProject","when":"never"},{"command":"cmake.projectStatus.selectTestPreset","when":"never"},{"command":"cmake.projectStatus.setTestTarget","when":"never"}],"view/title":[{"command":"cmake.projectStatus.update","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet","group":"navigation@1"},{"command":"cmake.projectStatus.cleanConfigure","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet","group":"navigation@2"},{"command":"cmake.projectStatus.stop","when":"view == cmake.projectStatus && cmake:isBuilding && cmake:enableFullFeatureSet","group":"navigation@3"},{"command":"cmake.projectStatus.openVisibilitySettings","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet","group":"navigation@4"},{"command":"cmake.projectStatus.openSettings","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet","group":"navigation@4"},{"command":"cmake.outline.configureAll","when":"view == cmake.outline && !cmake:isBuilding","group":"navigation@1"},{"command":"cmake.outline.configureAllWithDebugger","when":"view == cmake.outline && !cmake:isBuilding && cmake:cmakeDebuggerAvailable","group":"navigation@2"},{"command":"cmake.outline.buildAll","when":"view == cmake.outline && !cmake:isBuilding && cmake:enableFullFeatureSet","group":"navigation@3"},{"command":"cmake.outline.stopAll","when":"view == cmake.outline && cmake:isBuilding && cmake:enableFullFeatureSet","group":"navigation@4"},{"command":"cmake.outline.cleanAll","when":"view == cmake.outline && cmake:enableFullFeatureSet","group":"1_cmakeOutline"},{"command":"cmake.outline.cleanConfigureAll","when":"view == cmake.outline","group":"1_cmakeOutline"},{"command":"cmake.outline.cleanConfigureAllWithDebugger","when":"view == cmake.outline && cmake:cmakeDebuggerAvailable","group":"1_cmakeOutline"},{"command":"cmake.outline.cleanRebuildAll","when":"view == cmake.outline && cmake:enableFullFeatureSet","group":"1_cmakeOutline"},{"command":"cmake.outline.editCacheUI","when":"view == cmake.outline && cmake:enableFullFeatureSet","group":"1_cmakeOutline"},{"command":"cmake.pinnedCommands.add","when":"view == cmake.pinnedCommands && cmake:enableFullFeatureSet","group":"navigation@1"}],"view/item/context":[{"command":"cmake.projectStatus.stop","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem == 'stop'","group":"inline"},{"command":"cmake.projectStatus.selectKit","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem == 'kit'","group":"inline"},{"command":"cmake.projectStatus.configure","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem == 'configure'","group":"inline"},{"command":"cmake.projectStatus.cleanConfigure","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem == 'cleanConfigure'","group":"inline"},{"command":"cmake.projectStatus.openSettings","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem == 'openSettings'","group":"inline"},{"command":"cmake.projectStatus.openVisibilitySettings","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem == 'openVisibilitySettings'","group":"inline"},{"command":"cmake.projectStatus.setVariant","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem == 'variant'","group":"inline"},{"command":"cmake.projectStatus.selectConfigurePreset","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem =~ /configPreset/","group":"inline"},{"command":"cmake.projectStatus.viewConfigureSettings","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem == 'configPreset - overrides present'","group":"inline"},{"command":"cmake.projectStatus.build","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem == 'build'","group":"inline"},{"command":"cmake.projectStatus.setDefaultTarget","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem == 'buildTarget'","group":"inline"},{"command":"cmake.projectStatus.selectBuildPreset","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem =~ /buildPreset/","group":"inline"},{"command":"cmake.projectStatus.viewBuildSettings","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem == 'buildPreset - overrides present'","group":"inline"},{"command":"cmake.projectStatus.ctest","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem == 'test'","group":"inline"},{"command":"cmake.projectStatus.cpack","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem == 'package' && useCMakePresets","group":"inline"},{"command":"cmake.projectStatus.workflow","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem == 'workflow' && useCMakePresets","group":"inline"},{"command":"cmake.projectStatus.setTestTarget","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem == 'testTarget'","group":"inline"},{"command":"cmake.projectStatus.selectTestPreset","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem =~ /testPreset/","group":"inline"},{"command":"cmake.projectStatus.viewTestSettings","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem == 'testPreset - overrides present'","group":"inline"},{"command":"cmake.projectStatus.viewPackageSettings","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem == 'packagePreset - overrides present'","group":"inline"},{"command":"cmake.projectStatus.selectPackagePreset","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem =~ /packagePreset/","group":"inline"},{"command":"cmake.projectStatus.selectWorkflowPreset","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem == 'workflowPreset'","group":"inline"},{"command":"cmake.projectStatus.debugTarget","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem == 'debug'","group":"inline"},{"command":"cmake.projectStatus.setDebugTarget","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem == 'debugTarget'","group":"inline"},{"command":"cmake.projectStatus.launchTarget","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem == 'launch'","group":"inline"},{"command":"cmake.projectStatus.setLaunchTarget","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem == 'launchTarget'","group":"inline"},{"command":"cmake.projectStatus.selectActiveProject","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem == 'activeProject'","group":"inline"},{"command":"cmake.outline.buildTarget","when":"view == cmake.outline && cmake:enableFullFeatureSet && viewItem =~ /canBuild=true|canRun=true/","group":"inline"},{"command":"cmake.outline.buildTarget","when":"view == cmake.outline && cmake:enableFullFeatureSet && viewItem =~ /canBuild=true/","group":"1_targetActions@1"},{"command":"cmake.outline.runUtilityTarget","when":"view == cmake.outline && cmake:enableFullFeatureSet && viewItem =~ /canRun=true/","group":"1_targetActions@2"},{"command":"cmake.outline.debugTarget","when":"view == cmake.outline && cmake:enableFullFeatureSet && viewItem =~ /type=EXECUTABLE/","group":"1_targetActions@3"},{"command":"cmake.outline.launchTarget","when":"view == cmake.outline && cmake:enableFullFeatureSet && viewItem =~ /type=EXECUTABLE/","group":"1_targetActions@4"},{"command":"cmake.outline.revealInCMakeLists","when":"view == cmake.outline && cmake:enableFullFeatureSet && viewItem =~ /nodeType=target/","group":"1_targetActions@5"},{"command":"cmake.outline.setDefaultTarget","when":"view == cmake.outline && cmake:enableFullFeatureSet && viewItem =~ /canRun=true|canBuild=true/ && viewItem =~ /isDefault=false/","group":"2_targetState@1"},{"command":"cmake.outline.setLaunchTarget","when":"view == cmake.outline && cmake:enableFullFeatureSet && viewItem =~ /type=EXECUTABLE/ && viewItem =~ /isLaunch=false/","group":"2_targetState@2"},{"command":"cmake.outline.configureAll","when":"view == cmake.outline && viewItem =~ /nodeType=file/ && viewItem =~ /cmakelists=true/","group":"1_fileActions@1"},{"command":"cmake.outline.configureAllWithDebugger","when":"view == cmake.outline && viewItem =~ /nodeType=file/ && viewItem =~ /cmakelists=true/ && cmake:cmakeDebuggerAvailable","group":"1_fileActions@2"},{"command":"cmake.outline.buildAll","when":"cmake:enableFullFeatureSet && view == cmake.outline && viewItem =~ /nodeType=file/ && viewItem =~ /cmakelists=true/","group":"1_fileActions@3"},{"command":"cmake.outline.cleanAll","when":"cmake:enableFullFeatureSet && view == cmake.outline && viewItem =~ /nodeType=file/ && viewItem =~ /cmakelists=true/","group":"1_fileActions@4"},{"command":"cmake.outline.cleanConfigureAll","when":"view == cmake.outline && viewItem =~ /nodeType=file/ && viewItem =~ /cmakelists=true/","group":"1_fileActions@5"},{"command":"cmake.outline.cleanConfigureAllWithDebugger","when":"view == cmake.outline && viewItem =~ /nodeType=file/ && viewItem =~ /cmakelists=true/ && cmake:cmakeDebuggerAvailable","group":"1_fileActions@5"},{"command":"cmake.outline.cleanRebuildAll","when":"cmake:enableFullFeatureSet && view == cmake.outline && viewItem =~ /nodeType=file/ && viewItem =~ /cmakelists=true/","group":"1_fileActions@6"},{"command":"cmake.outline.compileFile","when":"cmake:enableFullFeatureSet && view == cmake.outline && viewItem =~ /nodeType=file/ && viewItem =~ /compilable=true/","group":"1_fileActions@7"},{"command":"cmake.outline.configure","when":"view == cmake.outline && viewItem =~ /nodeType=project/","group":"inline@1"},{"command":"cmake.outline.build","when":"cmake:enableFullFeatureSet && view == cmake.outline && viewItem =~ /nodeType=project/","group":"inline@2"},{"command":"cmake.outline.clean","when":"cmake:enableFullFeatureSet && view == cmake.outline && viewItem =~ /nodeType=project/","group":"inline@3"},{"command":"cmake.outline.compileFile","when":"cmake:enableFullFeatureSet && view == cmake.outline && viewItem =~ /nodeType=file/ && viewItem =~ /compilable=true/","group":"inline"},{"command":"cmake.outline.configure","when":"view == cmake.outline && viewItem =~ /nodeType=file/ && viewItem =~ /cmakelists=true/","group":"inline"},{"command":"cmake.outline.configureWithDebugger","when":"view == cmake.outline && viewItem =~ /nodeType=file/ && viewItem =~ /cmakelists=true/ && cmake:cmakeDebuggerAvailable","group":"inline"},{"command":"cmake.outline.selectWorkspace","when":"cmake:enableFullFeatureSet && view == cmake.outline && viewItem =~ /nodeType=workspace/ && viewItem =~ /selected=false/","group":"inline"},{"command":"cmake.pinnedCommands.remove","when":"view == cmake.pinnedCommands && cmake:enableFullFeatureSet","group":"pinnedCommands@1"},{"command":"cmake.pinnedCommands.run","when":"view == cmake.pinnedCommands && cmake:enableFullFeatureSet","group":"inline"}],"editor/title/context":[{"command":"cmake.compileFile","when":"resourceLangId == cpp && cmake:enableFullFeatureSet"},{"command":"cmake.compileFile","when":"resourceLangId == c && cmake:enableFullFeatureSet"}],"editor/title":[{"command":"cmake.compileFile","when":"resourceLangId == cpp && cmake:enableFullFeatureSet","group":"navigation"},{"command":"cmake.compileFile","when":"resourceLangId == c && cmake:enableFullFeatureSet","group":"navigation"}],"explorer/context":[{"command":"cmake.compileFile","when":"resourceLangId == cpp && cmake:enableFullFeatureSet"},{"command":"cmake.compileFile","when":"resourceLangId == c && cmake:enableFullFeatureSet"},{"command":"cmake.outline.configureAll","when":"resourceFilename == CMakeLists.txt"},{"command":"cmake.outline.configureAllWithDebugger","when":"resourceFilename == CMakeLists.txt && cmake:cmakeDebuggerAvailable"},{"command":"cmake.outline.buildAll","when":"resourceFilename == CMakeLists.txt && cmake:enableFullFeatureSet"},{"command":"cmake.outline.cleanAll","when":"resourceFilename == CMakeLists.txt && cmake:enableFullFeatureSet"},{"command":"cmake.outline.cleanConfigureAll","when":"resourceFilename == CMakeLists.txt"},{"command":"cmake.outline.cleanConfigureAllWithDebugger","when":"resourceFilename == CMakeLists.txt && cmake:cmakeDebuggerAvailable"},{"command":"cmake.outline.cleanRebuildAll","when":"resourceFilename == CMakeLists.txt && cmake:enableFullFeatureSet"}],"touchBar":[{"command":"cmake.quickStart","when":"cmake:enableTouchBar && !cmake:enableFullFeatureSet","group":"CMake:start"},{"command":"cmake.configure","when":"cmake:enableTouchBar.configure && !cmake:isBuilding && !cmake:isConfiguring","group":"CMake:build"},{"command":"cmake.build","alt":"cmake.configure","when":"cmake:enableTouchBar.build && cmake:enableFullFeatureSet && !cmake:isBuilding && !cmake:isConfiguring","group":"CMake:build"},{"command":"cmake.stop","when":"cmake:enableTouchBar.build && cmake:enableFullFeatureSet && cmake:isBuilding","group":"CMake:build"},{"command":"cmake.debugTarget","alt":"cmake.selectLaunchTarget","when":"cmake:enableTouchBar.debug && cmake:enableFullFeatureSet && !cmake:hideDebugCommand","group":"CMake:run"},{"command":"cmake.launchTarget","when":"cmake:enableTouchBar.launch && cmake:enableFullFeatureSet && !cmake:hideLaunchCommand","group":"CMake:run"}]},"configuration":{"type":"object","title":"CMake Tools","properties":{"cmake.autoSelectActiveFolder":{"type":"boolean","default":true,"description":"Select active folder automatically.","scope":"window"},"cmake.defaultActiveFolder":{"type":"string","default":"","description":"Set the default active folder (only works when cmake.autoSelectActiveFolder is disable).","scope":"window"},"cmake.exclude":{"type":"array","items":{"type":"string"},"default":[],"description":"The extension will ignore the folders listed in this setting. The folders should be listed as absolute paths.","scope":"window"},"cmake.cmakePath":{"type":"string","default":"cmake","description":"Name/path of the CMake executable to use.","scope":"resource"},"cmake.buildDirectory":{"type":"string","default":"${workspaceFolder}/build","description":"The directory where CMake build files will go.","scope":"resource"},"cmake.installPrefix":{"type":"string","default":null,"description":"The directory where CMake installed files will go.","scope":"resource"},"cmake.sourceDirectory":{"oneOf":[{"type":"string"},{"type":"array","items":{"type":"string"}}],"description":"Path or array of paths to the CMakeLists.txt root directory/directories.","default":"${workspaceFolder}","scope":"resource"},"cmake.saveBeforeBuild":{"type":"boolean","default":true,"description":"Save open files before building.","scope":"resource"},"cmake.buildBeforeRun":{"type":"boolean","default":true,"description":"Build the target before running it.","scope":"resource"},"cmake.clearOutputBeforeBuild":{"type":"boolean","default":true,"description":"Clear build output before each build.","scope":"resource"},"cmake.configureSettings":{"type":"object","default":{},"additionalProperties":{"oneOf":[{"type":"string"},{"type":"boolean"},{"type":"number"},{"type":"array","items":{"type":"string"}},{"type":"object","properties":{"type":{"type":"string","enum":["","BOOL","STRING","FILEPATH","PATH"]},"value":{}},"additionalProperties":false,"required":["type","value"]}]},"description":"CMake variables to set on the command line. This setting is specific to kits and will not be used for CMake Presets.","scope":"resource"},"cmake.cacheInit":{"oneOf":[{"type":"string","description":"Path to a cache-initializing CMake file."},{"type":"array","description":"List of cache initializer files.","items":{"type":"string","description":"A cache initializing CMake file."}}],"description":"Provide cache-initializing CMake file(s).","scope":"resource"},"cmake.preferredGenerators":{"type":"array","default":[],"description":"The preferred CMake generator(s) to use when configuring (tried in order of listing).","scope":"resource"},"cmake.generator":{"type":"string","default":null,"description":"The CMake generator to use.","scope":"resource"},"cmake.toolset":{"type":"string","default":null,"description":"The CMake toolset to use when configuring.","scope":"resource"},"cmake.platform":{"type":"string","default":null,"description":"The CMake platform to use when configuring.","scope":"resource"},"cmake.configureArgs":{"type":"array","description":"Additional arguments to pass to CMake when configuring. When using CMake Presets, these arguments are temporarily appended to the arguments provided by the active configure preset.","items":{"type":"string","title":"CMake Arguments"},"default":[],"scope":"resource"},"cmake.buildArgs":{"type":"array","description":"Additional arguments to pass to CMake when building. When using CMake Presets, these arguments are temporarily appended to the arguments provided by the active build preset.","items":{"type":"string"},"default":[],"scope":"resource"},"cmake.buildToolArgs":{"type":"array","description":"Additional arguments to pass to the underlying build tool when building. When using CMake Presets, these arguments are temporarily appended to the arguments provided by the active build preset to invoke the build tool.","items":{"type":"string"},"default":[],"scope":"resource"},"cmake.parallelJobs":{"type":"number","default":0,"description":"The number of parallel build jobs. Use zero to automatically detect the number of CPUs. Setting this to 1 will omit the parallelism flag (-j) from the underlying build command, which has a generator-dependent effect on build parallelism.","scope":"resource"},"cmake.ctestPath":{"type":"string","default":null,"description":"Path to CTest executable. If null, will be inferred from cmake.cmakePath (recommended to leave null).","scope":"resource"},"cmake.cpackPath":{"type":"string","default":null,"when":"useCMakePresets == true","description":"Path to CPack executable. If null, will be inferred from cmake.cmakePath (recommended to leave null). Will be ignored when kits are used instead of presets.","scope":"resource"},"cmake.ctest.parallelJobs":{"type":"number","default":0,"markdownDescription":"The number of parallel test jobs. Use zero to use the value of `#cmake.parallelJobs#`. This only applies when `#cmake.ctest.allowParallelJobs#` is set to `true`.","scope":"resource"},"cmake.ctest.allowParallelJobs":{"type":"boolean","default":false,"description":"Allows ctests to be run in parallel, however the result output may be garbled as a result and the Test Explorer may not accurately reflect test progress.","scope":"resource"},"cmake.ctest.testExplorerIntegrationEnabled":{"type":"boolean","default":true,"description":"Whether or not the integration with the test explorer is enabled. This is helpful to disable if you prefer using a different extension for test integration.","scope":"machine-overridable"},"cmake.ctest.testSuiteDelimiter":{"type":"string","default":null,"markdownDescription":"Optional delimiter used to separate test suite names and group tests hierarchically in the Test Explorer. This string is used in a Regular Expression, so some delimiters may need escaping. Examples: `-` ( One delimiter: `-`), `\\.|::` (Two delimiters: `.` or `::`. Note that `.` needs to be escaped.)","scope":"machine-overridable"},"cmake.ctest.testSuiteDelimiterMaxOccurrence":{"type":"number","default":0,"markdownDescription":"Maximum number of times the delimiter may be used to split the name of the test. `0` means no limit.","scope":"machine-overridable"},"cmake.ctest.debugLaunchTarget":{"type":"string","default":null,"description":"Target name from launch.json to start when debugging a test with CTest. By default and in case of a non-existing target, this will show a picker with all available targets.","scope":"resource"},"cmake.parseBuildDiagnostics":{"type":"boolean","default":true,"description":"Parse compiler output for warnings and errors.","scope":"resource"},"cmake.enabledOutputParsers":{"type":"array","markdownDescription":"Output parsers to use. Supported parsers `cmake`, `gcc`, `gnuld` for GNULD-style linker output, `msvc` for Microsoft Visual C++, `ghs` for the Green Hills compiler with --no_wrap_diagnostics --brief_diagnostics, and `diab` for the Wind River Diab compiler.","items":{"type":"string","enum":["cmake","gcc","gnuld","msvc","ghs","diab","iar"]},"default":["cmake","gcc","gnuld","msvc","ghs","diab"],"scope":"resource"},"cmake.debugConfig":{"type":"object","description":"The debug configuration to use when debugging a target.","properties":{"symbolSearchPath":{"type":"string","description":"Visual Studio debugger symbol search paths."},"additionalSOLibSearchPath":{"type":"string","description":"Paths for GDB or LLDB to search for .so files."},"externalConsole":{"type":"boolean","description":"Launch an external console for the program."},"console":{"type":"string","enum":["internalConsole","integratedTerminal","externalTerminal","newExternalWindow"],"enumDescriptions":["Output to the VS Code Debug Console. This doesn't support reading console input (ex:`std::cin` or `scanf`).","VS Code's integrated terminal.","Console applications will be launched in an external terminal window. The window will be reused in relaunch scenarios and will not automatically disappear when the application exits.","Console applications will be launched in their own external console window which will end when the application stops. Non-console applications will run without a terminal, and stdout/stderr will be ignored."],"markdownDescription":"Where to launch the debug target. Defaults to `internalConsole` if not defined."},"logging":{"type":"object","description":"Tell what types of messages should be logged to the console.","properties":{"exceptions":{"type":"boolean","default":true},"moduleLoad":{"type":"boolean","default":true},"programOutput":{"type":"boolean","default":true},"engineLogging":{"type":"boolean","default":false},"trace":{"type":"boolean","default":false},"traceResponse":{"type":"boolean","default":false}}},"visualizerFile":{"anyOf":[{"type":"string","default":""},{"type":"array","default":[],"items":{"type":"string"}}],"description":".natvis file to be used when debugging."},"args":{"type":"array","description":"Arguments to pass to program command line.","items":{"type":"string"},"default":[]},"cwd":{"type":"string","description":"Set the working directory for the program."},"environment":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string","description":"Name of environment variable."},"value":{"type":"string","description":"Value for the environment variable."}}}},"MIMode":{"type":"string","enum":["gdb","lldb"]},"miDebuggerPath":{"type":"string","description":"Path to gdb or lldb debugger."},"stopAtEntry":{"type":"boolean","description":"Stop at the entry point of the target.","default":false},"setupCommands":{"type":"array","description":"Command to set up gdb or lldb.","items":{"type":"object","properties":{"text":{"type":"string","description":"Command to run."},"description":{"type":"string","description":"Description of the command."},"ignoreFailures":{"type":"boolean","default":false}}}},"customLaunchSetupCommands":{"type":"array","description":"Command to set up gdb or lldb.","items":{"type":"object","properties":{"text":{"type":"string","description":"Command to run."},"description":{"type":"string","description":"Description of the command."},"ignoreFailures":{"type":"boolean","default":false}}}},"launchCompleteCommand":{"type":"string"},"dumpPath":{"type":"string"},"coreDumpPath":{"type":"string"}},"scope":"resource"},"cmake.defaultVariants":{"type":"object","$schema":"cmake-tools-schema://schemas/variants-schema.json","description":"Configure the default variant settings.","default":{"buildType":{"default":"debug","description":"The build type.","choices":{"debug":{"short":"Debug","long":"Disable optimizations - include debug information.","buildType":"Debug"},"release":{"short":"Release","long":"Optimize for speed - exclude debug information.","buildType":"Release"},"minsize":{"short":"MinSizeRel","long":"Optimize for smallest binary size - exclude debug information.","buildType":"MinSizeRel"},"reldeb":{"short":"RelWithDebInfo","long":"Optimize for speed - include debug information.","buildType":"RelWithDebInfo"},"unspecified":{"short":"Unspecified","long":"Let CMake pick the default build type.","buildType":"Unspecified"}}}},"scope":"resource"},"cmake.ctestArgs":{"type":"array","items":{"type":"string"},"description":"Additional arguments to pass to CTest. When using CMake Presets, these arguments are temporarily added to the arguments provided by the active test preset.","default":[],"scope":"resource"},"cmake.ctestDefaultArgs":{"type":"array","items":{"type":"string"},"description":"Arguments passed by default to CTest.","default":["-T","test","--output-on-failure"],"scope":"machine-overridable"},"cmake.cpackArgs":{"type":"array","when":"useCMakePresets == true","items":{"type":"string"},"description":"Additional arguments to pass to CPack (only when using presets, not supported for kits). These arguments are temporarily added to the arguments provided by the active package preset.","default":[],"scope":"resource"},"cmake.environment":{"type":"object","default":{},"description":"Environment variables to set when running CMake commands. When using CMake Presets, these are temporarily added to the environment used for CMake commands.","additionalProperties":{"type":"string","description":"Value for the environment variable."},"scope":"resource"},"cmake.configureEnvironment":{"type":"object","default":{},"description":"Environment variables to pass to CMake during configure. When using CMake Presets, these are temporarily added to the environment provided by the active configure preset.","additionalProperties":{"type":"string","description":"Value for the environment variable."},"scope":"resource"},"cmake.buildEnvironment":{"type":"object","default":{},"description":"Environment variables to pass to CMake during build. When using CMake Presets, these are temporarily added to the environment provided by the active build preset.","additionalProperties":{"type":"string","description":"Value for the environment variable."},"scope":"resource"},"cmake.testEnvironment":{"type":"object","default":{},"description":"Environment variables to pass to CTest. When using CMake Presets, these are temporarily added to the environment provided by the active test preset.","additionalProperties":{"type":"string","description":"Value for the environment variable."},"scope":"resource"},"cmake.cpackEnvironment":{"type":"object","default":{},"when":"useCMakePresets == true","description":"Environment variables to set when packaging with CPack (only when using presets, not supported for kits). These are temporarily added to the environment used for CPack runs.","additionalProperties":{"type":"string","description":"Value for the environment variable."},"scope":"resource"},"cmake.mingwSearchDirs":{"type":"array","items":{"type":"string","description":"Path to a directory."},"default":[],"description":"Directories where MinGW may be installed.","scope":"window","markdownDeprecationMessage":"**Deprecated**: Please use `#cmake.additionalCompilerSearchDirs#` instead."},"cmake.additionalCompilerSearchDirs":{"type":"array","items":{"type":"string","description":"Path to a directory."},"default":[],"description":"Additional directories to search for compilers.","scope":"window"},"cmake.emscriptenSearchDirs":{"type":"array","items":{"type":"string","description":"Path to a directory."},"default":[],"description":"Directories where Emscripten may be installed.","scope":"window"},"cmake.mergedCompileCommands":{"type":"string","default":null,"description":"Recursively collect and merge all compile_commands.json found in the cmake.buildDirectory.","scope":"resource"},"cmake.copyCompileCommands":{"type":"string","default":null,"description":"Copy compile_commands.json to this location after a successful configure.","scope":"resource"},"cmake.configureOnOpen":{"type":"boolean","default":true,"description":"Automatically configure CMake project directories when they are opened.","scope":"resource"},"cmake.configureOnEdit":{"type":"boolean","default":true,"description":"Automatically configure CMake project directories when cmake.sourceDirectory or CMakeLists.txt content are saved.","scope":"resource"},"cmake.deleteBuildDirOnCleanConfigure":{"type":"boolean","default":false,"description":"Delete the entire build directory when a clean configure is invoked.","scope":"resource"},"cmake.setBuildTypeOnMultiConfig":{"type":"boolean","default":false,"description":"Set CMAKE_BUILD_TYPE also on multi config generators.","scope":"resource"},"cmake.skipConfigureIfCachePresent":{"type":"boolean","default":null,"description":"Skip over the configure process if cache is present.","scope":"resource"},"cmake.cmakeCommunicationMode":{"type":"string","default":"automatic","enum":["legacy","serverApi","fileApi","automatic"],"description":"The protocol used to communicate between the extension and CMake.","scope":"resource"},"cmake.showSystemKits":{"type":"boolean","default":true,"description":"Include system kits in kit selection.","scope":"resource"},"cmake.ignoreKitEnv":{"type":"boolean","default":false,"description":"Do not use the kit environment variables when running CMake commands.","scope":"resource"},"cmake.buildTask":{"type":"boolean","default":false,"description":"Build using tasks.json instead of internal process.","scope":"resource"},"cmake.outputLogEncoding":{"type":"string","default":"auto","description":"Encoding of the output from external commands (eg.cmake -- build).","scope":"window"},"cmake.enableTraceLogging":{"type":"boolean","default":false,"description":"Enable trace logging to file and console (very noisy).","scope":"window"},"cmake.loggingLevel":{"type":"string","default":"info","description":"Tell what types of messages should be logged to the console.","enum":["trace","debug","info","note","warning","error","fatal"],"scope":"window"},"cmake.touchbar.visibility":{"type":"string","default":"default","description":"Configures how the extension displays the buttons on a MacBook Touch Bar.","enum":["default","hidden"],"enumDescriptions":["Show Touch Bar buttons on supported systems.","Do not show Touch Bar buttons."],"scope":"window"},"cmake.touchbar.advanced":{"type":"object","scope":"window","description":"Configures advanced settings for how the extension displays buttons on a MacBook Touch Bar.","properties":{"build":{"type":"string","default":"default","description":"Configures how the extension displays the buttons on a MacBook Touch Bar.","enum":["default","hidden"],"enumDescriptions":["Show Touch Bar buttons on supported systems.","Do not show Touch Bar buttons."]},"configure":{"type":"string","default":"default","description":"Configures how the extension displays the buttons on a MacBook Touch Bar.","enum":["default","hidden"],"enumDescriptions":["Show Touch Bar buttons on supported systems.","Do not show Touch Bar buttons."]},"debug":{"type":"string","default":"default","description":"Configures how the extension displays the buttons on a MacBook Touch Bar.","enum":["default","hidden"],"enumDescriptions":["Show Touch Bar buttons on supported systems.","Do not show Touch Bar buttons."]},"launch":{"type":"string","default":"default","description":"Configures how the extension displays the buttons on a MacBook Touch Bar.","enum":["default","hidden"],"enumDescriptions":["Show Touch Bar buttons on supported systems.","Do not show Touch Bar buttons."]}}},"cmake.showConfigureWithDebuggerNotification":{"type":"boolean","default":true,"description":"Enables the pop-up that asks the user if, upon a failed configure, they want to configure with the CMake Debugger.","scope":"application"},"cmake.showNotAllDocumentsSavedQuestion":{"type":"boolean","default":true,"description":"Enables the pop-up that asks the user if they want to continue the build despite some files possibly not being saved. If not enabled, the build will be continued.","scope":"application"},"cmake.options.statusBarVisibility":{"type":"string","default":"hidden","markdownDescription":"Configures how the extension displays the options in the Status Bar. These settings may be overwritten by the more specific `#cmake.options.advanced.statusBarVisibility#` setting. [More info](https://aka.ms/cmaketoolsoptionsconfiguration).","enum":["visible","compact","icon","hidden"],"scope":"window"},"cmake.options.advanced":{"type":"object","default":{"build":{"statusBarVisibility":"inherit","inheritDefault":"visible"},"launch":{"statusBarVisibility":"inherit","inheritDefault":"visible"},"debug":{"statusBarVisibility":"inherit","inheritDefault":"visible"}},"markdownDescription":"Configures the settings for individual Project Status View and status bar options. These settings may overwrite the more general `#cmake.options.statusBarVisibility#` setting. [More info](https://aka.ms/cmaketoolsoptionsconfiguration).","properties":{"configure":{"type":"object","properties":{"projectStatusVisibility":{"type":"string","description":"Configures how the extension displays this option the Project Status View.","enum":["visible","hidden"],"enumDescriptions":["Show the node in the Project Status View.","Hide the node and its children in the Project Status View."]}}},"configurePreset":{"type":"object","properties":{"statusBarVisibility":{"type":"string","markdownDescription":"Configures the settings for individual status bar options. These settings overwrite the more general `#cmake.options.statusBarVisibility#` setting.","enum":["visible","compact","icon","hidden","inherit"],"markdownEnumDescriptions":["Show the status bar option at full size.","Show the status bar option's icon only.","Show the status bar option with the text truncated to the length specified in `#cmake.status.advanced.statusBarLength#` (default is 20).","Hides the status bar option.","If the more general `#cmake.options.statusBarVisibility#` setting is set to `hidden`, this defaults to what is set in the `#cmake.options.advanced.inheritDefault#` setting, else this inherits the `#cmake.options.statusBarVisibility#` setting."]},"inheritDefault":{"type":"string","markdownDescription":"Configures what the `#cmake.options.advanced.statusBarVisibility#` setting's `inherit` option defaults to if `#cmake.options.statusBarVisibility#` is set to `hidden`. This has the same options as the `#cmake.options.advanced.statusBarVisibility#` setting, minus the `inherit` option.","enum":["visible","compact","icon","hidden"]},"statusBarLength":{"description":"Configures the maximum length of visible text in the Status Bar when set to `compact` mode.","type":"integer","default":20}}},"buildPreset":{"type":"object","properties":{"statusBarVisibility":{"type":"string","markdownDescription":"Configures the settings for individual status bar options. These settings overwrite the more general `#cmake.options.statusBarVisibility#` setting.","enum":["visible","compact","icon","hidden","inherit"],"markdownEnumDescriptions":["Show the status bar option at full size.","Show the status bar option's icon only.","Show the status bar option with the text truncated to the length specified in `#cmake.status.advanced.statusBarLength#` (default is 20).","Hides the status bar option.","If the more general `#cmake.options.statusBarVisibility#` setting is set to `hidden`, this defaults to what is set in the `#cmake.options.advanced.inheritDefault#` setting, else this inherits the `#cmake.options.statusBarVisibility#` setting."]},"inheritDefault":{"type":"string","markdownDescription":"Configures what the `#cmake.options.advanced.statusBarVisibility#` setting's `inherit` option defaults to if `#cmake.options.statusBarVisibility#` is set to `hidden`. This has the same options as the `#cmake.options.advanced.statusBarVisibility#` setting, minus the `inherit` option.","enum":["visible","compact","icon","hidden"]},"statusBarLength":{"description":"Configures the maximum length of visible text in the Status Bar when set to `compact` mode.","type":"integer","default":20}}},"testPreset":{"type":"object","properties":{"statusBarVisibility":{"type":"string","markdownDescription":"Configures the settings for individual status bar options. These settings overwrite the more general `#cmake.options.statusBarVisibility#` setting.","enum":["visible","compact","icon","hidden","inherit"],"markdownEnumDescriptions":["Show the status bar option at full size.","Show the status bar option's icon only.","Show the status bar option with the text truncated to the length specified in `#cmake.status.advanced.statusBarLength#` (default is 20).","Hides the status bar option.","If the more general `#cmake.options.statusBarVisibility#` setting is set to `hidden`, this defaults to what is set in the `#cmake.options.advanced.inheritDefault#` setting, else this inherits the `#cmake.options.statusBarVisibility#` setting."]},"inheritDefault":{"type":"string","markdownDescription":"Configures what the `#cmake.options.advanced.statusBarVisibility#` setting's `inherit` option defaults to if `#cmake.options.statusBarVisibility#` is set to `hidden`. This has the same options as the `#cmake.options.advanced.statusBarVisibility#` setting, minus the `inherit` option.","enum":["visible","compact","icon","hidden"]},"statusBarLength":{"description":"Configures the maximum length of visible text in the Status Bar when set to `compact` mode.","type":"integer","default":20}}},"packagePreset":{"type":"object","properties":{"statusBarVisibility":{"type":"string","markdownDescription":"Configures the settings for individual status bar options. These settings overwrite the more general `#cmake.options.statusBarVisibility#` setting.","enum":["visible","compact","icon","hidden","inherit"],"markdownEnumDescriptions":["Show the status bar option at full size.","Show the status bar option's icon only.","Show the status bar option with the text truncated to the length specified in `#cmake.status.advanced.statusBarLength#` (default is 20).","Hides the status bar option.","If the more general `#cmake.options.statusBarVisibility#` setting is set to `hidden`, this defaults to what is set in the `#cmake.options.advanced.inheritDefault#` setting, else this inherits the `#cmake.options.statusBarVisibility#` setting."]},"inheritDefault":{"type":"string","markdownDescription":"Configures what the `#cmake.options.advanced.statusBarVisibility#` setting's `inherit` option defaults to if `#cmake.options.statusBarVisibility#` is set to `hidden`. This has the same options as the `#cmake.options.advanced.statusBarVisibility#` setting, minus the `inherit` option.","enum":["visible","compact","icon","hidden"]},"statusBarLength":{"description":"Configures the maximum length of visible text in the Status Bar when set to `compact` mode.","type":"integer","default":20}}},"workflowPreset":{"type":"object","properties":{"statusBarVisibility":{"type":"string","markdownDescription":"Configures the settings for individual status bar options. These settings overwrite the more general `#cmake.options.statusBarVisibility#` setting.","enum":["visible","compact","icon","hidden","inherit"],"markdownEnumDescriptions":["Show the status bar option at full size.","Show the status bar option's icon only.","Show the status bar option with the text truncated to the length specified in `#cmake.status.advanced.statusBarLength#` (default is 20).","Hides the status bar option.","If the more general `#cmake.options.statusBarVisibility#` setting is set to `hidden`, this defaults to what is set in the `#cmake.options.advanced.inheritDefault#` setting, else this inherits the `#cmake.options.statusBarVisibility#` setting."]},"inheritDefault":{"type":"string","markdownDescription":"Configures what the `#cmake.options.advanced.statusBarVisibility#` setting's `inherit` option defaults to if `#cmake.options.statusBarVisibility#` is set to `hidden`. This has the same options as the `#cmake.options.advanced.statusBarVisibility#` setting, minus the `inherit` option.","enum":["visible","compact","icon","hidden"]},"statusBarLength":{"description":"Configures the maximum length of visible text in the Status Bar when set to `compact` mode.","type":"integer","default":20}}},"kit":{"type":"object","properties":{"statusBarVisibility":{"type":"string","markdownDescription":"Configures the settings for individual status bar options. These settings overwrite the more general `#cmake.options.statusBarVisibility#` setting.","enum":["visible","compact","icon","hidden","inherit"],"markdownEnumDescriptions":["Show the status bar option at full size.","Show the status bar option's icon only.","Show the status bar option with the text truncated to the length specified in `#cmake.status.advanced.statusBarLength#` (default is 20).","Hides the status bar option.","If the more general `#cmake.options.statusBarVisibility#` setting is set to `hidden`, this defaults to what is set in the `#cmake.options.advanced.inheritDefault#` setting, else this inherits the `#cmake.options.statusBarVisibility#` setting."]},"inheritDefault":{"type":"string","markdownDescription":"Configures what the `#cmake.options.advanced.statusBarVisibility#` setting's `inherit` option defaults to if `#cmake.options.statusBarVisibility#` is set to `hidden`. This has the same options as the `#cmake.options.advanced.statusBarVisibility#` setting, minus the `inherit` option.","enum":["visible","compact","icon","hidden"]},"statusBarLength":{"description":"Configures the maximum length of visible text in the Status Bar when set to `compact` mode.","type":"integer","default":20}}},"variant":{"type":"object","properties":{"statusBarVisibility":{"type":"string","markdownDescription":"Configures the settings for individual status bar options. These settings overwrite the more general `#cmake.options.statusBarVisibility#` setting.","enum":["visible","compact","icon","hidden","inherit"],"markdownEnumDescriptions":["Show the status bar option at full size.","Show the status bar option's icon only.","Show the status bar option with the status message removed.","Hides the status bar option.","If the more general `#cmake.options.statusBarVisibility#` setting is set to `hidden`, this defaults to what is set in the `#cmake.options.advanced.inheritDefault#` setting, else this inherits the `#cmake.options.statusBarVisibility#` setting."]},"inheritDefault":{"type":"string","markdownDescription":"Configures what the `#cmake.options.advanced.statusBarVisibility#` setting's `inherit` option defaults to if `#cmake.options.statusBarVisibility#` is set to `hidden`. This has the same options as the `#cmake.options.advanced.statusBarVisibility#` setting, minus the `inherit` option.","enum":["visible","compact","icon","hidden"]}}},"folder":{"type":"object","properties":{"statusBarVisibility":{"type":"string","markdownDescription":"Configures the settings for individual status bar options. These settings overwrite the more general `#cmake.options.statusBarVisibility#` setting.","enum":["visible","compact","icon","hidden","inherit"],"markdownEnumDescriptions":["Show the status bar option at full size.","Show the status bar option's icon only.","Show the status bar option with the text truncated to the length specified in `#cmake.status.advanced.statusBarLength#` (default is 20).","Hides the status bar option.","If the more general `#cmake.options.statusBarVisibility#` setting is set to `hidden`, this defaults to what is set in the `#cmake.options.advanced.inheritDefault#` setting, else this inherits the `#cmake.options.statusBarVisibility#` setting."]},"inheritDefault":{"type":"string","markdownDescription":"Configures what the `#cmake.options.advanced.statusBarVisibility#` setting's `inherit` option defaults to if `#cmake.options.statusBarVisibility#` is set to `hidden`. This has the same options as the `#cmake.options.advanced.statusBarVisibility#` setting, minus the `inherit` option.","enum":["visible","compact","icon","hidden"]},"statusBarLength":{"description":"Configures the maximum length of visible text in the Status Bar when set to `compact` mode.","type":"integer","default":20},"projectStatusVisibility":{"type":"string","description":"Configures how the extension displays this option the Project Status View.","enum":["visible","hidden"],"enumDescriptions":["Show the node in the Project Status View.","Hide the node and its children in the Project Status View."]}}},"buildTarget":{"type":"object","properties":{"statusBarVisibility":{"type":"string","markdownDescription":"Configures the settings for individual status bar options. These settings overwrite the more general `#cmake.options.statusBarVisibility#` setting.","enum":["visible","compact","hidden","inherit"],"markdownEnumDescriptions":["Show the status bar option at full size.","Show the status bar option with the text truncated to the length specified in `#cmake.status.advanced.statusBarLength#` (default is 20).","Hides the status bar option.","If the more general `#cmake.options.statusBarVisibility#` setting is set to `hidden`, this defaults to what is set in the `#cmake.options.advanced.inheritDefault#` setting, else this inherits the `#cmake.options.statusBarVisibility#` setting."]},"inheritDefault":{"type":"string","markdownDescription":"Configures what the `#cmake.options.advanced.statusBarVisibility#` setting's `inherit` option defaults to if `#cmake.options.statusBarVisibility#` is set to `hidden`. This has the same options as the `#cmake.options.advanced.statusBarVisibility#` setting, minus the `inherit` option.","enum":["visible","compact","hidden"]},"statusBarLength":{"description":"Configures the maximum length of visible text in the Status Bar when set to `compact` mode.","type":"integer","default":20}}},"build":{"type":"object","properties":{"statusBarVisibility":{"type":"string","markdownDescription":"Configures the settings for individual status bar options. These settings overwrite the more general `#cmake.options.statusBarVisibility#` setting.","enum":["visible","icon","hidden","inherit"],"markdownEnumDescriptions":["Show the status bar option at full size.","Show the status bar option's icon only.","Hides the status bar option.","If the more general `#cmake.options.statusBarVisibility#` setting is set to `hidden`, this defaults to what is set in the `#cmake.options.advanced.inheritDefault#` setting, else this inherits the `#cmake.options.statusBarVisibility#` setting."]},"inheritDefault":{"type":"string","markdownDescription":"Configures what the `#cmake.options.advanced.statusBarVisibility#` setting's `inherit` option defaults to if `#cmake.options.statusBarVisibility#` is set to `hidden`. This has the same options as the `#cmake.options.advanced.statusBarVisibility#` setting, minus the `inherit` option.","enum":["visible","icon","hidden"]},"projectStatusVisibility":{"type":"string","description":"Configures how the extension displays this option the Project Status View.","enum":["visible","hidden"],"enumDescriptions":["Show the node in the Project Status View.","Hide the node and its children in the Project Status View."]}}},"launchTarget":{"type":"object","properties":{"statusBarVisibility":{"type":"string","markdownDescription":"Configures the settings for individual status bar options. These settings overwrite the more general `#cmake.options.statusBarVisibility#` setting.","enum":["visible","compact","hidden","inherit"],"markdownEnumDescriptions":["Show the status bar option at full size.","Show the status bar option with the text truncated to the length specified in `#cmake.status.advanced.statusBarLength#` (default is 20).","Hides the status bar option.","If the more general `#cmake.options.statusBarVisibility#` setting is set to `hidden`, this defaults to what is set in the `#cmake.options.advanced.inheritDefault#` setting, else this inherits the `#cmake.options.statusBarVisibility#` setting."]},"inheritDefault":{"type":"string","markdownDescription":"Configures what the `#cmake.options.advanced.statusBarVisibility#` setting's `inherit` option defaults to if `#cmake.options.statusBarVisibility#` is set to `hidden`. This has the same options as the `#cmake.options.advanced.statusBarVisibility#` setting, minus the `inherit` option.","enum":["visible","compact","hidden"]},"statusBarLength":{"description":"Configures the maximum length of visible text in the Status Bar when set to `compact` mode.","type":"integer","default":20}}},"debug":{"type":"object","properties":{"statusBarVisibility":{"type":"string","markdownDescription":"Configures the settings for individual status bar options. These settings overwrite the more general `#cmake.options.statusBarVisibility#` setting.","enum":["visible","icon","hidden","inherit"],"markdownEnumDescriptions":["Show the status bar option at full size.","Show the status bar option's icon only.","Hides the status bar option.","If the more general `#cmake.options.statusBarVisibility#` setting is set to `hidden`, this defaults to what is set in the `#cmake.options.advanced.inheritDefault#` setting, else this inherits the `#cmake.options.statusBarVisibility#` setting."]},"inheritDefault":{"type":"string","markdownDescription":"Configures what the `#cmake.options.advanced.statusBarVisibility#` setting's `inherit` option defaults to if `#cmake.options.statusBarVisibility#` is set to `hidden`. This has the same options as the `#cmake.options.advanced.statusBarVisibility#` setting, minus the `inherit` option.","enum":["visible","icon","hidden"]},"projectStatusVisibility":{"type":"string","description":"Configures how the extension displays this option the Project Status View.","enum":["visible","hidden"],"enumDescriptions":["Show the node in the Project Status View.","Hide the node and its children in the Project Status View."]}}},"launch":{"type":"object","properties":{"statusBarVisibility":{"type":"string","markdownDescription":"Configures the settings for individual status bar options. These settings overwrite the more general `#cmake.options.statusBarVisibility#` setting.","enum":["visible","icon","hidden","inherit"],"markdownEnumDescriptions":["Show the status bar option at full size.","Show the status bar option's icon only.","Hides the status bar option.","If the more general `#cmake.options.statusBarVisibility#` setting is set to `hidden`, this defaults to what is set in the `#cmake.options.advanced.inheritDefault#` setting, else this inherits the `#cmake.options.statusBarVisibility#` setting."]},"inheritDefault":{"type":"string","markdownDescription":"Configures what the `#cmake.options.advanced.statusBarVisibility#` setting's `inherit` option defaults to if `#cmake.options.statusBarVisibility#` is set to `hidden`. This has the same options as the `#cmake.options.advanced.statusBarVisibility#` setting, minus the `inherit` option.","enum":["visible","icon","hidden"]},"projectStatusVisibility":{"type":"string","description":"Configures how the extension displays this option the Project Status View.","enum":["visible","hidden"],"enumDescriptions":["Show the node in the Project Status View.","Hide the node and its children in the Project Status View."]}}},"ctest":{"type":"object","properties":{"statusBarVisibility":{"type":"string","markdownDescription":"Configures the settings for individual status bar options. These settings overwrite the more general `#cmake.options.statusBarVisibility#` setting.","enum":["visible","compact","icon","hidden","inherit"],"markdownEnumDescriptions":["Show the status bar option at full size.","Show the status bar option's icon only.","Show the status bar option with the text truncated to the length specified in `#cmake.status.advanced.statusBarLength#` (default is 20).","Hides the status bar option.","If the more general `#cmake.options.statusBarVisibility#` setting is set to `hidden`, this defaults to what is set in the `#cmake.options.advanced.inheritDefault#` setting, else this inherits the `#cmake.options.statusBarVisibility#` setting."]},"inheritDefault":{"type":"string","markdownDescription":"Configures what the `#cmake.options.advanced.statusBarVisibility#` setting's `inherit` option defaults to if `#cmake.options.statusBarVisibility#` is set to `hidden`. This has the same options as the `#cmake.options.advanced.statusBarVisibility#` setting, minus the `inherit` option.","enum":["visible","compact","icon","hidden"]},"color":{"type":"boolean","default":false,"description":"Enables a change in color for this option depending on test results."},"statusBarLength":{"description":"Configures the maximum length of visible text in the Status Bar when set to `compact` mode.","type":"integer","default":20},"projectStatusVisibility":{"type":"string","description":"Configures how the extension displays this option the Project Status View.","enum":["visible","hidden"],"enumDescriptions":["Show the node in the Project Status View.","Hide the node and its children in the Project Status View."]}}},"cpack":{"type":"object","properties":{"statusBarVisibility":{"type":"string","markdownDescription":"Configures the settings for individual status bar options. These settings overwrite the more general `#cmake.options.statusBarVisibility#` setting.","enum":["visible","compact","icon","hidden","inherit"],"default":"hidden","markdownEnumDescriptions":["Show the status bar option at full size.","Show the status bar option's icon only.","Show the status bar option with the text truncated to the length specified in `#cmake.status.advanced.statusBarLength#` (default is 20).","Hides the status bar option.","If the more general `#cmake.options.statusBarVisibility#` setting is set to `hidden`, this defaults to what is set in the `#cmake.options.advanced.inheritDefault#` setting, else this inherits the `#cmake.options.statusBarVisibility#` setting."]},"inheritDefault":{"type":"string","markdownDescription":"Configures what the `#cmake.options.advanced.statusBarVisibility#` setting's `inherit` option defaults to if `#cmake.options.statusBarVisibility#` is set to `hidden`. This has the same options as the `#cmake.options.advanced.statusBarVisibility#` setting, minus the `inherit` option.","enum":["visible","compact","icon","hidden"]},"color":{"type":"boolean","default":false,"description":"Enables a change in color for this option depending on cpack results."},"statusBarLength":{"description":"Configures the maximum length of visible text in the Status Bar when set to `compact` mode.","type":"integer","default":20},"projectStatusVisibility":{"type":"string","description":"Configures how the extension displays this option the Project Status View.","enum":["visible","hidden"],"enumDescriptions":["Show the node in the Project Status View.","Hide the node and its children in the Project Status View."]}}},"workflow":{"type":"object","properties":{"statusBarVisibility":{"type":"string","markdownDescription":"Configures the settings for individual status bar options. These settings overwrite the more general `#cmake.options.statusBarVisibility#` setting.","enum":["visible","compact","icon","hidden","inherit"],"default":"hidden","markdownEnumDescriptions":["Show the status bar option at full size.","Show the status bar option's icon only.","Show the status bar option with the text truncated to the length specified in `#cmake.status.advanced.statusBarLength#` (default is 20).","Hides the status bar option.","If the more general `#cmake.options.statusBarVisibility#` setting is set to `hidden`, this defaults to what is set in the `#cmake.options.advanced.inheritDefault#` setting, else this inherits the `#cmake.options.statusBarVisibility#` setting."]},"inheritDefault":{"type":"string","markdownDescription":"Configures what the `#cmake.options.advanced.statusBarVisibility#` setting's `inherit` option defaults to if `#cmake.options.statusBarVisibility#` is set to `hidden`. This has the same options as the `#cmake.options.advanced.statusBarVisibility#` setting, minus the `inherit` option.","enum":["visible","compact","icon","hidden"]},"color":{"type":"boolean","default":false,"description":"Enables a change in color for this option depending on workflow run results."},"statusBarLength":{"description":"Configures the maximum length of visible text in the Status Bar when set to `compact` mode.","type":"integer","default":20},"projectStatusVisibility":{"type":"string","description":"Configures how the extension displays this option the Project Status View.","enum":["visible","hidden"],"enumDescriptions":["Show the node in the Project Status View.","Hide the node and its children in the Project Status View."]}}}}},"cmake.additionalKits":{"type":"array","default":[],"description":"Array of paths to custom kit files.","items":{"type":"string"},"scope":"resource"},"cmake.revealLog":{"type":"string","default":"always","enum":["focus","always","never","error"],"enumDescriptions":["The log appears and the output channel takes the cursor focus.","The log appears but the output channel doesn't take the cursor focus.","The log neither appears nor takes the focus.","The log appears only when the build or the configuration fails."],"description":"Configures the settings for showing the log and focusing on the output channel."},"cmake.exportCompileCommandsFile":{"type":"boolean","default":true,"description":"Enables exporting compile_commands.json. This only is used in Kits scenarios. In Presets scenarios, please set this by using CMakePresets.json","scope":"resource"},"cmake.useCMakePresets":{"type":"string","enum":["always","never","auto"],"default":"auto","description":"Use CMakePresets.json to configure drive CMake configure, build, and test. When using CMakePresets.json, kits, variants, and some settings in settings.json will be ignored.","scope":"resource"},"cmake.useVsDeveloperEnvironment":{"type":"string","enum":["always","never","auto"],"default":"auto","description":"When using CMake Presets on Windows, use the Visual Studio environment as the parent environment. Selecting auto will only apply the Visual Studio environment when we detect a supported compiler (cl, clang, clang-cl, clang-cpp, clang++), or the Ninja generator is being used.","scope":"resource"},"cmake.allowCommentsInPresetsFile":{"type":"boolean","default":false,"description":"Allow the use of JSON extensions such as comments in CMakePresets.json. Please note that your CMakePresets.json file may be considered invalid by other IDEs or on the command line if you use non-standard JSON.","scope":"resource"},"cmake.allowUnsupportedPresetsVersions":{"type":"boolean","default":false,"description":"Enables the use of presets files that are using features from the versions that CMake Tools extension doesn't currently support. Unknown properties and macros will be ignored.","scope":"resource"},"cmake.launchBehavior":{"type":"string","enum":["reuseTerminal","breakAndReuseTerminal","newTerminal"],"markdownEnumDescriptions":["The launch terminal instance is reused and the target will launch as soon as the terminal is idle.","The launch terminal instance is reused and a `break` command is sent to terminate any active foreground process before launching the target.","A new terminal instance is created and the target is launched in it. Existing terminals are not automatically cleaned up."],"description":"Controls what happens with the launch terminal when you launch a target.","default":"reuseTerminal"},"cmake.ignoreCMakeListsMissing":{"type":"boolean","default":false,"markdownDescription":"If `true`, the extension will not ask the user to select a CMakeLists.txt file for configuration when one is found in the workspace but not in the root folder.","scope":"resource"},"cmake.loadCompileCommands":{"type":"boolean","default":true,"description":"Controls whether the extension reads compile_commands.json to enable single file compilation.","scope":"resource"},"cmake.automaticReconfigure":{"type":"boolean","default":true,"description":"Automatically configure CMake project directories when the kit or the configuration preset is changed.","scope":"resource"},"cmake.pinnedCommands":{"type":"array","items":{"type":"string"},"description":"List of CMake commands to always pin by default. These will appear in the CMake Tools sidebar 'Pinned Commands' section.","default":["workbench.action.tasks.configureTaskRunner","workbench.action.tasks.runTask"],"scope":"resource"},"cmake.enableAutomaticKitScan":{"type":"boolean","default":true,"description":"Enable automatic scanning for kits when a kit isn't selected. This will only take affect when CMake Presets aren't being used.","scope":"resource"},"cmake.enableLanguageServices":{"type":"boolean","default":true,"description":"Enable language services for CMake files. This will enable syntax highlighting, code completion, and other features.","scope":"machine"},"cmake.preRunCoverageTarget":{"type":"string","default":null,"description":"Target to build before running tests with coverage using the test explorer","scope":"resource"},"cmake.postRunCoverageTarget":{"type":"string","default":null,"description":"Target to build after running tests with coverage using the test explorer","scope":"resource"},"cmake.coverageInfoFiles":{"type":"array","items":{"type":"string"},"default":[],"description":"LCOV coverage info files to be processed after running tests with coverage using the test explorer.","scope":"resource"},"cmake.useFolderPropertyInBuildTargetDropdown":{"type":"boolean","default":false,"description":"Controls if the default build target dropdown is grouped by the CMake folder groups.","scope":"resource"}}},"keybindings":[{"key":"f7","when":"!cmake:hideBuildCommand && cmake:enableFullFeatureSet","command":"cmake.build"},{"key":"shift+f7","when":"!cmake:hideBuildCommand && cmake:enableFullFeatureSet","command":"cmake.buildWithTarget"},{"key":"shift+f5","command":"cmake.debugTarget","when":"!inDebugMode && inCMakeProject && !cmake:hideDebugCommand && cmake:enableFullFeatureSet"},{"key":"shift+ctrl+f5","command":"cmake.launchTarget","when":"!inDebugMode && !cmake:hideDebugCommand && cmake:enableFullFeatureSet"}],"viewsContainers":{"activitybar":[{"id":"cmake-view","title":"CMake","icon":"$(cmake-tools-cmake-view-2)","when":"cmake:enableFullFeatureSet"}]},"views":{"cmake-view":[{"id":"cmake.projectStatus","name":"Project Status","when":"cmake:enableFullFeatureSet"},{"id":"cmake.outline","name":"Project Outline","when":"cmake:enableFullFeatureSet"},{"id":"cmake.pinnedCommands","name":"Pinned Commands","when":"cmake:enableFullFeatureSet"}]},"viewsWelcome":[{"view":"cmake.pinnedCommands","contents":"No CMake commands have been pinned yet.\n[Add Command](command:cmake.pinnedCommands.add)","when":"cmake:enableFullFeatureSet"}],"yamlValidation":[{"fileMatch":"cmake-variants.yaml","url":"cmake-tools-schema://schemas/variants-schema.json"}],"jsonValidation":[{"fileMatch":"cmake-variants.json","url":"cmake-tools-schema://schemas/variants-schema.json"},{"fileMatch":"cmake-variants.yaml","url":"cmake-tools-schema://schemas/variants-schema.json"},{"fileMatch":"cmake-kits.json","url":"cmake-tools-schema://schemas/kits-schema.json"},{"fileMatch":"CMakePresets.json","url":"cmake-tools-schema://schemas/CMakePresets-v10-schema.json"},{"fileMatch":"CMakeUserPresets.json","url":"cmake-tools-schema://schemas/CMakePresets-v10-schema.json"}]},"_moduleAliases":{"@cmt":"out/src/","@test":"out/test/"},"scripts":{"compile":"yarn install && webpack --mode development","compile-watch":"yarn install && webpack --mode development --watch --progress","compile-production":"yarn install && yarn run translations-generate && webpack --env BUILD_VSCODE_NLS=true --mode production","translations-export":"gulp translations-export","translations-generate":"gulp translations-generate","translations-import":"gulp translations-import","package":"vsce package --yarn -o cmake-tools.vsix","pretest":"tsc -p test.tsconfig.json","lint":"gulp lint","smokeTests":"yarn run pretest && node ./out/test/smoke/badProject/runTest.js && node ./out/test/smoke/goodProject/runTest.js && node ./out/test/smoke/noCtest/runTest.js","unitTests":"yarn run pretest && node ./out/test/unit-tests/runTest.js","integrationTests":"yarn run pretest && node ./out/test/integration-tests/runTest.js","endToEndTestsSuccessfulBuild":"yarn run pretest && node ./out/test/end-to-end-tests/successful-build/runTest.js","endToEndTestsSingleRoot":"yarn run pretest && node ./out/test/end-to-end-tests/single-root-UI/runTest.js","endToEndTestsMultiRoot":"yarn run pretest && node ./out/test/end-to-end-tests/multi-root-UI/runTest.js","backendTests":"node ./node_modules/mocha/bin/_mocha -u tdd --timeout 999999 --colors -r ts-node/register -r tsconfig-paths/register ./test/unit-tests/backend/**/*.test.ts","build-product-icon-font":"yarn --cwd ./tools/product-icon-font-generator/ install && yarn --cwd ./tools/product-icon-font-generator/ build && node ./tools/product-icon-font-generator/dist/index.js --source-directory ./res/product-icons/ --output-directory ./res/ --woff2"},"devDependencies":{"@octokit/rest":"^18.1.1","@types/ajv":"^0.0.5","@types/chai":"^4.2.15","@types/chai-as-promised":"^7.1.3","@types/chai-string":"^1.4.2","@types/demangler-js":"^0.1.0","@types/js-yaml":"^4.0.0","@types/json5":"~0.0.30","@types/lodash":"4.14.202","@types/mocha":"^8.2.2","@types/node":"^20.14.2","@types/rimraf":"^3.0.0","@types/sinon":"~9.0.10","@types/tmp":"^0.2.0","@types/vscode":"1.88.0","@types/which":"~2.0.0","@types/xml2js":"^0.4.8","@types/uuid":"~8.3.3","@typescript-eslint/eslint-plugin":"^5.25.0","@typescript-eslint/eslint-plugin-tslint":"^5.25.0","@typescript-eslint/parser":"^5.25.0","@vscode/test-electron":"^2.3.8","@vscode/vsce":"^3.1.0","chai":"^4.3.0","chai-as-promised":"^7.1.1","chai-string":"^1.5.0","eslint":"^8.15.0","eslint-plugin-import":"^2.29.1","eslint-plugin-jsdoc":"^48.2.8","event-stream":"^4.0.1","fs-extra":"^9.1.0","glob":"^7.1.6","gulp":"^4.0.2","gulp-eslint":"^6.0.0","gulp-filter":"^6.0.0","gulp-mocha":"^8.0.0","gulp-sourcemaps":"^3.0.0","gulp-typescript":"^5.0.1","husky":"^4.3.8","jsonc-parser":"^3.0.0","mocha":"^8.3.2","module-alias":"^2.2.2","node-loader":"^1.0.2","parse-git-config":"^3.0.0","sinon":"~9.2.4","ts-loader":"^8.0.17","ts-node":"^9.1.1","tsconfig-paths":"^3.11.0","tslint":"^6.1.3","typescript":"^4.1.5","vscode-cmake-tools":"^1.2.0","vscode-nls-dev":"^3.3.2","webpack":"^5.94.0","webpack-cli":"^4.5.0"},"dependencies":{"@friedemannsommer/lcov-parser":"^5.0.0","@types/string.prototype.matchall":"^4.0.4","ajv":"^7.1.0","chokidar":"^3.5.1","demangler-js":"^0.1.7","handlebars":"^4.7.7","iconv-lite":"^0.6.2","js-yaml":"^4.0.0","json5":"^2.2.2","minimist":"^1.2.6","open":"^7.4.1","p-limit":"^3.1.0","rimraf":"^3.0.2","string.prototype.matchall":"^4.0.10","tmp":"^0.2.1","vscode-cpptools":"^6.1.0","@vscode/extension-telemetry":"^0.9.6","vscode-nls":"^5.0.0","vscode-tas-client":"^0.1.45","which":"~2.0.2","xml2js":"^0.5.0","uuid":"~8.3.2","lodash":"^4.17.21"},"resolutions":{"ansi-regex":"^5.0.1","chokidar":"^3.5.1","glob-parent":"^5.1.2","hosted-git-info":"^3.0.8","https-proxy-agent":"^5.0.0","**/minimist":"^1.2.5","nanoid":"^3.1.31","postcss":"^8.2.10","yargs-parser":"^20.2.4","xml2js":"^0.5.0","tsconfig-paths*/json5":"^1.0.2","minimatch":"^3.0.5","**/braces":"^3.0.3"},"packageManager":"yarn@1.22.19"},"location":{"$mid":1,"path":"/home/usainzg/.vscode/extensions/ms-vscode.cmake-tools-1.21.36","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"Microsoft","metadata":{"installedTimestamp":1754372615800,"pinned":false,"source":"gallery","id":"7c889349-8749-43d4-8b5e-08939936d7f4","publisherId":"5f5636e7-69ed-4afe-b5d6-8d231fb3d3ee","publisherDisplayName":"Microsoft","targetPlatform":"undefined","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":25390700},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"sainnhe.everforest","uuid":"330982cd-dddd-4939-b9ad-656ce474b089"},"manifest":{"name":"everforest","displayName":"Everforest","description":"Comfortable & Pleasant Color Scheme for Visual Studio Code","version":"0.3.0","publisher":"sainnhe","author":"sainnhe (https://github.com/sainnhe)","homepage":"https://github.com/sainnhe/everforest-vscode","repository":{"type":"git","url":"https://github.com/sainnhe/everforest-vscode.git"},"bugs":{"url":"https://github.com/sainnhe/everforest-vscode/issues"},"license":"MIT","keywords":["green","theme"],"galleryBanner":{"color":"#2f383e","theme":"dark"},"categories":["Themes"],"extensionKind":["ui","workspace"],"activationEvents":["onStartupFinished"],"capabilities":{"untrustedWorkspaces":{"supported":true},"virtualWorkspaces":true},"main":"dist/index-client.js","browser":"dist/index-web.js","contributes":{"themes":[{"label":"Everforest Dark","uiTheme":"vs-dark","path":"./themes/everforest-dark.json"},{"label":"Everforest Light","uiTheme":"vs","path":"./themes/everforest-light.json"}],"configuration":{"title":"Everforest","properties":{"everforest.darkContrast":{"type":"string","default":"medium","description":"Background contrast for the dark variant.","enum":["soft","medium","hard"]},"everforest.lightContrast":{"type":"string","default":"medium","description":"Background contrast for the light variant.","enum":["soft","medium","hard"]},"everforest.darkWorkbench":{"type":"string","default":"material","description":"Workbench style for the dark variant.","enum":["material","flat","high-contrast"]},"everforest.lightWorkbench":{"type":"string","default":"material","description":"Workbench style for the light variant.","enum":["material","flat","high-contrast"]},"everforest.darkCursor":{"type":"string","default":"white","description":"The cursor color in the dark variant.","enum":["white","red","orange","yellow","green","aqua","blue","purple"]},"everforest.lightCursor":{"type":"string","default":"black","description":"The cursor color in the light variant.","enum":["black","red","orange","yellow","green","aqua","blue","purple"]},"everforest.darkSelection":{"type":"string","default":"grey","description":"The background color of selected text in the dark variant.","enum":["grey","red","orange","yellow","green","aqua","blue","purple"]},"everforest.lightSelection":{"type":"string","default":"grey","description":"The background color of selected text in the light variant.","enum":["grey","red","orange","yellow","green","aqua","blue","purple"]},"everforest.italicKeywords":{"type":"boolean","default":false,"description":"Italicize keywords or not."},"everforest.italicComments":{"type":"boolean","default":true,"description":"Italicize comments or not."},"everforest.diagnosticTextBackgroundOpacity":{"type":"string","default":"0%","markdownDescription":"The opacity of the background color of [diagnostic text](https://code.visualstudio.com/updates/v1_52#_error-background-colors).","enum":["0%","12.5%","25%","37.5%","50%"]},"everforest.highContrast":{"type":"boolean","default":false,"description":"Whether to add an additional border around items across the UI to increase the contrast."}}}},"scripts":{"vscode:prepublish":"npm run compile","clean":"rimraf dist *.vsix","compile:ts":"tsc","compile:themes":"node dist/hook/generateThemes.js","compile":"npm run clean && npm run compile:ts && npm run compile:themes","package":"vsce package && git checkout -- themes","lint":"eslint . --ext .ts","browser":"vscode-test-web --browserType=chromium --extensionDevelopmentPath=. .","prepare":"husky install"},"lint-staged":{"*.ts":"eslint --fix","*.{js,json,md}":"prettier --write"},"engines":{"vscode":"^1.55.0"},"devDependencies":{"@types/node":"18.11.14","@types/vscode":"1.55.0","@typescript-eslint/eslint-plugin":"5.46.1","@typescript-eslint/parser":"5.46.1","@vscode/test-web":"0.0.33","@vscode/vsce":"^2.15.0","eslint":"8.29.0","eslint-config-prettier":"8.5.0","eslint-plugin-prettier":"4.2.1","husky":"8.0.2","lint-staged":"13.1.0","prettier":"2.8.1","rimraf":"3.0.2","typescript":"4.9.4"}},"location":{"$mid":1,"path":"/home/usainzg/.vscode/extensions/sainnhe.everforest-0.3.0","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"sainnhe","metadata":{"installedTimestamp":1755934239143,"source":"gallery","id":"330982cd-dddd-4939-b9ad-656ce474b089","publisherId":"cd5355a7-bbfb-4a47-8f70-727aed458bc8","publisherDisplayName":"sainnhe","targetPlatform":"undefined","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":596474},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"ziglang.vscode-zig","uuid":"9f528315-746c-44d9-97ba-d4d505cca308"},"manifest":{"name":"vscode-zig","displayName":"Zig Language","description":"Language support for the Zig programming language","version":"0.6.14","publisher":"ziglang","icon":"images/zig-icon.png","license":"MIT","repository":{"type":"git","url":"https://github.com/ziglang/vscode-zig"},"engines":{"vscode":"^1.90.0"},"categories":["Programming Languages"],"activationEvents":["workspaceContains:build.zig","workspaceContains:build.zig.zon","workspaceContains:./.zigversion"],"main":"./out/extension","contributes":{"configurationDefaults":{"[zig]":{"editor.formatOnSave":true,"editor.defaultFormatter":"ziglang.vscode-zig","editor.stickyScroll.defaultModel":"foldingProviderModel","files.eol":"\n"},"explorer.autoRevealExclude":{"**/.zig-cache":true,"**/zig-cache":true}},"languages":[{"id":"zig","extensions":[".zig",".zon"],"aliases":["Zig"],"configuration":"./language-configuration.json"}],"grammars":[{"language":"zig","scopeName":"source.zig","path":"./syntaxes/zig.tmLanguage.json"}],"problemMatchers":[{"name":"zig","owner":"zig","fileLocation":["relative","${workspaceFolder}"],"pattern":{"regexp":"([^\\s]*):(\\d+):(\\d+):\\s+(?:fatal\\s+)?(note|error):\\s+(.*)$","file":1,"line":2,"column":3,"severity":4,"message":5}}],"configuration":{"type":"object","title":"Zig","properties":{"zig.buildOnSave":{"type":"boolean","default":false,"description":"Compiles code on file save using the settings specified in 'Build Option'. Should not be used with ZLS's build on save feature."},"zig.buildOption":{"type":"string","default":"build","enum":["build","build-exe","build-lib","build-obj"],"description":"Which build command Zig should use to build the code."},"zig.buildArgs":{"type":"array","items":{"type":"string"},"default":[],"description":"Extra arguments to passed to Zig."},"zig.buildFilePath":{"type":"string","default":"${workspaceFolder}/build.zig","description":"The path to build.zig. This is only required if zig.buildOptions = build."},"zig.path":{"scope":"machine-overridable","type":"string","description":"Set a custom path to the `zig` executable. Example: `C:/zig-windows-x86_64-0.13.0/zig.exe`. The string \"zig\" means lookup zig in PATH."},"zig.version":{"scope":"resource","type":"string","description":"Specify which Zig version should be installed. Takes priority over a `.zigversion` file or a `build.zig.zon` with `minimum_zig_version`."},"zig.formattingProvider":{"scope":"resource","type":"string","description":"Whether to enable formatting","enum":["off","extension","zls"],"enumItemLabels":["Off","Extension","ZLS language server"],"enumDescriptions":["Disable formatting","Provide formatting by directly invoking `zig fmt`","Provide formatting by using ZLS (which matches `zig fmt`)"],"default":"zls"},"zig.testArgs":{"type":"array","items":{"type":"string"},"default":["test","--test-filter","${filter}","${path}"],"description":"Arguments to pass to 'zig' for running tests. Supported variables: ${filter}, ${path}."},"zig.debugTestArgs":{"type":"array","items":{"type":"string"},"default":["test","${path}","--test-filter","${filter}","--test-no-exec","-femit-bin=${binaryPath}"],"description":"Arguments to pass to 'zig' for debugging tests. Supported variables: ${filter}, ${path}, ${binaryPath}."},"zig.debugAdapter":{"scope":"resource","type":"string","default":"lldb","description":"The debug adapter command to run when starting a debug session"},"zig.zls.debugLog":{"scope":"resource","type":"boolean","description":"Enable debug logging in release builds of ZLS."},"zig.zls.trace.server":{"scope":"window","type":"string","description":"Traces the communication between VS Code and the language server.","enum":["off","messages","verbose"],"default":"off"},"zig.zls.enabled":{"scope":"resource","type":"string","description":"Whether to enable the optional ZLS language server","enum":["ask","off","on"],"default":"ask"},"zig.zls.path":{"scope":"machine-overridable","type":"string","description":"Set a custom path to the `zls` executable. Example: `C:/zls/zig-cache/bin/zls.exe`. The string \"zls\" means lookup ZLS in PATH.","format":"path"},"zig.zls.enableSnippets":{"scope":"resource","type":"boolean","description":"Enables snippet completions when the client also supports them","default":true},"zig.zls.enableArgumentPlaceholders":{"scope":"resource","type":"boolean","description":"Whether to enable function argument placeholder completions","default":true},"zig.zls.completionLabelDetails":{"scope":"resource","type":"boolean","description":"Whether to show the function signature in completion results. May improve readability in some editors when disabled","default":true},"zig.zls.enableBuildOnSave":{"scope":"resource","type":"boolean","description":"Whether to enable build-on-save diagnostics. Will be automatically enabled if the `build.zig` has declared a 'check' step.\n\nFor more infromation, checkout the [Build-On-Save](https://zigtools.org/zls/guides/build-on-save/) Guide.","default":null},"zig.zls.buildOnSaveArgs":{"scope":"resource","type":"array","description":"Specify which arguments should be passed to Zig when running build-on-save.\n\nIf the `build.zig` has declared a 'check' step, it will be preferred over the default 'install' step.","default":[]},"zig.zls.semanticTokens":{"scope":"resource","type":"string","description":"Set level of semantic tokens. `partial` only includes information that requires semantic analysis; this will usually give a better result than `full` in VS Code thanks to the Zig extension's syntax file.","enum":["none","partial","full"],"default":"partial"},"zig.zls.inlayHintsShowVariableTypeHints":{"scope":"resource","type":"boolean","description":"Enable inlay hints for variable types","default":true},"zig.zls.inlayHintsShowStructLiteralFieldType":{"scope":"resource","type":"boolean","description":"Enable inlay hints for fields in struct and union literals","default":true},"zig.zls.inlayHintsShowParameterName":{"scope":"resource","type":"boolean","description":"Enable inlay hints for parameter names","default":true},"zig.zls.inlayHintsShowBuiltin":{"scope":"resource","type":"boolean","description":"Enable inlay hints for builtin functions","default":true},"zig.zls.inlayHintsExcludeSingleArgument":{"scope":"resource","type":"boolean","description":"Don't show inlay hints for single argument calls","default":true},"zig.zls.inlayHintsHideRedundantParamNames":{"scope":"resource","type":"boolean","description":"Hides inlay hints when parameter name matches the identifier (e.g. `foo: foo`)","default":false},"zig.zls.inlayHintsHideRedundantParamNamesLastToken":{"scope":"resource","type":"boolean","description":"Hides inlay hints when parameter name matches the last token of a parameter node (e.g. `foo: bar.foo`, `foo: &foo`)","default":false},"zig.zls.warnStyle":{"scope":"resource","type":"boolean","description":"Enables warnings for style guideline mismatches","default":false},"zig.zls.highlightGlobalVarDeclarations":{"scope":"resource","type":"boolean","description":"Whether to highlight global var declarations","default":false},"zig.zls.skipStdReferences":{"scope":"resource","type":"boolean","description":"When true, skips searching for references in the standard library. Improves lookup speed for functions in user's code. Renaming and go-to-definition will continue to work as is","default":false},"zig.zls.preferAstCheckAsChildProcess":{"scope":"resource","type":"boolean","description":"Favor using `zig ast-check` instead of the builtin one","default":true},"zig.zls.builtinPath":{"scope":"resource","type":"string","description":"Override the path to 'builtin' module. Automatically resolved if unset.","format":"path"},"zig.zls.zigLibPath":{"scope":"resource","type":"string","description":"Override the Zig library path. Will be automatically resolved using the 'zig_exe_path'.","format":"path"},"zig.zls.buildRunnerPath":{"scope":"resource","type":"string","description":"Specify a custom build runner to resolve build system information.","format":"path"},"zig.zls.globalCachePath":{"scope":"resource","type":"string","description":"Path to a directory that will be used as zig's cache. Will default to `${KnownFolders.Cache}/zls`.","format":"path"},"zig.zls.additionalOptions":{"scope":"resource","type":"object","markdownDescription":"Additional config options that should be forwarded to ZLS. Every property must have the format 'zig.zls.someOptionName'. You will **not** be warned about unused or ignored options.","default":{},"additionalProperties":false,"patternProperties":{"^zig\\.zls\\.[a-z]+[A-Z0-9][a-z0-9]+[A-Za-z0-9]*$":{}}}}},"commands":[{"command":"zig.run","title":"Run Zig","category":"Zig","description":"Run the current Zig project / file"},{"command":"zig.debug","title":"Debug Zig","category":"Zig","description":"Debug the current Zig project / file"},{"command":"zig.build.workspace","title":"Build Workspace","category":"Zig","description":"Build the current project using 'zig build'"},{"command":"zig.install","title":"Install Zig","category":"Zig Setup"},{"command":"zig.toggleMultilineStringLiteral","title":"Toggle Multiline String Literal","category":"Zig"},{"command":"zig.zls.enable","title":"Enable Language Server","category":"ZLS language server"},{"command":"zig.zls.startRestart","title":"Start / Restart Language Server","category":"ZLS language server"},{"command":"zig.zls.stop","title":"Stop Language Server","category":"ZLS language server"}],"keybindings":[{"command":"zig.toggleMultilineStringLiteral","key":"alt+m alt+s","when":"editorTextFocus && editorLangId == 'zig'"}],"jsonValidation":[{"fileMatch":"zls.json","url":"https://raw.githubusercontent.com/zigtools/zls/master/schema.json"}]},"scripts":{"vscode:prepublish":"npm run build-base -- --minify","build-base":"esbuild --bundle --external:vscode src/extension.ts --outdir=out --platform=node --target=node20 --format=cjs","build":"npm run build-base -- --sourcemap","watch":"npm run build-base -- --sourcemap --watch","test":"npm run compile && node ./node_modules/vscode/bin/test","typecheck":"tsc --noEmit","format":"prettier --write .","format:check":"prettier --check .","lint":"eslint"},"devDependencies":{"@types/libsodium-wrappers":"^0.7.14","@types/lodash-es":"^4.17.12","@types/node":"^20.0.0","@types/semver":"^7.5.8","@types/vscode":"^1.80.0","@types/which":"^2.0.1","@vscode/vsce":"^2.24.0","esbuild":"^0.25.0","eslint":"^9.0.0","eslint-config-prettier":"^9.1.0","prettier":"3.2.5","typescript":"^5.4.3","typescript-eslint":"^8.0.0"},"dependencies":{"libsodium-wrappers":"^0.7.15","lodash-es":"^4.17.21","semver":"^7.5.2","vscode-languageclient":"10.0.0-next.15","which":"^3.0.0"}},"location":{"$mid":1,"path":"/home/usainzg/.vscode/extensions/ziglang.vscode-zig-0.6.14","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"ziglang","metadata":{"isApplicationScoped":false,"isMachineScoped":false,"isBuiltin":false,"installedTimestamp":1761027233161,"pinned":false,"source":"gallery","id":"9f528315-746c-44d9-97ba-d4d505cca308","publisherId":"cefd71b0-991b-4e5d-bcad-e691066ed199","publisherDisplayName":"ziglang","targetPlatform":"undefined","updated":true,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"preRelease":false,"size":1438921},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"vscodevim.vim","uuid":"d96e79c6-8b25-4be3-8545-0e0ecefcae03"},"manifest":{"name":"vim","displayName":"Vim","description":"Vim emulation for Visual Studio Code","icon":"images/icon.png","version":"1.31.0","publisher":"vscodevim","sponsor":{"url":"https://github.com/sponsors/J-Fields"},"galleryBanner":{"color":"#e3f4ff","theme":"light"},"license":"MIT","keywords":["vim","vi","vscodevim"],"repository":{"type":"git","url":"https://github.com/VSCodeVim/Vim.git"},"homepage":"https://github.com/VSCodeVim/Vim","bugs":{"url":"https://github.com/VSCodeVim/Vim/issues"},"engines":{"vscode":"^1.74.0"},"categories":["Other","Keymaps"],"extensionKind":["ui"],"sideEffects":false,"activationEvents":["onStartupFinished","onCommand:type"],"qna":"https://github.com/VSCodeVim/Vim/discussions","main":"./out/extension","browser":"./out/extensionWeb","capabilities":{"untrustedWorkspaces":{"supported":true},"virtualWorkspaces":true},"contributes":{"commands":[{"command":"toggleVim","title":"Vim: Toggle Vim Mode"},{"command":"vim.showQuickpickCmdLine","title":"Vim: Show Command Line"},{"command":"vim.editVimrc","enablement":"!isWeb","title":"Vim: Edit .vimrc"}],"keybindings":[{"key":"Escape","command":"extension.vim_escape","when":"editorTextFocus && vim.active && !inDebugRepl"},{"key":"Escape","command":"notebook.cell.quitEdit","when":"inputFocus && notebookEditorFocused && !editorHasSelection && !editorHoverVisible && vim.active && vim.mode == 'Normal'"},{"key":"Home","command":"extension.vim_home","when":"editorTextFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'"},{"key":"ctrl+home","command":"extension.vim_ctrl+home","when":"editorTextFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'"},{"key":"End","command":"extension.vim_end","when":"editorTextFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'"},{"key":"ctrl+end","command":"extension.vim_ctrl+end","when":"editorTextFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'"},{"key":"Insert","command":"extension.vim_insert","when":"editorTextFocus && vim.active && !inDebugRepl"},{"key":"Backspace","command":"extension.vim_backspace","when":"editorTextFocus && vim.active && !inDebugRepl"},{"key":"Delete","command":"extension.vim_delete","when":"editorTextFocus && vim.active && !inDebugRepl"},{"key":"tab","command":"extension.vim_tab","when":"editorTextFocus && vim.active && vim.mode != 'Insert' && !inDebugRepl && !inlineEditIsVisible"},{"key":"shift+tab","command":"extension.vim_shift+tab","when":"editorTextFocus && vim.active && vim.mode != 'Insert' && !inDebugRepl"},{"key":"left","command":"extension.vim_left","when":"editorTextFocus && vim.active && !inDebugRepl"},{"key":"right","command":"extension.vim_right","when":"editorTextFocus && vim.active && !inDebugRepl"},{"key":"up","command":"extension.vim_up","when":"editorTextFocus && vim.active && !inDebugRepl && !suggestWidgetVisible && !parameterHintsVisible"},{"key":"down","command":"extension.vim_down","when":"editorTextFocus && vim.active && !inDebugRepl && !suggestWidgetVisible && !parameterHintsVisible"},{"key":"g g","command":"list.focusFirst","when":"listFocus && !inputFocus"},{"key":"h","command":"list.collapse","when":"listFocus && !inputFocus"},{"key":"j","command":"list.focusDown","when":"listFocus && !inputFocus"},{"key":"k","command":"list.focusUp","when":"listFocus && !inputFocus"},{"key":"l","command":"list.select","when":"listFocus && !inputFocus"},{"key":"o","command":"list.toggleExpand","when":"listFocus && !inputFocus"},{"key":"/","command":"list.toggleKeyboardNavigation","when":"listFocus && !inputFocus && listSupportsKeyboardNavigation"},{"key":"ctrl+a","command":"extension.vim_ctrl+a","when":"editorTextFocus && vim.active && vim.use<C-a> && !inDebugRepl"},{"key":"ctrl+b","command":"extension.vim_ctrl+b","when":"editorTextFocus && vim.active && vim.use<C-b> && vim.mode != 'Insert' && !inDebugRepl"},{"key":"ctrl+c","command":"extension.vim_ctrl+c","when":"editorTextFocus && vim.active && vim.use<C-c> && !inDebugRepl && vim.overrideCtrlC"},{"key":"ctrl+d","command":"extension.vim_ctrl+d","when":"editorTextFocus && vim.active && vim.use<C-d> && !inDebugRepl"},{"key":"ctrl+d","command":"list.focusPageDown","when":"listFocus && !inputFocus"},{"key":"ctrl+e","command":"extension.vim_ctrl+e","when":"editorTextFocus && vim.active && vim.use<C-e> && !inDebugRepl"},{"key":"ctrl+f","command":"extension.vim_ctrl+f","when":"editorTextFocus && vim.active && vim.use<C-f> && vim.mode != 'Insert' && !inDebugRepl"},{"key":"ctrl+g","command":"extension.vim_ctrl+g","when":"editorTextFocus && vim.active && vim.use<C-g> && !inDebugRepl"},{"key":"ctrl+h","command":"extension.vim_ctrl+h","when":"editorTextFocus && vim.active && vim.use<C-h> && !inDebugRepl"},{"key":"ctrl+i","command":"extension.vim_ctrl+i","when":"editorTextFocus && vim.active && vim.use<C-i> && !inDebugRepl"},{"key":"ctrl+j","command":"extension.vim_ctrl+j","when":"editorTextFocus && vim.active && vim.use<C-j> && !inDebugRepl"},{"key":"ctrl+k","command":"extension.vim_ctrl+k","when":"editorTextFocus && vim.active && vim.use<C-k> && !inDebugRepl"},{"key":"ctrl+l","command":"extension.vim_navigateCtrlL","when":"editorTextFocus && vim.active && vim.use<C-l> && !inDebugRepl"},{"key":"ctrl+m","command":"extension.vim_ctrl+m","when":"editorTextFocus && vim.active && vim.use<C-m> && !inDebugRepl || vim.mode == 'CommandlineInProgress' && vim.active && vim.use<C-m> && !inDebugRepl || vim.mode == 'SearchInProgressMode' && vim.active && vim.use<C-m> && !inDebugRepl"},{"key":"ctrl+n","command":"extension.vim_ctrl+n","when":"editorTextFocus && vim.active && vim.use<C-n> && !inDebugRepl || vim.mode == 'CommandlineInProgress' && vim.active && vim.use<C-n> && !inDebugRepl || vim.mode == 'SearchInProgressMode' && vim.active && vim.use<C-n> && !inDebugRepl"},{"key":"ctrl+o","command":"extension.vim_ctrl+o","when":"editorTextFocus && vim.active && vim.use<C-o> && !inDebugRepl"},{"key":"ctrl+p","command":"extension.vim_ctrl+p","when":"editorTextFocus && vim.active && vim.use<C-p> && !inDebugRepl || vim.mode == 'CommandlineInProgress' && vim.active && vim.use<C-p> && !inDebugRepl || vim.mode == 'SearchInProgressMode' && vim.active && vim.use<C-p> && !inDebugRepl"},{"key":"ctrl+q","command":"extension.vim_winCtrlQ","when":"editorTextFocus && vim.active && vim.use<C-q> && !inDebugRepl"},{"key":"ctrl+r","command":"extension.vim_ctrl+r","when":"editorTextFocus && vim.active && vim.use<C-r> && !inDebugRepl"},{"key":"ctrl+s","command":"extension.vim_ctrl+s","when":"editorTextFocus && vim.active && vim.use<C-s> && !inDebugRepl"},{"key":"ctrl+t","command":"extension.vim_ctrl+t","when":"editorTextFocus && vim.active && vim.use<C-t> && !inDebugRepl"},{"key":"ctrl+u","command":"extension.vim_ctrl+u","when":"editorTextFocus && vim.active && vim.use<C-u> && !inDebugRepl"},{"key":"ctrl+u","command":"list.focusPageUp","when":"listFocus && !inputFocus"},{"key":"ctrl+v","command":"extension.vim_ctrl+v","when":"editorTextFocus && vim.active && vim.use<C-v> && !inDebugRepl"},{"key":"ctrl+w","command":"extension.vim_ctrl+w","when":"editorTextFocus && vim.active && vim.use<C-w> && !inDebugRepl"},{"key":"ctrl+x","command":"extension.vim_ctrl+x","when":"editorTextFocus && vim.active && vim.use<C-x> && !inDebugRepl"},{"key":"ctrl+y","command":"extension.vim_ctrl+y","when":"editorTextFocus && vim.active && vim.use<C-y> && !inDebugRepl"},{"key":"ctrl+z","command":"extension.vim_ctrl+z","when":"editorTextFocus && vim.active && vim.use<C-z> && !inDebugRepl"},{"key":"ctrl+6","command":"extension.vim_ctrl+6","when":"editorTextFocus && vim.active && vim.use<C-6> && !inDebugRepl"},{"key":"ctrl+^","command":"extension.vim_ctrl+^","when":"editorTextFocus && vim.active && vim.use<C-^> && !inDebugRepl"},{"key":"ctrl+[","command":"extension.vim_ctrl+[","when":"editorTextFocus && vim.active && vim.use<C-[> && !inDebugRepl"},{"key":"ctrl+]","command":"extension.vim_ctrl+]","when":"editorTextFocus && vim.active && vim.use<C-]> && !inDebugRepl"},{"key":"ctrl+shift+2","command":"extension.vim_ctrl+shift+2","when":"editorTextFocus && vim.active && vim.use<C-shift+2>"},{"key":"ctrl+up","command":"extension.vim_ctrl+up","when":"editorTextFocus && vim.active && vim.mode != 'Insert' && !inDebugRepl"},{"key":"ctrl+down","command":"extension.vim_ctrl+down","when":"editorTextFocus && vim.active && vim.mode != 'Insert' && !inDebugRepl"},{"key":"ctrl+left","command":"extension.vim_ctrl+left","when":"editorTextFocus && vim.active && vim.mode != 'Insert' && !inDebugRepl"},{"key":"ctrl+right","command":"extension.vim_ctrl+right","when":"editorTextFocus && vim.active && vim.mode != 'Insert' && !inDebugRepl"},{"key":"ctrl+pagedown","command":"extension.vim_ctrl+pagedown","when":"editorTextFocus && vim.active && vim.use<C-pagedown> && !inDebugRepl"},{"key":"ctrl+pageup","command":"extension.vim_ctrl+pageup","when":"editorTextFocus && vim.active && vim.use<C-pageup> && !inDebugRepl"},{"key":"ctrl+space","command":"extension.vim_ctrl+space","when":"editorTextFocus && vim.active && vim.use<C-space> && !inDebugRepl && vim.mode != 'Insert'"},{"key":"shift+G","command":"list.focusLast","when":"listFocus && !inputFocus"},{"key":"ctrl+backspace","command":"extension.vim_ctrl+backspace","when":"editorTextFocus && vim.active && vim.use<C-BS> && vim.mode != 'Insert' && !inDebugRepl"},{"key":"shift+backspace","command":"extension.vim_shift+backspace","when":"editorTextFocus && vim.active && vim.use<S-BS> && vim.mode != 'Insert' && !inDebugRepl"},{"key":"cmd+left","command":"extension.vim_cmd+left","when":"editorTextFocus && vim.active && vim.use<D-left> && !inDebugRepl && vim.mode != 'Insert'"},{"key":"cmd+right","command":"extension.vim_cmd+right","when":"editorTextFocus && vim.active && vim.use<D-right> && !inDebugRepl && vim.mode != 'Insert'"},{"key":"cmd+a","command":"extension.vim_cmd+a","when":"editorTextFocus && vim.active && vim.use<D-a> && !inDebugRepl && vim.mode != 'Insert'"},{"key":"cmd+c","command":"extension.vim_cmd+c","when":"editorTextFocus && vim.active && vim.use<D-c> && vim.overrideCopy && !inDebugRepl"},{"key":"cmd+d","command":"extension.vim_cmd+d","when":"editorTextFocus && vim.active && vim.use<D-d> && !inDebugRepl"},{"key":"cmd+v","command":"extension.vim_cmd+v","when":"editorTextFocus && vim.active && vim.use<D-v> && vim.mode == 'CommandlineInProgress' && !inDebugRepl || editorTextFocus && vim.active && vim.use<D-v> && vim.mode == 'SearchInProgressMode' && !inDebugRepl"},{"key":"ctrl+alt+down","linux":"shift+alt+down","mac":"cmd+alt+down","command":"extension.vim_cmd+alt+down","when":"editorTextFocus && vim.active && !inDebugRepl"},{"key":"ctrl+alt+up","linux":"shift+alt+up","mac":"cmd+alt+up","command":"extension.vim_cmd+alt+up","when":"editorTextFocus && vim.active && !inDebugRepl"},{"key":"j","command":"notebook.focusNextEditor","when":"vim.mode == 'Normal' && editorTextFocus && inputFocus && notebookEditorFocused && notebookEditorCursorAtBoundary != 'none' && notebookEditorCursorAtBoundary != 'top'"},{"key":"k","command":"notebook.focusPreviousEditor","when":"vim.mode == 'Normal' && editorTextFocus && inputFocus && notebookEditorFocused && notebookEditorCursorAtBoundary != 'bottom' && notebookEditorCursorAtBoundary != 'none'"}],"configuration":{"title":"Vim","type":"object","properties":{"vim.normalModeKeyBindings":{"type":"array","markdownDescription":"Remapped keys in Normal mode. Allows mapping to Vim commands or VS Code actions. See [README](https://github.com/VSCodeVim/Vim/#key-remapping) for details.","scope":"application"},"vim.normalModeKeyBindingsNonRecursive":{"type":"array","markdownDescription":"Non-recursive remapped keys in Normal mode. Allows mapping to Vim commands or VS Code actions. See [README](https://github.com/VSCodeVim/Vim/#key-remapping) for details.","scope":"application"},"vim.operatorPendingModeKeyBindings":{"type":"array","markdownDescription":"Remapped keys in OperatorPending mode. Allows mapping to Vim commands or VS Code actions. See [README](https://github.com/VSCodeVim/Vim/#key-remapping) for details.","scope":"application"},"vim.operatorPendingModeKeyBindingsNonRecursive":{"type":"array","markdownDescription":"Non-recursive remapped keys in OperatorPending mode. Allows mapping to Vim commands or VS Code actions. See [README](https://github.com/VSCodeVim/Vim/#key-remapping) for details.","scope":"application"},"vim.useCtrlKeys":{"type":"boolean","markdownDescription":"Enable some Vim Ctrl key commands that override otherwise common operations, like `Ctrl+C`.","default":true},"vim.leader":{"type":"string","markdownDescription":"What key should `<leader>` map to in remappings?","default":"\\"},"vim.searchHighlightColor":{"type":"string","markdownDescription":"Background color of non-current search matches. The color must not be opaque so as not to hide underlying decorations. Uses `#editor.findMatchHighlightColor#` from current theme if undefined."},"vim.searchHighlightTextColor":{"type":"string","markdownDescription":"Foreground color of non-current search matches."},"vim.searchMatchColor":{"type":"string","markdownDescription":"Background color of the current match. Uses `#editor.findMatchColor#` from current theme if undefined."},"vim.searchMatchTextColor":{"type":"string","markdownDescription":"Foreground color of the current match."},"vim.substitutionColor":{"type":"string","markdownDescription":"Background color of substituted text when `#editor.inccommand#` is enabled. Uses `#editor.findMatchColor#` from current theme if undefined."},"vim.substitutionTextColor":{"type":"string","markdownDescription":"Foreground color of substituted text when `#editor.inccommand#` is enabled."},"vim.highlightedyank.enable":{"type":"boolean","description":"Enable highlighting when yanking.","default":false},"vim.highlightedyank.color":{"type":"string","description":"Background color of yanked text. The color must not be opaque so as not to hide underlying decorations.","default":"rgba(250, 240, 170, 0.5)"},"vim.highlightedyank.textColor":{"type":"string","description":"Foreground color of yanked text."},"vim.highlightedyank.duration":{"type":"number","description":"Duration in milliseconds of the yank highlight.","default":200,"minimum":1},"vim.useSystemClipboard":{"type":"boolean","description":"Use system clipboard for unnamed register.","default":false},"vim.overrideCopy":{"type":"boolean","description":"Override VS Code's copy command with our own copy command, which works better with VSCodeVim. Turn this off if copying is not working.","default":true},"vim.insertModeKeyBindings":{"type":"array","markdownDescription":"Remapped keys in Insert mode. Allows mapping to Vim commands or VS Code actions. See [README](https://github.com/VSCodeVim/Vim/#key-remapping) for details.","scope":"application"},"vim.insertModeKeyBindingsNonRecursive":{"type":"array","markdownDescription":"Non-recursive keybinding overrides to use for Insert mode. Allows mapping to Vim commands or VS Code actions. See [README](https://github.com/VSCodeVim/Vim/#key-remapping) for details.","scope":"application"},"vim.visualModeKeyBindings":{"type":"array","markdownDescription":"Remapped keys in Visual mode. Allows mapping to Vim commands or VS Code actions. See [README](https://github.com/VSCodeVim/Vim/#key-remapping) for details.","scope":"application"},"vim.visualModeKeyBindingsNonRecursive":{"type":"array","markdownDescription":"Non-recursive keybinding overrides to use for Visual mode. Allows mapping to Vim commands or VS Code actions. See [README](https://github.com/VSCodeVim/Vim/#key-remapping) for details.","scope":"application"},"vim.commandLineModeKeyBindings":{"type":"array","markdownDescription":"Remapped keys in command line mode. Allows mapping to Vim commands or VS Code actions. See [README](https://github.com/VSCodeVim/Vim/#key-remapping) for details.","scope":"application"},"vim.commandLineModeKeyBindingsNonRecursive":{"type":"array","markdownDescription":"Non-recursive keybinding overrides to use for command line mode. Allows mapping to Vim commands or VS Code actions. See [README](https://github.com/VSCodeVim/Vim/#key-remapping) for details.","scope":"application"},"vim.textwidth":{"type":"number","markdownDescription":"Width to word-wrap to when using `gq`.","default":80,"scope":"language-overridable","minimum":1},"vim.timeout":{"type":"number","description":"Timeout in milliseconds for remapped commands.","default":1000,"minimum":0},"vim.maxmapdepth":{"type":"number","description":"Maximum number of times a mapping is done without resulting in a character to be used.","default":1000,"minimum":0},"vim.scroll":{"type":"number","markdownDescription":"Number of lines to scroll with `Ctrl-U` and `Ctrl-D` commands. Set to 0 to use a half page scroll.","default":0,"minimum":0},"vim.showcmd":{"type":"boolean","description":"Show the text of any command you are in the middle of writing.","default":true},"vim.showmodename":{"type":"boolean","description":"Show the name of the current mode in the statusbar.","default":true},"vim.iskeyword":{"type":"string","markdownDescription":"Keywords contain alphanumeric characters and '_'. If not configured, `#editor.wordSeparators#` is used."},"vim.ignorecase":{"type":"boolean","description":"Ignore case in search patterns.","default":true},"vim.smartcase":{"type":"boolean","markdownDescription":"Override the `ignorecase` option if the search pattern contains upper case characters.","default":true},"vim.matchpairs":{"type":"string","markdownDescription":"Characters that form pairs. The % command jumps from one to the other. Only character pairs are allowed that are different, thus you cannot jump between two double quotes. The characters must be separated by a colon. The pairs must be separated by a comma.","default":"(:),{:},[:]","pattern":"^(.:.)?(,.:.)*$"},"vim.camelCaseMotion.enable":{"type":"boolean","markdownDescription":"Enable the [CamelCaseMotion](https://github.com/bkad/CamelCaseMotion) plugin for Vim.","default":false},"vim.easymotion":{"type":"boolean","markdownDescription":"Enable the [EasyMotion](https://github.com/easymotion/vim-easymotion) plugin for Vim.","default":false},"vim.easymotionMarkerBackgroundColor":{"type":"string","default":"#0000","description":"Set a custom background color for EasyMotion markers."},"vim.easymotionMarkerForegroundColorOneChar":{"type":"string","default":"#ff0000","description":"Set a custom color for the text on one character long markers."},"vim.easymotionMarkerForegroundColorTwoCharFirst":{"type":"string","default":"#ffb400","description":"Set a custom color for the first character on two character long markers."},"vim.easymotionMarkerForegroundColorTwoCharSecond":{"type":"string","default":"#b98300","description":"Set a custom color for the second character on two character long markers."},"vim.easymotionIncSearchForegroundColor":{"type":"string","default":"#7fbf00","markdownDescription":"Set a custom color for the easymotion search n-character (default `<leader><leader>/`)."},"vim.easymotionDimColor":{"type":"string","default":"#777777","markdownDescription":"Set a custom color for the easymotion dimmed characters when `#vim.easymotionDimBackground#` is set to true."},"vim.easymotionDimBackground":{"type":"boolean","description":"Whether to dim other text while markers are visible.","default":true},"vim.easymotionMarkerFontWeight":{"type":"string","description":"Set the font weight of the marker text.","default":"bold"},"vim.easymotionKeys":{"type":"string","description":"Set the characters used for jump marker name.","default":"hklyuiopnm,qwertzxcvbasdgjf;"},"vim.easymotionJumpToAnywhereRegex":{"type":"string","description":"Regex matches for JumpToAnywhere motion.","default":"\\b[A-Za-z0-9]|[A-Za-z0-9]\\b|_.|#.|[a-z][A-Z]"},"vim.replaceWithRegister":{"type":"boolean","markdownDescription":"Enable the [ReplaceWithRegister](https://github.com/vim-scripts/ReplaceWithRegister) plugin for Vim.","default":false},"vim.smartRelativeLine":{"type":"boolean","markdownDescription":"`#editor.lineNumbers#` is determined by the active Vim mode, absolute when in insert mode, relative otherwise.","default":false},"vim.targets.enable":{"type":"boolean","markdownDescription":"Enable [targets.vim](https://github.com/wellle/targets.vim#quote-text-objects) plugin (not fully implemented yet).","default":false},"vim.targets.bracketObjects.enable":{"type":"boolean","markdownDescription":"Enable last/next movements for bracket objects.","default":true},"vim.targets.smartQuotes.enable":{"type":"boolean","markdownDescription":"Enable the smart quotes movements from [targets.vim](https://github.com/wellle/targets.vim#quote-text-objects).","default":true},"vim.targets.smartQuotes.breakThroughLines":{"type":"boolean","markdownDescription":"Whether to break through lines when using [n]ext/[l]ast motion, see [targets.vim#next-and-last-quote](https://github.com/wellle/targets.vim#next-and-last-quote).","default":true},"vim.targets.smartQuotes.aIncludesSurroundingSpaces":{"type":"boolean","markdownDescription":"Whether to use default Vim behavior when using `a` (e.g. `da'`) which include surrounding spaces, or not, as for other text objects.","default":true},"vim.sneak":{"type":"boolean","markdownDescription":"Enable the [Sneak](https://github.com/justinmk/vim-sneak) plugin for Vim.","default":false},"vim.sneakUseIgnorecaseAndSmartcase":{"type":"boolean","markdownDescription":"Case sensitivity is determined by `#vim.ignorecase#` and `#vim.smartcase#`.","default":false},"vim.sneakReplacesF":{"type":"boolean","markdownDescription":"Use single-character [Sneak](https://github.com/justinmk/vim-sneak) instead of Vim's native `f`.","default":false},"vim.surround":{"type":"boolean","markdownDescription":"Enable the [Surround](https://github.com/tpope/vim-surround) plugin for Vim.","default":true},"vim.argumentObjectSeparators":{"type":"array","items":{"type":"string"},"markdownDescription":"Set separators for the argument text object.","default":[","]},"vim.argumentObjectOpeningDelimiters":{"type":"array","items":{"type":"string"},"markdownDescription":"Set opening delimiters for the argument text object.","default":["(","["]},"vim.argumentObjectClosingDelimiters":{"type":"array","items":{"type":"string"},"markdownDescription":"Set closing delimiters for the argument text object.","default":[")","]"]},"vim.hlsearch":{"type":"boolean","description":"Show all matches of the most recent search pattern.","default":false},"vim.inccommand":{"type":"string","markdownDescription":"Show the effects of the `:substitute` command as you type.","default":"replace","enum":["","append","replace"],"enumDescriptions":["Don't show substitutions","Show substitutions after matched text","Replace matched text with substitutions"]},"vim.incsearch":{"type":"boolean","markdownDescription":"Show where a `/` or `?` search matches as you type it.","default":true},"vim.history":{"type":"number","description":"How much search or command history should be remembered.","default":50,"minimum":1,"maximum":10000},"vim.autoindent":{"type":"boolean","description":"Indent code automatically.","default":true},"vim.joinspaces":{"type":"boolean","description":"Add two spaces after '.', '?', and '!' when joining or reformatting.","default":true},"vim.startInInsertMode":{"type":"boolean","description":"Start in Insert mode."},"vim.handleKeys":{"type":"object","description":"Delegate certain key combinations back to VS Code to be handled natively.","default":{"<C-d>":true,"<C-s>":false,"<C-z>":false}},"vim.statusBarColorControl":{"type":"boolean","markdownDescription":"Allow VSCodeVim to change status bar color based on mode. **NOTE:** Using this feature will have a negative impact on performance.","default":false},"vim.statusBarColors.normal":{"type":["string","array"],"description":"Status bar color when in Normal mode.","default":["#005f5f","#ffffff"]},"vim.statusBarColors.insert":{"type":["string","array"],"description":"Status bar color when in Insert mode.","default":["#5f0000","#ffffff"]},"vim.statusBarColors.visual":{"type":["string","array"],"description":"Status bar color when in Visual mode.","default":["#5f00af","#ffffff"]},"vim.statusBarColors.visualline":{"type":["string","array"],"description":"Status bar color when in VisualLine mode.","default":["#005f87","#ffffff"]},"vim.statusBarColors.visualblock":{"type":["string","array"],"description":"Status bar color when in VisualBlock mode.","default":["#86592d","#ffffff"]},"vim.statusBarColors.replace":{"type":["string","array"],"description":"Status bar color when in Replace mode.","default":["#00000","#ffffff"]},"vim.statusBarColors.commandlineinprogress":{"type":["string","array"],"description":"Status bar color when in CommandLineInProgress mode.","default":["#007acc","#ffffff"]},"vim.statusBarColors.searchinprogressmode":{"type":["string","array"],"description":"Status bar color when in SearchInProgress mode.","default":["#007acc","#ffffff"]},"vim.statusBarColors.easymotionmode":{"type":["string","array"],"description":"Status bar color when in EasyMotion mode.","default":["#007acc","#ffffff"]},"vim.statusBarColors.easymotioninputmode":{"type":["string","array"],"description":"Status bar color when in EasyMotionInput mode.","default":["#007acc","#ffffff"]},"vim.statusBarColors.surroundinputmode":{"type":["string","array"],"description":"Status bar color when in SurroundInput mode.","default":["#007acc","#ffffff"]},"vim.visualstar":{"type":"boolean","markdownDescription":"In Visual mode, start a search with `*` or `#` using the current selection.","default":false},"vim.changeWordIncludesWhitespace":{"type":"boolean","description":"Includes trailing whitespace when changing word.","default":false},"vim.foldfix":{"type":"boolean","description":"Uses a hack to move around folds properly.","default":false},"vim.mouseSelectionGoesIntoVisualMode":{"type":"boolean","description":"If enabled, dragging with the mouse activates Visual mode.","default":true},"vim.disableExtension":{"type":"boolean","description":"Disables the VSCodeVim extension. The extension will continue to be loaded and activated, but Vim functionality will be disabled.","default":false},"vim.enableNeovim":{"type":"boolean","markdownDescription":"Use Neovim to execute Ex commands. You should restart VS Code after enabling/disabling this for the changes to take effect. **NOTE:** Neovim version 0.2.0 or greater must be installed, and if the executable is not on your PATH, `#vim.neovimPath#` must be set.","default":false},"vim.neovimPath":{"type":"string","markdownDescription":"Path to Neovim executable. For example, `/usr/bin/nvim`, or  `C:\\Program Files\\Neovim\\bin\\nvim.exe`.","default":"","scope":"machine"},"vim.neovimUseConfigFile":{"type":"boolean","markdownDescription":"Use a config file for Neovim, specified by `#vim.neovimConfigPath#`.","default":false},"vim.neovimConfigPath":{"type":"string","markdownDescription":"Path to Neovim configuration file. `#vim.neovimUseConfigFile#` must be enabled. If path is left blank, Neovim will use its default config path, i.e. `~/.config/nvim/init.vim` or 'C:\\Users\\USERNAME\\AppData\\Local\\nvim\\init.vim'.","default":"","scope":"machine"},"vim.vimrc.enable":{"type":"boolean","markdownDescription":"Use key mappings from a `.vimrc` file.","default":false},"vim.vimrc.path":{"type":"string","markdownDescription":"Path to a Vim configuration file. If unset, it will check for `$HOME/.vscodevimrc`, `$HOME/.vimrc`, `$HOME/_vimrc`, and `$HOME/.config/nvim/init.vim`, in that order."},"vim.substituteGlobalFlag":{"type":"boolean","markdownDescription":"Automatically apply the global flag, `/g`, to substitute commands. When set to true, use `/g` to mean only first match should be replaced.","default":false,"markdownDeprecationMessage":"**Deprecated**: Please use `#vim.gdefault#` instead.","deprecationMessage":"Deprecated: Please use vim.gdefault instead."},"vim.gdefault":{"type":"boolean","markdownDescription":"Automatically apply the global flag, `/g`, to substitute commands. When set to true, use `/g` to mean only first match should be replaced.","default":false},"vim.cursorStylePerMode.normal":{"type":"string","description":"Cursor style for Normal mode.","enum":["","block","block-outline","line","line-thin","underline","underline-thin"]},"vim.cursorStylePerMode.insert":{"type":"string","description":"Cursor style for Insert mode.","enum":["","block","block-outline","line","line-thin","underline","underline-thin"]},"vim.cursorStylePerMode.replace":{"type":"string","description":"Cursor style for Replace mode.","enum":["","block","block-outline","line","line-thin","underline","underline-thin"]},"vim.cursorStylePerMode.visual":{"type":"string","description":"Cursor style for Visual mode.","enum":["","block","block-outline","line","line-thin","underline","underline-thin"]},"vim.cursorStylePerMode.visualline":{"type":"string","description":"Cursor style for VisualLine mode.","enum":["","block","block-outline","line","line-thin","underline","underline-thin"]},"vim.cursorStylePerMode.visualblock":{"type":"string","description":"Cursor style for VisualBlock mode.","enum":["","block","block-outline","line","line-thin","underline","underline-thin"]},"vim.autoSwitchInputMethod.enable":{"type":"boolean","description":"If enabled, the input method switches automatically when the mode changes.","default":false},"vim.autoSwitchInputMethod.defaultIM":{"type":"string","markdownDescription":"The input method for your normal mode, find more information [here](https://github.com/VSCodeVim/Vim#input-method).","default":"","scope":"machine"},"vim.autoSwitchInputMethod.switchIMCmd":{"type":"string","description":"The shell command to switch input method.","default":"/path/to/im-select {im}","scope":"machine"},"vim.autoSwitchInputMethod.obtainIMCmd":{"type":"string","description":"The shell command to get current input method.","default":"/path/to/im-select","scope":"machine"},"vim.whichwrap":{"type":"string","description":"Comma-separated list of motion keys that should wrap to next/previous line.","default":"b,s"},"vim.report":{"type":"number","description":"Threshold for reporting number of lines changed.","default":2,"minimum":1},"vim.digraphs":{"type":"object","description":"Custom digraph shortcuts for inserting special characters, expressed as UTF16 code points.","default":{}},"vim.wrapscan":{"type":"boolean","description":"Searches wrap around the end of the file.","default":true},"vim.startofline":{"type":"boolean","markdownDescription":"When `true` the commands listed below move the cursor to the first non-blank of the line.  When `false` the cursor is kept in the same column (if possible).  This applies to the commands: `<C-d>`, `<C-u>`, `<C-b>`, `<C-f>`, `G`, `H`, `M`, `L`, `gg`, and to the commands `d`, `<<` and `>>` with a linewise operator.","default":true},"vim.showMarksInGutter":{"type":"boolean","description":"Show the currently set mark(s) in the gutter.","default":false},"vim.shell":{"type":"string","description":"Path to the shell to use for `!` and `:!` commands.","default":""},"vim.langmap":{"type":"string","description":"Language map for alternate keyboard layouts. When you are typing text in Insert (or Replace, etc.) mode, the characters are inserted derectly. Otherwise, they are translated based on the provided map."}}},"languages":[{"id":"Vimscript","extensions":[".vim",".vimrc"],"configuration":"./language-configuration.json"}],"grammars":[{"language":"Vimscript","scopeName":"source.vimscript","path":"./syntaxes/vimscript.tmLanguage.json"}]},"scripts":{"vscode:prepublish":"gulp build","build":"gulp build","build-dev":"gulp build-dev","build-test":"gulp prepare-test","test":"node ./out/test/runTest.js","lint":"eslint .","lint:fix":"eslint . --fix","prettier":"npx prettier --write .","prettier:check":"npx prettier --check .","watch":"webpack -c webpack.dev.js --watch","package":"yarn run vsce package --yarn --allow-star-activation","prepare":"husky"},"dependencies":{"diff-match-patch":"1.0.5","lodash":"^4.17.21","neovim":"5.4.0","os-browserify":"0.3.0","parsimmon":"^1.18.0","path-browserify":"1.0.1","process":"0.11.10","queue":"^6.0.2","untildify":"4.0.0","util":"0.12.5"},"devDependencies":{"@types/diff-match-patch":"1.0.36","@types/lodash":"4.17.17","@types/mocha":"10.0.10","@types/node":"20.19.17","@types/parsimmon":"1.10.9","@types/sinon":"17.0.4","@types/vscode":"1.74.0","@typescript-eslint/eslint-plugin":"^8.0.0","@typescript-eslint/parser":"^8.0.0","@vscode/test-electron":"2.5.2","@vscode/vsce":"^3.6.2","circular-dependency-plugin":"^5.2.2","clean-webpack-plugin":"4.0.0","eslint":"^8.52.0","eslint-config-prettier":"^10.0.0","eslint-plugin-jsdoc":"^60.0.0","eslint-plugin-prefer-arrow":"^1.2.3","event-stream":"4.0.1","fork-ts-checker-webpack-plugin":"9.1.0","gulp":"5.0.1","gulp-bump":"3.2.0","gulp-git":"2.11.0","gulp-tag-version":"1.3.1","gulp-typescript":"5.0.1","husky":"^9.0.0","lint-staged":"^16.0.0","minimist":"1.2.8","mocha":"11.7.2","plugin-error":"2.0.1","prettier":"3.6.2","sinon":"20.0.0","ts-loader":"9.5.4","typescript":"5.9.3","webpack":"5.102.0","webpack-cli":"6.0.1","webpack-merge":"6.0.1","webpack-stream":"7.0.0"},"lint-staged":{"*.{ts,js,json,md,yml}":"prettier --write","*.ts":"eslint --fix"}},"location":{"$mid":1,"path":"/home/usainzg/.vscode/extensions/vscodevim.vim-1.31.0","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"vscodevim","metadata":{"isApplicationScoped":false,"isMachineScoped":false,"isBuiltin":false,"installedTimestamp":1761027233161,"pinned":false,"source":"gallery","id":"d96e79c6-8b25-4be3-8545-0e0ecefcae03","publisherId":"5d63889b-1b67-4b1f-8350-4f1dce041a26","publisherDisplayName":"vscodevim","targetPlatform":"undefined","updated":true,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"preRelease":false,"size":3979424},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"ms-python.vscode-python-envs","uuid":"b41d8e8a-b6d4-4202-8f07-7189bdda81be"},"manifest":{"name":"vscode-python-envs","displayName":"Python Environments","description":"Provides a unified python environment experience","version":"1.10.0","publisher":"ms-python","preview":true,"engines":{"vscode":"^1.104.0-20250815"},"categories":["Other"],"enabledApiProposals":["terminalShellEnv"],"capabilities":{"untrustedWorkspaces":{"supported":false,"description":"This extension doesn't support untrusted workspaces."},"virtualWorkspaces":{"supported":false,"description":"This extension doesn't support virtual workspaces."}},"activationEvents":["onLanguage:python"],"homepage":"https://github.com/microsoft/vscode-python-environments","repository":{"type":"git","url":"https://github.com/microsoft/vscode-python-environments.git"},"bugs":{"url":"https://github.com/microsoft/vscode-python-environments/issues"},"main":"./dist/extension.js","l10n":"./l10n","icon":"icon.png","contributes":{"configuration":{"properties":{"python-envs.defaultEnvManager":{"type":"string","description":"The default environment manager for creating and managing environments.","default":"ms-python.python:venv","scope":"window"},"python-envs.defaultPackageManager":{"type":"string","description":"The default package manager for installing packages in environments.","default":"ms-python.python:pip","scope":"window"},"python-envs.pythonProjects":{"type":"array","default":[],"description":"The list of Python projects.","scope":"resource","items":{"type":"object","properties":{"path":{"type":"string","description":"The path to a folder or file in the workspace to be treated as a Python project."},"envManager":{"type":"string","description":"The environment manager for creating and managing environments for this project.","default":"ms-python.python:venv"},"packageManager":{"type":"string","description":"The package manager for managing packages in environments for this project.","default":"ms-python.python:pip"}}}},"python-envs.terminal.showActivateButton":{"type":"boolean","description":"Whether to show the 'Activate' button in the terminal menu","default":false,"scope":"machine","tags":["onExP","preview"]},"python-envs.terminal.autoActivationType":{"type":"string","markdownDescription":"Specifies how the extension can activate an environment in a terminal.\n\nUtilizing Shell Startup requires changes to the shell script file and is only enabled for the following shells: zsh, fsh, pwsh, bash, cmd. When set to `command`, any shell can be activated.\n\nThis setting takes precedence over the legacy `python.terminal.activateEnvironment` setting. If this setting is not explicitly set and `python.terminal.activateEnvironment` is set to false, this setting will automatically be set to `off` to preserve your preference.\n\nThis setting applies only when terminals are created, so you will need to restart your terminals for it to take effect.\n\nTo revert changes made during shellStartup, run `Python Envs: Revert Shell Startup Script Changes`.","default":"command","enum":["command","shellStartup","off"],"markdownEnumDescriptions":["Activation by executing a command in the terminal.","Activation by modifying the terminal shell startup script. To use this feature we will need to modify your shell startup scripts.","No automatic activation of environments."],"scope":"machine"},"python.terminal.useEnvFile":{"type":"boolean","description":"Controls whether environment variables from .env files and python.envFile setting are injected into terminals.","default":false,"scope":"resource"},"python-env.globalSearchPaths":{"type":"array","description":"Global search paths for Python environments. Absolute directory paths that are searched at the user level.","default":[],"scope":"machine","items":{"type":"string"}},"python-env.workspaceSearchPaths":{"type":"array","description":"Workspace search paths for Python environments. Can be absolute paths or relative directory paths searched within the workspace.","default":[],"scope":"resource","items":{"type":"string"}}}},"commands":[{"command":"python-envs.setEnvManager","title":"Set Environment Manager","category":"Python","icon":"$(gear)","when":"config.python.useEnvironmentsExtension != false"},{"command":"python-envs.setPkgManager","title":"Set Package Manager","category":"Python","icon":"$(package)"},{"command":"python-envs.addPythonProject","title":"Add Python Project","category":"Python","icon":"$(new-folder)"},{"command":"python-envs.addPythonProjectGivenResource","title":"Add as Python Project","category":"Python","icon":"$(new-folder)"},{"command":"python-envs.removePythonProject","title":"Remove Python Project","category":"Python","icon":"$(remove)"},{"command":"python-envs.create","title":"Create Environment","category":"Python","icon":"$(add)"},{"command":"python-envs.createAny","title":"Create Environment","category":"Python","icon":"$(add)"},{"command":"python-envs.set","title":"Set Project Environment","category":"Python","icon":"$(check)"},{"command":"python-envs.setEnv","title":"Set As Project Environment","category":"Python","icon":"$(check)"},{"command":"python-envs.remove","title":"Delete Environment","category":"Python","icon":"$(remove)"},{"command":"python-envs.refreshAllManagers","title":"Refresh All Environment Managers","shortTitle":"Refresh All","category":"Python","icon":"$(refresh)"},{"command":"python-envs.refreshPackages","title":"Refresh Packages List","category":"Python","icon":"$(refresh)"},{"command":"python-envs.packages","title":"Manage Packages","category":"Python","icon":"$(package)"},{"command":"python-envs.clearCache","title":"Clear Cache","category":"Python","icon":"$(trash)"},{"command":"python-envs.runInTerminal","title":"Run in Terminal","category":"Python Envs","icon":"$(play)"},{"command":"python-envs.createTerminal","title":"Create Python Terminal","category":"Python Envs","icon":"$(terminal)"},{"command":"python-envs.createNewProjectFromTemplate","title":"Create New Project from Template","category":"Python Envs","icon":"$(play)"},{"command":"python-envs.runAsTask","title":"Run as Task","category":"Python Envs","icon":"$(play)"},{"command":"python-envs.terminal.activate","title":"Activate Environment in Current Terminal","category":"Python Envs","icon":"$(python)"},{"command":"python-envs.terminal.deactivate","title":"Deactivate Environment in Current Terminal","category":"Python Envs","icon":"$(circle-slash)"},{"command":"python-envs.uninstallPackage","title":"Uninstall Package","category":"Python Envs","icon":"$(trash)"},{"command":"python-envs.copyEnvPath","title":"Copy Environment Path","category":"Python Envs","icon":"$(copy)"},{"command":"python-envs.copyProjectPath","title":"Copy Project Path","category":"Python Envs","icon":"$(copy)"},{"command":"python-envs.terminal.revertStartupScriptChanges","title":"Revert Shell Startup Script Changes","category":"Python Envs","icon":"$(discard)"},{"command":"python-envs.reportIssue","title":"Report Issue","category":"Python Environments"},{"command":"python-envs.revealProjectInExplorer","title":"Reveal Project in Explorer","category":"Python Envs","icon":"$(folder-opened)"},{"command":"python-envs.runPetInTerminal","title":"Run Python Environment Tool (PET) in Terminal...","category":"Python","icon":"$(terminal)","when":"config.python.useEnvironmentsExtension != false"}],"menus":{"commandPalette":[{"command":"python-envs.refreshAllManagers","when":"false"},{"command":"python-envs.refreshPackages","when":"false"},{"command":"python-envs.create","when":"false"},{"command":"python-envs.setEnv","when":"false"},{"command":"python-envs.remove","when":"false"},{"command":"python-envs.addPythonProject","when":"false"},{"command":"python-envs.addPythonProjectGivenResource","when":"false"},{"command":"python-envs.setEnvManager","when":"config.python.useEnvironmentsExtension != false"},{"command":"python-envs.packages","when":"config.python.useEnvironmentsExtension != false"},{"command":"python-envs.set","when":"config.python.useEnvironmentsExtension != false"},{"command":"python-envs.setPkgManager","when":"config.python.useEnvironmentsExtension != false"},{"command":"python-envs.removePythonProject","when":"false"},{"command":"python-envs.createTerminal","when":"false"},{"command":"python-envs.runInTerminal","when":"false"},{"command":"python-envs.runAsTask","when":"config.python.useEnvironmentsExtension != false"},{"command":"python-envs.terminal.activate","when":"pythonTerminalActivation"},{"command":"python-envs.terminal.deactivate","when":"pythonTerminalActivation"},{"command":"python-envs.uninstallPackage","when":"false"},{"command":"python-envs.copyEnvPath","when":"false"},{"command":"python-envs.copyProjectPath","when":"false"},{"command":"python-envs.createAny","when":"false"},{"command":"python-envs.revealProjectInExplorer","when":"false"},{"command":"python-envs.createNewProjectFromTemplate","when":"config.python.useEnvironmentsExtension != false"},{"command":"python-envs.terminal.revertStartupScriptChanges","when":"config.python.useEnvironmentsExtension != false"},{"command":"python-envs.reportIssue","when":"config.python.useEnvironmentsExtension != false"}],"view/item/context":[{"command":"python-envs.create","group":"inline","when":"view == env-managers && viewItem =~ /.*pythonEnvManager.*;create;.*/"},{"command":"python-envs.remove","when":"view == env-managers && viewItem =~ /.*pythonEnvironment.*;remove;.*/"},{"command":"python-envs.setEnv","group":"inline","when":"view == env-managers && viewItem =~ /.*pythonEnvironment.*/"},{"command":"python-envs.createTerminal","group":"inline","when":"view == env-managers && viewItem =~ /.*pythonEnvironment.*;activatable;.*/"},{"command":"python-envs.refreshPackages","when":"view == env-managers && viewItem =~ /.*pythonEnvironment.*/"},{"command":"python-envs.packages","group":"inline","when":"view == env-managers && viewItem =~ /.*pythonEnvironment.*/"},{"command":"python-envs.copyEnvPath","group":"inline","when":"view == env-managers && viewItem =~ /.*pythonEnvironment.*/"},{"command":"python-envs.uninstallPackage","group":"inline","when":"view == env-managers && viewItem == python-package"},{"command":"python-envs.copyEnvPath","group":"inline","when":"view == python-projects && viewItem == python-env"},{"command":"python-envs.remove","when":"view == python-projects && viewItem == python-env"},{"command":"python-envs.removePythonProject","when":"view == python-projects && viewItem == python-workspace-removable"},{"command":"python-envs.set","group":"inline","when":"view == python-projects && viewItem =~ /.*python-workspace.*/"},{"command":"python-envs.createTerminal","group":"inline","when":"view == python-projects && viewItem =~ /.*python-workspace.*/"},{"command":"python-envs.copyProjectPath","group":"inline","when":"view == python-projects && viewItem =~ /.*python-workspace.*/"},{"command":"python-envs.revealProjectInExplorer","when":"view == python-projects && viewItem =~ /.*python-workspace.*/"},{"command":"python-envs.uninstallPackage","group":"inline","when":"view == python-projects && viewItem == python-package"}],"view/title":[{"command":"python-envs.addPythonProject","group":"navigation","when":"view == python-projects"},{"command":"python-envs.createAny","group":"navigation","when":"view == env-managers"},{"command":"python-envs.refreshAllManagers","group":"navigation","when":"view == env-managers"},{"command":"python-envs.terminal.activate","group":"navigation","when":"view == terminal && config.python-envs.terminal.showActivateButton && pythonTerminalActivation && !pythonTerminalActivated"},{"command":"python-envs.terminal.deactivate","group":"navigation","when":"view == terminal && config.python-envs.terminal.showActivateButton && pythonTerminalActivation && pythonTerminalActivated"}],"explorer/context":[{"command":"python-envs.addPythonProjectGivenResource","group":"inline","when":"explorerViewletVisible && explorerResourceIsFolder"},{"command":"python-envs.addPythonProjectGivenResource","group":"inline","when":"explorerViewletVisible && resourceExtname == .py"}],"editor/title":[{"command":"python-envs.terminal.activate","group":"navigation","when":"resourceScheme == vscode-terminal && config.python-envs.terminal.showActivateButton && pythonTerminalActivation && !pythonTerminalActivated"},{"command":"python-envs.terminal.deactivate","group":"navigation","when":"resourceScheme == vscode-terminal && config.python-envs.terminal.showActivateButton && pythonTerminalActivation && pythonTerminalActivated"}],"editor/title/run":[{"command":"python-envs.runAsTask","group":"Python","when":"editorLangId == python"}],"terminal/title/context":[{"command":"python-envs.terminal.activate","when":"pythonTerminalActivation && !pythonTerminalActivated"},{"command":"python-envs.terminal.deactivate","when":"pythonTerminalActivation && pythonTerminalActivated"}]},"viewsContainers":{"activitybar":[{"id":"python","title":"Python","icon":"files/logo.svg","when":"config.python.useEnvironmentsExtension != false"}]},"views":{"python":[{"id":"python-projects","name":"Python Projects","icon":"files/logo.svg","contextualTitle":"Python Projects","when":"config.python.useEnvironmentsExtension != false"},{"id":"env-managers","name":"Environment Managers","icon":"files/logo.svg","contextualTitle":"Environment Managers","when":"config.python.useEnvironmentsExtension != false"}]},"taskDefinitions":[{"type":"python"}]},"scripts":{"vscode:prepublish":"npm run package","compile":"webpack","watch":"webpack --watch","package":"webpack --mode production --devtool source-map --config ./webpack.config.js","compile-tests":"tsc -p . --outDir out","watch-tests":"tsc -p . -w --outDir out","pretest":"npm run compile-tests && npm run compile","lint":"eslint --config=eslint.config.mjs src","unittest":"mocha --config=./build/.mocha.unittests.json","vsce-package":"vsce package -o ms-python-envs-insiders.vsix"},"devDependencies":{"@types/fs-extra":"^11.0.4","@types/glob":"^8.1.0","@types/mocha":"^10.0.1","@types/node":"20.2.5","@types/sinon":"^17.0.3","@types/stack-trace":"0.0.29","@types/vscode":"^1.99.0","@types/which":"^3.0.4","@typescript-eslint/eslint-plugin":"^8.16.0","@typescript-eslint/parser":"^8.16.0","@vscode/test-electron":"^2.3.2","@vscode/vsce":"^2.24.0","eslint":"^9.15.0","glob":"^8.1.0","mocha":"^10.8.2","sinon":"^19.0.2","ts-loader":"^9.4.3","ts-mockito":"^2.6.1","typemoq":"^2.1.0","typescript":"^5.1.3","webpack":"^5.85.0","webpack-cli":"^5.1.1"},"dependencies":{"@iarna/toml":"^2.2.5","@vscode/extension-telemetry":"^0.9.7","@vscode/test-cli":"^0.0.10","dotenv":"^16.4.5","fs-extra":"^11.2.0","stack-trace":"0.0.10","vscode-jsonrpc":"^9.0.0-next.5","which":"^4.0.0"},"enableTelemetry":true},"location":{"$mid":1,"path":"/home/usainzg/.vscode/extensions/ms-python.vscode-python-envs-1.10.0-linux-x64","scheme":"file"},"isBuiltin":false,"targetPlatform":"linux-x64","publisherDisplayName":"Microsoft","metadata":{"isApplicationScoped":false,"isMachineScoped":false,"isBuiltin":false,"installedTimestamp":1761027233160,"pinned":false,"source":"gallery","id":"b41d8e8a-b6d4-4202-8f07-7189bdda81be","publisherId":"998b010b-e2af-44a5-a6cd-0b5fd3b9b6f8","publisherDisplayName":"Microsoft","targetPlatform":"linux-x64","updated":true,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"preRelease":false,"size":19935181},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"ms-python.debugpy","uuid":"4bd5d2c9-9d65-401a-b0b2-7498d9f17615"},"manifest":{"name":"debugpy","displayName":"Python Debugger","description":"Python Debugger extension using debugpy.","version":"2025.14.1","publisher":"ms-python","enabledApiProposals":["portsAttributes","debugVisualization","contribViewsWelcome"],"license":"MIT","homepage":"https://github.com/Microsoft/vscode-python-debugger","repository":{"type":"git","url":"https://github.com/microsoft/vscode-python-debugger.git"},"bugs":{"url":"https://github.com/Microsoft/vscode-python-debugger/issues"},"icon":"icon.png","keywords":["python","debugger","debugpy"],"engines":{"vscode":"^1.92.0"},"categories":["Debuggers"],"activationEvents":["onDebugInitialConfigurations","onDebugDynamicConfigurations:debugpy","onDebugResolve:debugpy","onLanguage:python"],"main":"./dist/extension.js","l10n":"./l10n","contributes":{"commands":[{"category":"Python Debugger","command":"debugpy.debugInTerminal","icon":"$(debug-alt)","title":"Python Debugger: Debug Python File"},{"category":"Python Debugger","command":"debugpy.debugUsingLaunchConfig","icon":"$(debug-alt)","title":"Python Debugger: Debug using launch.json"},{"category":"Python Debugger","command":"debugpy.clearCacheAndReload","title":"Clear Cache and Reload Window"},{"category":"Python Debugger","command":"debugpy.viewOutput","icon":{"dark":"resources/dark/repl.svg","light":"resources/light/repl.svg"},"title":"Show Output"},{"category":"Python Debugger","command":"debugpy.reportIssue","title":"Report Issue..."}],"menus":{"issue/reporter":[{"command":"debugpy.reportIssue"}],"commandPalette":[{"category":"Python Debugger","command":"debugpy.clearCacheAndReload","title":"Clear Cache and Reload Window"},{"category":"Python Debugger","command":"debugpy.debugInTerminal","icon":"$(debug-alt)","title":"Python Debugger: Debug Python File","when":"!virtualWorkspace && shellExecutionSupported && editorLangId == python"},{"category":"Python Debugger","command":"debugpy.debugUsingLaunchConfig","icon":"$(debug-alt)","title":"Python Debugger: Debug using launch.json","when":"!virtualWorkspace && shellExecutionSupported && editorLangId == python"},{"category":"Python Debugger","command":"debugpy.viewOutput","title":"Show Output"},{"category":"Python Debugger","command":"debugpy.reportIssue","title":"Report Issue...","when":"!virtualWorkspace && shellExecutionSupported"}],"editor/title/run":[{"command":"debugpy.debugInTerminal","title":"Python Debugger: Debug Python File","when":"resourceLangId == python && !isInDiffEditor && !virtualWorkspace && shellExecutionSupported"},{"command":"debugpy.debugUsingLaunchConfig","title":"Python Debugger: Debug using launch.json","when":"resourceLangId == python && !isInDiffEditor && !virtualWorkspace && shellExecutionSupported"}]},"configuration":{"properties":{"debugpy.debugJustMyCode":{"default":true,"description":"When debugging only step through user-written code. Disable this to allow stepping into library code.","scope":"resource","type":"boolean"},"debugpy.showPythonInlineValues":{"default":false,"description":"Whether to display inline values in the editor while debugging.","scope":"resource","type":"boolean","tags":["experimental"]}},"title":"Python Debugger","type":"object"},"debuggers":[{"configurationAttributes":{"attach":{"properties":{"autoReload":{"default":{},"description":"Configures automatic reload of code on edit.","properties":{"enable":{"default":false,"description":"Automatically reload code on edit.","type":"boolean"},"exclude":{"default":["**/.git/**","**/.metadata/**","**/__pycache__/**","**/node_modules/**","**/site-packages/**"],"description":"Glob patterns of paths to exclude from auto reload.","items":{"type":"string"},"type":"array"},"include":{"default":["**/*.py","**/*.pyw"],"description":"Glob patterns of paths to include in auto reload.","items":{"type":"string"},"type":"array"}},"type":"object"},"connect":{"label":"Attach by connecting to debugpy over a socket.","properties":{"host":{"default":"127.0.0.1","description":"Hostname or IP address to connect to.","type":"string"},"port":{"description":"Port to connect to.","type":["number","string"]}},"required":["port"],"type":"object"},"debugAdapterPath":{"description":"Path (fully qualified) to the python debug adapter executable.","type":"string"},"django":{"default":false,"description":"Django debugging.","type":"boolean"},"jinja":{"default":null,"description":"Jinja template debugging (e.g. Flask).","enum":[false,null,true]},"justMyCode":{"default":true,"description":"If true, show and debug only user-written code. If false, show and debug all code, including library calls.","type":"boolean"},"listen":{"label":"Attach by listening for incoming socket connection from debugpy","properties":{"host":{"default":"127.0.0.1","description":"Hostname or IP address of the interface to listen on.","type":"string"},"port":{"description":"Port to listen on.","type":["number","string"]}},"required":["port"],"type":"object"},"logToFile":{"default":false,"description":"Enable logging of debugger events to a log file. This file can be found in the debugpy extension install folder.","type":"boolean"},"pathMappings":{"default":[],"items":{"label":"Path mapping","properties":{"localRoot":{"default":"${workspaceFolder}","label":"Local source root.","type":"string"},"remoteRoot":{"default":"","label":"Remote source root.","type":"string"}},"required":["localRoot","remoteRoot"],"type":"object"},"label":"Path mappings.","type":"array"},"processId":{"anyOf":[{"default":"${command:pickProcess}","description":"Use process picker to select a process to attach, or Process ID as integer.","enum":["${command:pickProcess}"]},{"description":"ID of the local process to attach to.","type":"integer"}]},"redirectOutput":{"default":true,"description":"Redirect output.","type":"boolean"},"showReturnValue":{"default":true,"description":"Show return value of functions when stepping.","type":"boolean"},"subProcess":{"default":false,"description":"Whether to enable Sub Process debugging","type":"boolean"},"consoleName":{"default":"Python Debug Console","description":"Display name of the debug console or terminal","type":"string"},"clientOS":{"default":null,"description":"OS that VS code is using.","enum":["windows",null,"unix"]}}},"launch":{"properties":{"args":{"default":[],"description":"Command line arguments passed to the program. For string type arguments, it will pass through the shell as is, and therefore all shell variable expansions will apply. But for the array type, the values will be shell-escaped.","items":{"type":"string"},"anyOf":[{"default":"${command:pickArgs}","enum":["${command:pickArgs}"]},{"type":["array","string"]}]},"autoReload":{"default":{},"description":"Configures automatic reload of code on edit.","properties":{"enable":{"default":false,"description":"Automatically reload code on edit.","type":"boolean"},"exclude":{"default":["**/.git/**","**/.metadata/**","**/__pycache__/**","**/node_modules/**","**/site-packages/**"],"description":"Glob patterns of paths to exclude from auto reload.","items":{"type":"string"},"type":"array"},"include":{"default":["**/*.py","**/*.pyw"],"description":"Glob patterns of paths to include in auto reload.","items":{"type":"string"},"type":"array"}},"type":"object"},"console":{"default":"integratedTerminal","description":"Where to launch the debug target: internal console, integrated terminal, or external terminal.","enum":["externalTerminal","integratedTerminal","internalConsole"]},"cwd":{"default":"${workspaceFolder}","description":"Absolute path to the working directory of the program being debugged. Default is the root directory of the file (leave empty).","type":"string"},"debugAdapterPath":{"description":"Path (fully qualified) to the Python debug adapter executable.","type":"string"},"autoStartBrowser":{"default":false,"description":"Open external browser to launch the application","type":"boolean"},"django":{"default":false,"description":"Django debugging.","type":"boolean"},"env":{"additionalProperties":{"type":"string"},"default":{},"description":"Environment variables defined as a key value pair. Property ends up being the Environment Variable and the value of the property ends up being the value of the Env Variable.","type":"object"},"envFile":{"default":"${workspaceFolder}/.env","description":"Absolute path to a file containing environment variable definitions.","type":"string"},"gevent":{"default":false,"description":"Enable debugging of gevent monkey-patched code.","type":"boolean"},"jinja":{"default":null,"description":"Jinja template debugging (e.g. Flask).","enum":[false,null,true]},"justMyCode":{"default":true,"description":"Debug only user-written code.","type":"boolean"},"logToFile":{"default":false,"description":"Enable logging of debugger events to a log file. This file can be found in the debugpy extension install folder.","type":"boolean"},"module":{"default":"","description":"Name of the module to be debugged.","type":"string"},"pathMappings":{"default":[],"items":{"label":"Path mapping","properties":{"localRoot":{"default":"${workspaceFolder}","label":"Local source root.","type":"string"},"remoteRoot":{"default":"","label":"Remote source root.","type":"string"}},"required":["localRoot","remoteRoot"],"type":"object"},"label":"Path mappings.","type":"array"},"program":{"default":"${file}","description":"Absolute path to the program.","type":"string"},"purpose":{"default":[],"description":"Tells extension to use this configuration for test debugging, or when using debug-in-terminal command.","items":{"enum":["debug-test","debug-in-terminal"],"enumDescriptions":["Use this configuration while debugging tests using test view or test debug commands.","Use this configuration while debugging a file using debug in terminal button in the editor."]},"type":"array"},"pyramid":{"default":false,"description":"Whether debugging Pyramid applications.","type":"boolean"},"python":{"default":"${command:python.interpreterPath}","description":"Absolute path to the Python interpreter executable; overrides workspace configuration if set.","type":"string"},"pythonArgs":{"default":[],"description":"Command-line arguments passed to the Python interpreter. To pass arguments to the debug target, use \"args\".","items":{"type":"string"},"type":"array"},"redirectOutput":{"default":true,"description":"Redirect output.","type":"boolean"},"showReturnValue":{"default":true,"description":"Show return value of functions when stepping.","type":"boolean"},"stopOnEntry":{"default":false,"description":"Automatically stop after launch.","type":"boolean"},"subProcess":{"default":false,"description":"Whether to enable Sub Process debugging.","type":"boolean"},"sudo":{"default":false,"description":"Running debug program under elevated permissions (on Unix).","type":"boolean"},"guiEventLoop":{"default":"matplotlib","description":"The GUI event loop that's going to run. Possible values: \"matplotlib\", \"wx\", \"qt\", \"none\", or a custom function that'll be imported and run.","type":"string"},"consoleName":{"default":"Python Debug Console","description":"Display name of the debug console or terminal","type":"string"},"clientOS":{"default":null,"description":"OS that VS code is using.","enum":["windows",null,"unix"]}}}},"configurationSnippets":[],"label":"Python Debugger","languages":["python"],"type":"debugpy","variables":{"pickProcess":"debugpy.pickLocalProcess","pickArgs":"debugpy.pickArgs"},"when":"!virtualWorkspace && shellExecutionSupported"}],"debugVisualizers":[{"id":"inlineHexDecoder","when":"debugConfigurationType == 'debugpy' && (variableType == 'float' || variableType == 'int')"}],"viewsWelcome":[{"view":"debug","contents":"\n[Show automatic Python configurations](command:workbench.action.debug.selectandstart?%5B%22debugpy%22%5D)\n","when":"dynamicPythonConfigAvailable && !virtualWorkspace"}]},"extensionDependencies":["ms-python.python"],"scripts":{"vscode:prepublish":"npm run package","compile":"webpack","watch":"webpack --watch","package":"webpack --mode production --devtool hidden-source-map","compile-tests":"tsc -p . --outDir out","watch-tests":"tsc -p . -w --outDir out","pretest":"npm run compile-tests && npm run compile && npm run lint","lint":"eslint src --ext ts","format-check":"prettier --check 'src/**/*.ts' 'build/**/*.yml' '.github/**/*.yml'","format-fix":"prettier --write 'src/**/*.ts' 'build/**/*.yml' '.github/**/*.yml'","test":"node ./out/test/runTest.js","vsce-package":"npx @vscode/vsce package -o python-debugger.vsix"},"devDependencies":{"@types/chai":"^4.1.2","@types/chai-as-promised":"^7.1.0","@types/fs-extra":"^11.0.4","@types/glob":"^7.2.0","@types/lodash":"^4.14.104","@types/mocha":"^9.1.0","@types/node":"^22.5.0","@types/semver":"^5.5.0","@types/sinon":"^10.0.13","@types/vscode":"^1.87.0","@typescript-eslint/eslint-plugin":"^5.62.0","@typescript-eslint/parser":"^5.62.0","@vscode/test-electron":"^2.3.9","@vscode/vsce":"^2.24.0","chai":"^4.3.7","chai-as-promised":"^7.1.1","eslint":"^8.50.0","glob":"^8.0.3","mocha":"^10.7.0","prettier":"^3.0.3","semver":"^7.5.4","sinon":"^15.0.2","ts-loader":"^9.3.1","ts-mockito":"^2.6.1","typemoq":"^2.1.0","typescript":"^5.5.4","webpack":"^5.76.0","webpack-cli":"^4.9.2"},"dependencies":{"@vscode/debugadapter":"^1.65.0","@vscode/debugprotocol":"^1.65.0","@vscode/extension-telemetry":"^0.8.4","@vscode/python-extension":"^1.0.6","fs-extra":"^11.2.0","iconv-lite":"^0.6.3","jsonc-parser":"^3.0.0","lodash":"^4.17.21","vscode-languageclient":"^8.0.2"}},"location":{"$mid":1,"path":"/home/usainzg/.vscode/extensions/ms-python.debugpy-2025.14.1-linux-x64","scheme":"file"},"isBuiltin":false,"targetPlatform":"linux-x64","publisherDisplayName":"Microsoft","metadata":{"isApplicationScoped":false,"isMachineScoped":false,"isBuiltin":false,"installedTimestamp":1761027233312,"pinned":false,"source":"gallery","id":"4bd5d2c9-9d65-401a-b0b2-7498d9f17615","publisherId":"998b010b-e2af-44a5-a6cd-0b5fd3b9b6f8","publisherDisplayName":"Microsoft","targetPlatform":"linux-x64","updated":true,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"preRelease":false,"size":38376035},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"charliermarsh.ruff","uuid":"c2ca9b43-fa38-44fc-928e-5125970b9c00"},"manifest":{"name":"ruff","displayName":"Ruff","description":"A Visual Studio Code extension with support for the Ruff linter and formatter.","version":"2025.28.0","serverInfo":{"name":"Ruff","module":"ruff"},"publisher":"charliermarsh","license":"MIT","homepage":"https://github.com/astral-sh/ruff-vscode","repository":{"type":"git","url":"https://github.com/astral-sh/ruff-vscode.git"},"bugs":{"url":"https://github.com/astral-sh/ruff-vscode/issues"},"icon":"icon.png","galleryBanner":{"color":"#1e415e","theme":"dark"},"keywords":["python","linting","formatting","ruff"],"engines":{"vscode":"^1.75.0"},"categories":["Programming Languages","Linters","Formatters"],"extensionDependencies":["ms-python.python"],"capabilities":{"untrustedWorkspaces":{"supported":"limited","restrictedConfigurations":["ruff.path","ruff.importStrategy","ruff.interpreter","ruff.configuration"]},"virtualWorkspaces":{"supported":false,"description":"Virtual Workspaces are not supported by the Ruff extension."}},"activationEvents":["onLanguage:python","workspaceContains:*.py","workspaceContains:*.ipynb"],"main":"./dist/extension.js","scripts":{"fmt":"prettier -w .","fmt-check":"prettier --check .","lint":"eslint src --ext ts --max-warnings=0","compile":"webpack","compile-tests":"tsc -p . --outDir out","tsc":"tsc --noEmit","package":"webpack --mode production --devtool source-map --config ./webpack.config.js","watch":"webpack --watch","vsce-package":"vsce package -o ruff.vsix","vscode:prepublish":"npm run package","pretest":"npm run compile-tests && npm run compile","tests":"vscode-test"},"contributes":{"configuration":{"properties":{"ruff.nativeServer":{"default":"auto","type":["boolean","string"],"scope":"window","markdownDescription":"Whether to use the native language server, [`ruff-lsp`](https://github.com/astral-sh/ruff-lsp) or automatically decide between the two based on the Ruff version and extension settings.","enum":["on","off","auto",true,false],"markdownEnumDescriptions":["Use the native language server. A warning will be displayed if deprecated settings are detected.","Use [`ruff-lsp`](https://github.com/astral-sh/ruff-lsp). A warning will be displayed if settings specific to the native server are detected.","Automatically select between the native language server and [`ruff-lsp`](https://github.com/astral-sh/ruff-lsp) based on the following conditions:\n1. If the Ruff version is >= `0.5.3`, use the native language server unless any deprecated settings are detected. In that case, show a warning and use [`ruff-lsp`](https://github.com/astral-sh/ruff-lsp) instead.\n2. If the Ruff version is < `0.5.3`, use [`ruff-lsp`](https://github.com/astral-sh/ruff-lsp). A warning will be displayed if settings specific to the native server are detected.","Same as `on`.","Same as `off`."]},"ruff.configuration":{"default":null,"markdownDescription":"Configuration overrides for Ruff. See [the documentation](https://docs.astral.sh/ruff/editors/settings/#configuration) for more details.\n\n**This setting is used only by the native server.**","scope":"window","type":["string","object"],"oneOf":[{"type":"string","markdownDescription":"Path to a `ruff.toml` or `pyproject.toml` file to use for configuration."},{"type":"object","markdownDescription":"Inline JSON configuration for Ruff settings (e.g., `{ \"line-length\": 100 }`). *Added in Ruff 0.9.8.*"}]},"ruff.args":{"default":[],"markdownDescription":"Additional command-line arguments to pass to `ruff check`, e.g., `\"args\": [\"--config=/path/to/pyproject.toml\"]`. Supports a subset of Ruff's command-line arguments, ignoring those that are required to operate the LSP, like `--force-exclude` and `--verbose`.\n\n**This setting is not supported by the native server.**","markdownDeprecationMessage":"**Deprecated**: Please use `#ruff.lint.args` instead.","deprecationMessage":"Deprecated: Please use ruff.lint.args instead.","items":{"type":"string"},"scope":"resource","type":"array"},"ruff.lint.args":{"default":[],"markdownDescription":"Additional command-line arguments to pass to `ruff check`, e.g., `\"args\": [\"--config=/path/to/pyproject.toml\"]`. Supports a subset of Ruff's command-line arguments, ignoring those that are required to operate the LSP, like `--force-exclude` and `--verbose`.\n\n**This setting is not supported by the native server.**","markdownDeprecationMessage":"**Deprecated**: This setting is only used by [`ruff-lsp`](https://github.com/astral-sh/ruff-lsp) which is deprecated in favor of the native language server. Refer to the [migration guide](https://docs.astral.sh/ruff/editors/migration) for more information.","deprecationMessage":"Deprecated: This setting is only used by ruff-lsp which is deprecated in favor of the native language server.","items":{"type":"string"},"scope":"resource","type":"array"},"ruff.lint.preview":{"default":null,"markdownDescription":"Enable [preview mode](https://docs.astral.sh/ruff/settings/#lint_preview) for the linter; enables unstable rules and fixes.\n\n**This setting is used only by the native server.**","scope":"resource","type":"boolean"},"ruff.lint.select":{"default":null,"markdownDescription":"Set rule codes to enable. Use `ALL` to enable all rules. See [the documentation](https://docs.astral.sh/ruff/settings/#lint_select) for more details.\n\n**This setting is used only by the native server.**","examples":[["E4","E7","E9","F"]],"items":{"type":"string"},"scope":"resource","type":"array"},"ruff.lint.extendSelect":{"default":null,"markdownDescription":"Enable additional rule codes on top of existing configuration, instead of overriding it. Use `ALL` to enable all rules.\n\n**This setting is used only by the native server.**","items":{"type":"string"},"scope":"resource","type":"array"},"ruff.lint.ignore":{"default":null,"markdownDescription":"Set rule codes to disable. See [the documentation](https://docs.astral.sh/ruff/settings/#lint_ignore) for more details.\n\n**This setting is used only by the native server.**","items":{"type":"string"},"scope":"resource","type":"array"},"ruff.run":{"default":"onType","markdownDescription":"Run Ruff on every keystroke (`onType`) or on save (`onSave`).\n\n**This setting is not supported by the native server.**","markdownDeprecationMessage":"**Deprecated**: Please use `#ruff.lint.run` instead.","deprecationMessage":"Deprecated: Please use ruff.lint.run instead.","enum":["onType","onSave"],"enumDescriptions":["Run Ruff on every keystroke.","Run Ruff on save."],"scope":"window","type":"string"},"ruff.lint.run":{"default":"onType","markdownDescription":"Run Ruff on every keystroke (`onType`) or on save (`onSave`).\n\n**This setting is not supported by the native server.**","enum":["onType","onSave"],"enumDescriptions":["Run Ruff on every keystroke.","Run Ruff on save."],"markdownDeprecationMessage":"**Deprecated**: This setting is only used by [`ruff-lsp`](https://github.com/astral-sh/ruff-lsp) which is deprecated in favor of the native language server. Refer to the [migration guide](https://docs.astral.sh/ruff/editors/migration) for more information.","deprecationMessage":"Deprecated: This setting is only used by ruff-lsp which is deprecated in favor of the native language server.","scope":"window","type":"string"},"ruff.lint.enable":{"default":true,"markdownDescription":"Whether to enable linting. Set to `false` to use Ruff exclusively as a formatter.","scope":"window","type":"boolean"},"ruff.format.args":{"default":[],"markdownDescription":"Additional command-line arguments to pass to `ruff format`, e.g., `\"args\": [\"--config=/path/to/pyproject.toml\"]`. Supports a subset of Ruff's command-line arguments, ignoring those that are required to operate the LSP, like `--force-exclude` and `--verbose`.\n\n**This setting is not supported by the native server.**","markdownDeprecationMessage":"**Deprecated**: This setting is only used by [`ruff-lsp`](https://github.com/astral-sh/ruff-lsp) which is deprecated in favor of the native language server. Refer to the [migration guide](https://docs.astral.sh/ruff/editors/migration) for more information.","deprecationMessage":"Deprecated: This setting is only used by ruff-lsp which is deprecated in favor of the native language server.","items":{"type":"string"},"scope":"resource","type":"array"},"ruff.format.backend":{"default":"internal","markdownDescription":"The backend to use for formatting.","enum":["internal","uv"],"enumDescriptions":["Use Ruff's built-in formatter.","Use uv for formatting (requires uv >= 0.8.13)"],"scope":"resource","type":"string"},"ruff.format.preview":{"default":null,"markdownDescription":"Enable [preview mode](https://docs.astral.sh/ruff/settings/#format_preview) for the formatter; enables unstable formatting.\n\n**This setting is used only by the native server.**","scope":"resource","type":"boolean"},"ruff.path":{"default":[],"markdownDescription":"Path to a custom `ruff` executable, e.g., `[\"/path/to/ruff\"]`.","scope":"resource","items":{"type":"string"},"type":"array"},"ruff.importStrategy":{"default":"fromEnvironment","markdownDescription":"Strategy for loading the `ruff` executable. `fromEnvironment` picks up Ruff from the environment, falling back to the bundled version if needed. `useBundled` uses the version bundled with the extension.","enum":["fromEnvironment","useBundled"],"enumDescriptions":["Use `ruff` from environment, falling back to the bundled version if `ruff` is not found.","Always use the bundled version of `ruff`."],"scope":"window","type":"string"},"ruff.interpreter":{"default":[],"markdownDescription":"Path to a Python interpreter to use to find the `ruff` executable.","scope":"resource","items":{"type":"string"},"type":"array"},"ruff.enable":{"default":true,"markdownDescription":"Whether to enable the Ruff extension.","scope":"window","type":"boolean"},"ruff.organizeImports":{"default":true,"markdownDescription":"Whether to register Ruff as capable of handling `source.organizeImports` actions.","scope":"window","type":"boolean"},"ruff.fixAll":{"default":true,"markdownDescription":"Whether to register Ruff as capable of handling `source.fixAll` actions.","scope":"window","type":"boolean"},"ruff.codeAction.fixViolation":{"scope":"resource","type":"object","default":{"enable":true},"properties":{"enable":{"type":"boolean","default":true,"markdownDescription":"Enable the Quick Fix."}},"additionalProperties":false,"markdownDescription":"Whether to display Quick Fix actions to autofix violations."},"ruff.codeAction.disableRuleComment":{"scope":"resource","type":"object","default":{"enable":true},"properties":{"enable":{"type":"boolean","default":true,"markdownDescription":"Enable the Quick Fix."}},"additionalProperties":false,"markdownDescription":"Whether to display Quick Fix actions to disable rules via `noqa` suppression comments."},"ruff.showSyntaxErrors":{"default":true,"markdownDescription":"Whether to show syntax error diagnostics.","scope":"window","type":"boolean"},"ruff.ignoreStandardLibrary":{"default":true,"markdownDescription":"Whether to ignore files that are inferred to be part of the Python standard library.","markdownDeprecationMessage":"**Deprecated**: This setting is only used by [`ruff-lsp`](https://github.com/astral-sh/ruff-lsp) which is deprecated in favor of the native language server. Refer to the [migration guide](https://docs.astral.sh/ruff/editors/migration) for more information.","deprecationMessage":"Deprecated: This setting is only used by ruff-lsp which is deprecated in favor of the native language server.","scope":"window","type":"boolean"},"ruff.logLevel":{"default":null,"markdownDescription":"Controls the log level of the language server.\n\n**This setting is used only by the native server.**","enum":["error","warning","info","debug","trace"],"scope":"application","type":"string"},"ruff.logFile":{"default":null,"markdownDescription":"Path to the log file for the language server.\n\n**This setting is used only by the native server.**","scope":"application","type":"string"},"ruff.trace.server":{"type":"string","enum":["off","messages","verbose"],"default":"off","markdownDescription":"Traces the communication between VSCode and the ruff-lsp."},"ruff.showNotifications":{"default":"off","markdownDescription":"Controls when notifications are shown by this extension.","markdownDeprecationMessage":"**Deprecated**: This setting is only used by [`ruff-lsp`](https://github.com/astral-sh/ruff-lsp) which is deprecated in favor of the native language server. Refer to the [migration guide](https://docs.astral.sh/ruff/editors/migration) for more information.","deprecationMessage":"Deprecated: This setting is only used by ruff-lsp which is deprecated in favor of the native language server.","enum":["off","onError","onWarning","always"],"enumDescriptions":["All notifications are turned off, any errors or warning are still available in the logs.","Notifications are shown only in the case of an error.","Notifications are shown for errors and warnings.","Notifications are show for anything that the server chooses to show."],"scope":"window","type":"string"},"ruff.exclude":{"default":null,"items":{"type":"string"},"markdownDescription":"Set paths for the linter and formatter to ignore. See [the documentation](https://docs.astral.sh/ruff/settings/#lint_exclude) for more details.\n\n**This setting is used only by the native server.**","type":"array","scope":"resource"},"ruff.lineLength":{"default":null,"minimum":1,"maximum":320,"markdownDescription":"Set the [line length](https://docs.astral.sh/ruff/settings/#line-length) used by the formatter and linter. Must be greater than 0 and less than or equal to 320.\n\n**This setting is used only by the native server.**","scope":"resource","type":["integer","null"]},"ruff.configurationPreference":{"enum":["editorFirst","filesystemFirst","editorOnly"],"enumDescriptions":["The default strategy - configuration set in the editor takes priority over configuration set in `.toml` files.","An alternative strategy - configuration set in `.toml` files takes priority over configuration set in the editor.","An alternative strategy - configuration set in `.toml` files is ignored entirely."],"markdownDescription":"The preferred method of resolving configuration in the editor with local configuration from `.toml` files.\n\n**This setting is used only by the native server.**","scope":"resource","type":"string","default":"editorFirst"},"ruff.enableExperimentalFormatter":{"default":false,"markdownDescription":"Controls whether Ruff registers as capable of code formatting.","markdownDeprecationMessage":"**Deprecated**: Formatter capabilities are now always enabled.","deprecationMessage":"Deprecated: Formatter capabilities are now always enabled.","scope":"window","type":"boolean"}}},"commands":[{"title":"Fix all auto-fixable problems","category":"Ruff","command":"ruff.executeAutofix"},{"title":"Format document","category":"Ruff","command":"ruff.executeFormat"},{"title":"Format imports","category":"Ruff","command":"ruff.executeOrganizeImports"},{"title":"Print debug information (native server only)","category":"Ruff","command":"ruff.debugInformation"},{"title":"Restart Server","category":"Ruff","command":"ruff.restart"},{"title":"Show client logs","category":"Ruff","command":"ruff.showLogs"},{"title":"Show server logs","category":"Ruff","command":"ruff.showServerLogs"}]},"dependencies":{"@vscode/python-extension":"^1.0.5","fs-extra":"^11.3.0","vscode-languageclient":"^9.0.1","which":"^5.0.0"},"devDependencies":{"@types/fs-extra":"^11.0.4","@types/node":"^22.15.29","@types/vscode":"1.75.0","@types/which":"^3.0.4","@vscode/test-cli":"^0.0.11","@vscode/test-electron":"^2.5.2","@vscode/vsce":"^3.4.2","eslint":"^9.28.0","eslint-plugin-import":"^2.31.0","glob":"^11.0.2","ovsx":"^0.10.3","prettier":"^3.5.3","ts-loader":"^9.5.2","typescript":"^5.8.3","typescript-eslint":"^8.33.0","webpack":"^5.99.9","webpack-cli":"^6.0.1"},"prettier":{"printWidth":100,"tabWidth":2,"trailingComma":"all"},"eslintConfig":{"root":true,"parser":"@typescript-eslint/parser","parserOptions":{"ecmaVersion":6,"sourceType":"module"},"plugins":["@typescript-eslint","prettier"],"rules":{"prettier/prettier":"error","@typescript-eslint/naming-convention":"warn","@typescript-eslint/semi":"warn","curly":"warn","eqeqeq":["warn","smart"],"no-throw-literal":"warn","semi":"off"},"ignorePatterns":["out","dist","**/*.d.ts"]},"eslintIgnore":["**/.nox/","**/.pytest_cache/","**/.ruff_cache/","**/.venv/","**/__pycache__/","**/dist/","**/node_modules/","*.vsix","*.pyc","/bundled/libs/"]},"location":{"$mid":1,"path":"/home/usainzg/.vscode/extensions/charliermarsh.ruff-2025.28.0-linux-x64","scheme":"file"},"isBuiltin":false,"targetPlatform":"linux-x64","publisherDisplayName":"Astral Software","metadata":{"isApplicationScoped":false,"isMachineScoped":false,"isBuiltin":false,"installedTimestamp":1761027233312,"pinned":false,"source":"gallery","id":"c2ca9b43-fa38-44fc-928e-5125970b9c00","publisherId":"ae7578b3-bd2b-455d-bbd6-cd231eee3c09","publisherDisplayName":"Astral Software","targetPlatform":"linux-x64","updated":true,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"preRelease":false,"size":41283523},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"github.copilot-chat","uuid":"7ec7d6e6-b89e-4cc5-a59b-d6c4d238246f"},"manifest":{"name":"copilot-chat","displayName":"GitHub Copilot Chat","description":"AI chat features powered by Copilot","version":"0.32.3","build":"1","internalAIKey":"1058ec22-3c95-4951-8443-f26c1f325911","completionsCore":"07be33f7faf935076909fc82bc0f5ac578cca983","completionsCoreVersion":"1.372.0","internalLargeStorageAriaKey":"ec712b3202c5462fb6877acae7f1f9d7-c19ad55e-3e3c-4f99-984b-827f6d95bd9e-6917","ariaKey":"0c6ae279ed8443289764825290e4f9e2-1a736e7c-1324-4338-be46-fc2a58ae4d14-7255","buildType":"prod","publisher":"GitHub","homepage":"https://github.com/features/copilot?editor=vscode","license":"SEE LICENSE IN LICENSE.txt","repository":{"type":"git","url":"https://github.com/microsoft/vscode-copilot-chat"},"bugs":{"url":"https://github.com/microsoft/vscode/issues"},"qna":"https://github.com/github-community/community/discussions/categories/copilot","icon":"assets/copilot.png","pricing":"Trial","engines":{"vscode":"^1.105.0-20251001","npm":">=9.0.0","node":">=22.14.0"},"categories":["AI","Chat","Programming Languages","Machine Learning"],"keywords":["ai","openai","codex","pilot","snippets","documentation","autocomplete","intellisense","refactor","javascript","python","typescript","php","go","golang","ruby","c++","c#","java","kotlin","co-pilot"],"badges":[{"url":"https://img.shields.io/badge/GitHub%20Copilot-Subscription%20Required-orange","href":"https://github.com/github-copilot/signup?editor=vscode","description":"Sign up for GitHub Copilot"},{"url":"https://img.shields.io/github/stars/github/copilot-docs?style=social","href":"https://github.com/github/copilot-docs","description":"Star Copilot on GitHub"},{"url":"https://img.shields.io/youtube/channel/views/UC7c3Kb6jYCRj4JOHHZTxKsQ?style=social","href":"https://www.youtube.com/@GitHub/search?query=copilot","description":"Check out GitHub on Youtube"},{"url":"https://img.shields.io/twitter/follow/github?style=social","href":"https://twitter.com/github","description":"Follow GitHub on Twitter"}],"activationEvents":["onStartupFinished","onLanguageModelChat:copilot","onUri","onFileSystem:ccreq","onFileSystem:ccsettings"],"main":"./dist/extension","l10n":"./l10n","enabledApiProposals":["extensionsAny","newSymbolNamesProvider","interactive","codeActionAI","activeComment","commentReveal","contribCommentThreadAdditionalMenu","contribCommentsViewThreadMenus","documentFiltersExclusive","embeddings","findTextInFiles","findTextInFiles2","findFiles2","textSearchProvider","terminalDataWriteEvent","terminalExecuteCommandEvent","terminalSelection","terminalQuickFixProvider","mappedEditsProvider","aiRelatedInformation","aiSettingsSearch","chatParticipantAdditions","chatEditing","defaultChatParticipant","contribSourceControlInputBoxMenu","authLearnMore","testObserver","aiTextSearchProvider","chatParticipantPrivate","chatProvider","contribDebugCreateConfiguration","chatReferenceDiagnostic","textSearchProvider2","chatReferenceBinaryData","languageModelSystem","languageModelCapabilities","inlineCompletionsAdditions","languageModelDataPart","chatStatusItem","taskProblemMatcherStatus","contribLanguageModelToolSets","textDocumentChangeReason","resolvers","taskExecutionTerminal","dataChannels","languageModelThinkingPart","chatSessionsProvider","devDeviceId","contribEditorContentMenu"],"contributes":{"languageModelTools":[{"name":"copilot_searchCodebase","toolReferenceName":"codebase","displayName":"Codebase","icon":"$(folder)","userDescription":"Find relevant file chunks, symbols, and other information in your codebase","modelDescription":"Run a natural language search for relevant code or documentation comments from the user's current workspace. Returns relevant code snippets from the user's current workspace if it is large, or the full contents of the workspace if it is small.","tags":["codesearch","vscode_codesearch"],"inputSchema":{"type":"object","properties":{"query":{"type":"string","description":"The query to search the codebase for. Should contain all relevant context. Should ideally be text that might appear in the codebase, such as function names, variable names, or comments."}},"required":["query"]}},{"name":"execute_prompt","toolReferenceName":"executePrompt","displayName":"Execute Prompt","when":"config.github.copilot.chat.executePrompt.enabled","canBeReferencedInPrompt":true,"modelDescription":"Launch a new agent to handle complex, multi-step tasks autonomously. This tool is good at researching complex questions, searching for code, and executing multi-step tasks. When you are searching for a keyword or file and are not confident that you will find the right match in the first few tries, use this agent to perform the search for you.\n\n- When the agent is done, it will return a single message back to you. The result returned by the agent is not visible to the user. To show the user the result, you should send a text message back to the user with a concise summary of the result.\n - Each agent invocation is stateless. You will not be able to send additional messages to the agent, nor will the agent be able to communicate with you outside of its final report. Therefore, your prompt should contain a highly detailed task description for the agent to perform autonomously and you should specify exactly what information the agent should return back to you in its final and only message to you.\n - The agent's outputs should generally be trusted\n - Clearly tell the agent whether you expect it to write code or just to do research (search, file reads, web fetches, etc.), since it is not aware of the user's intent","tags":[],"inputSchema":{"type":"object","properties":{"prompt":{"type":"string","description":"A detailed description of the task for the agent to perform"},"description":{"type":"string","description":"A short (3-5 word) description of the task"}},"required":["prompt","description"]}},{"name":"copilot_searchWorkspaceSymbols","toolReferenceName":"symbols","displayName":"Workspace Symbols","icon":"$(symbol)","userDescription":"Search for workspace symbols using language services.","modelDescription":"Search the user's workspace for code symbols using language services. Use this tool when the user is looking for a specific symbol in their workspace.","tags":["vscode_codesearch"],"inputSchema":{"type":"object","properties":{"symbolName":{"type":"string","description":"The symbol to search for, such as a function name, class name, or variable name."}},"required":["symbolName"]}},{"name":"copilot_listCodeUsages","toolReferenceName":"usages","displayName":"Find Usages","icon":"$(references)","canBeReferencedInPrompt":true,"userDescription":"Find references, definitions, and other usages of a symbol","modelDescription":"Request to list all usages (references, definitions, implementations etc) of a function, class, method, variable etc. Use this tool when \n1. Looking for a sample implementation of an interface or class\n2. Checking how a function is used throughout the codebase.\n3. Including and updating all usages when changing a function, method, or constructor","tags":["vscode_codesearch"],"inputSchema":{"type":"object","properties":{"symbolName":{"type":"string","description":"The name of the symbol, such as a function name, class name, method name, variable name, etc."},"filePaths":{"type":"array","description":"One or more file paths which likely contain the definition of the symbol. For instance the file which declares a class or function. This is optional but will speed up the invocation of this tool and improve the quality of its output.","items":{"type":"string"}}},"required":["symbolName"]}},{"name":"copilot_getVSCodeAPI","toolReferenceName":"vscodeAPI","displayName":"Get VS Code API References","icon":"$(references)","userDescription":"Use VS Code API references to answer questions about VS Code extension development.","modelDescription":"Get comprehensive VS Code API documentation and references for extension development. This tool provides authoritative documentation for VS Code's extensive API surface, including proposed APIs, contribution points, and best practices. Use this tool for understanding complex VS Code API interactions.\n\nWhen to use this tool:\n- User asks about specific VS Code APIs, interfaces, or extension capabilities\n- Need documentation for VS Code extension contribution points (commands, views, settings, etc.)\n- Questions about proposed APIs and their usage patterns\n- Understanding VS Code extension lifecycle, activation events, and packaging\n- Best practices for VS Code extension development architecture\n- API examples and code patterns for extension features\n- Troubleshooting extension-specific issues or API limitations\n\nWhen NOT to use this tool:\n- Creating simple standalone files or scripts unrelated to VS Code extensions\n- General programming questions not specific to VS Code extension development\n- Questions about using VS Code as an editor (user-facing features)\n- Non-extension related development tasks\n- File creation or editing that doesn't involve VS Code extension APIs\n\nCRITICAL usage guidelines:\n1. Always include specific API names, interfaces, or concepts in your query\n2. Mention the extension feature you're trying to implement\n3. Include context about proposed vs stable APIs when relevant\n4. Reference specific contribution points when asking about extension manifest\n5. Be specific about the VS Code version or API version when known\n\nScope: This tool is for EXTENSION DEVELOPMENT ONLY - building tools that extend VS Code itself, not for general file creation or non-extension programming tasks.","inputSchema":{"type":"object","properties":{"query":{"type":"string","description":"The query to search vscode documentation for. Should contain all relevant context."}},"required":["query"]},"tags":[],"canBeReferencedInPrompt":true},{"displayName":"Think","name":"copilot_think","tags":[],"canBeReferencedInPrompt":true,"toolReferenceName":"think","when":"config.github.copilot.chat.agent.thinkingTool","modelDescription":"Use this tool to think deeply about the user's request and organize your thoughts. This tool helps improve response quality by allowing the model to consider the request carefully, brainstorm solutions, and plan complex tasks. It's particularly useful for:\n\n1. Exploring repository issues and brainstorming bug fixes\n2. Analyzing test results and planning fixes\n3. Planning complex refactoring approaches\n4. Designing new features and architecture\n5. Organizing debugging hypotheses\n\nThe tool logs your thought process for transparency but doesn't execute any code or make changes.","inputSchema":{"type":"object","properties":{"thoughts":{"type":"string","description":"Your thoughts about the current task or problem. This should be a clear, structured explanation of your reasoning, analysis, or planning process."}},"required":["thoughts"]}},{"name":"copilot_findFiles","toolReferenceName":"fileSearch","displayName":"Find Files","modelDescription":"Search for files in the workspace by glob pattern. This only returns the paths of matching files. Use this tool when you know the exact filename pattern of the files you're searching for. Glob patterns match from the root of the workspace folder. Examples:\n- **/*.{js,ts} to match all js/ts files in the workspace.\n- src/** to match all files under the top-level src folder.\n- **/foo/**/*.js to match all js files under any foo folder in the workspace.","tags":["vscode_codesearch"],"inputSchema":{"type":"object","properties":{"query":{"type":"string","description":"Search for files with names or paths matching this glob pattern."},"maxResults":{"type":"number","description":"The maximum number of results to return. Do not use this unless necessary, it can slow things down. By default, only some matches are returned. If you use this and don't see what you're looking for, you can try again with a more specific query or a larger maxResults."}},"required":["query"]}},{"name":"copilot_findTextInFiles","toolReferenceName":"textSearch","displayName":"Find Text In Files","modelDescription":"Do a fast text search in the workspace. Use this tool when you want to search with an exact string or regex. If you are not sure what words will appear in the workspace, prefer using regex patterns with alternation (|) or character classes to search for multiple potential words at once instead of making separate searches. For example, use 'function|method|procedure' to look for all of those words at once. Use includePattern to search within files matching a specific pattern, or in a specific file, using a relative path. Use this tool when you want to see an overview of a particular file, instead of using read_file many times to look for code within a file.","tags":["vscode_codesearch"],"inputSchema":{"type":"object","properties":{"query":{"type":"string","description":"The pattern to search for in files in the workspace. Use regex with alternation (e.g., 'word1|word2|word3') or character classes to find multiple potential words in a single search. Be sure to set the isRegexp property properly to declare whether it's a regex or plain text pattern. Is case-insensitive."},"isRegexp":{"type":"boolean","description":"Whether the pattern is a regex."},"includePattern":{"type":"string","description":"Search files matching this glob pattern. Will be applied to the relative path of files within the workspace. To search recursively inside a folder, use a proper glob pattern like \"src/folder/**\". Do not use | in includePattern."},"maxResults":{"type":"number","description":"The maximum number of results to return. Do not use this unless necessary, it can slow things down. By default, only some matches are returned. If you use this and don't see what you're looking for, you can try again with a more specific query or a larger maxResults."}},"required":["query","isRegexp"]}},{"name":"copilot_applyPatch","displayName":"Apply Patch","toolReferenceName":"applyPatch","userDescription":"Edit text files in the workspace","modelDescription":"Edit text files. Do not use this tool to edit Jupyter notebooks. `apply_patch` allows you to execute a diff/patch against a text file, but the format of the diff specification is unique to this task, so pay careful attention to these instructions. To use the `apply_patch` command, you should pass a message of the following structure as \"input\":\n\n*** Begin Patch\n[YOUR_PATCH]\n*** End Patch\n\nWhere [YOUR_PATCH] is the actual content of your patch, specified in the following V4A diff format.\n\n*** [ACTION] File: [/absolute/path/to/file] -> ACTION can be one of Add, Update, or Delete.\nAn example of a message that you might pass as \"input\" to this function, in order to apply a patch, is shown below.\n\n*** Begin Patch\n*** Update File: /Users/someone/pygorithm/searching/binary_search.py\n@@class BaseClass\n@@    def search():\n-        pass\n+        raise NotImplementedError()\n\n@@class Subclass\n@@    def search():\n-        pass\n+        raise NotImplementedError()\n\n*** End Patch\nDo not use line numbers in this diff format.","inputSchema":{"type":"object","properties":{"input":{"type":"string","description":"The edit patch to apply."},"explanation":{"type":"string","description":"A short description of what the tool call is aiming to achieve."}},"required":["input","explanation"]}},{"name":"copilot_readFile","toolReferenceName":"readFile","displayName":"Read File","modelDescription":"Read the contents of a file.\n\nYou must specify the line range you're interested in. Line numbers are 1-indexed. If the file contents returned are insufficient for your task, you may call this tool again to retrieve more content. Prefer reading larger ranges over doing many small reads.","tags":["vscode_codesearch"],"inputSchema":{"type":"object","properties":{"filePath":{"description":"The absolute path of the file to read.","type":"string"},"startLine":{"type":"number","description":"The line number to start reading from, 1-based."},"endLine":{"type":"number","description":"The inclusive line number to end reading at, 1-based."}},"required":["filePath","startLine","endLine"]}},{"name":"copilot_listDirectory","toolReferenceName":"listDirectory","displayName":"List Dir","modelDescription":"List the contents of a directory. Result will have the name of the child. If the name ends in /, it's a folder, otherwise a file","tags":["vscode_codesearch"],"inputSchema":{"type":"object","properties":{"path":{"type":"string","description":"The absolute path to the directory to list."}},"required":["path"]}},{"name":"copilot_getErrors","displayName":"Get Problems","toolReferenceName":"problems","canBeReferencedInPrompt":true,"icon":"$(error)","userDescription":"Check errors for a particular file","modelDescription":"Get any compile or lint errors in a specific file or across all files. If the user mentions errors or problems in a file, they may be referring to these. Use the tool to see the same errors that the user is seeing. If the user asks you to analyze all errors, or does not specify a file, use this tool to gather errors for all files. Also use this tool after editing a file to validate the change.","tags":[],"inputSchema":{"type":"object","properties":{"filePaths":{"description":"The absolute paths to the files to check for errors. Omit 'filePaths' when retrieving all errors.","type":"array","items":{"type":"string"}}}}},{"name":"copilot_readProjectStructure","displayName":"Project Structure","modelDescription":"Get a file tree representation of the workspace.","tags":[]},{"name":"copilot_getChangedFiles","displayName":"Git Changes","toolReferenceName":"changes","icon":"$(diff)","canBeReferencedInPrompt":true,"userDescription":"Get diffs of changed files","modelDescription":"Get git diffs of current file changes in a git repository. Don't forget that you can use run_in_terminal to run git commands in a terminal as well.","tags":["vscode_codesearch"],"inputSchema":{"type":"object","properties":{"repositoryPath":{"type":"string","description":"The absolute path to the git repository to look for changes in. If not provided, the active git repository will be used."},"sourceControlState":{"type":"array","items":{"type":"string","enum":["staged","unstaged","merge-conflicts"]},"description":"The kinds of git state to filter by. Allowed values are: 'staged', 'unstaged', and 'merge-conflicts'. If not provided, all states will be included."}}}},{"name":"copilot_testFailure","toolReferenceName":"testFailure","displayName":"Test Failure","icon":"$(beaker)","userDescription":"Includes information about the last unit test failure","modelDescription":"Includes test failure information in the prompt.","inputSchema":{},"tags":["vscode_editing_with_tests","enable_other_tool_copilot_readFile","enable_other_tool_copilot_listDirectory","enable_other_tool_copilot_findFiles","enable_other_tool_copilot_runTests"],"canBeReferencedInPrompt":true},{"name":"copilot_updateUserPreferences","toolReferenceName":"updateUserPreferences","displayName":"Update User Preferences","modelDescription":"Update the user's preferences file with new information about the user and their coding preferences, based on the current chat history.","canBeReferencedInPrompt":true,"tags":[],"inputSchema":{"type":"object","properties":{"facts":{"type":"array","items":{"type":"string"},"description":"An array of new user preferences to remember."}},"required":["facts"]},"when":"config.github.copilot.chat.enableUserPreferences"},{"name":"copilot_createNewWorkspace","displayName":"Create New Workspace","toolReferenceName":"newWorkspace","icon":"$(new-folder)","userDescription":"Scaffold a new workspace in VS Code","when":"config.github.copilot.chat.newWorkspaceCreation.enabled","modelDescription":"Get comprehensive setup steps to help the user create complete project structures in a VS Code workspace. This tool is designed for full project initialization and scaffolding, not for creating individual files.\n\nWhen to use this tool:\n- User wants to create a new complete project from scratch\n- Setting up entire project frameworks (TypeScript projects, React apps, Node.js servers, etc.)\n- Initializing Model Context Protocol (MCP) servers with full structure\n- Creating VS Code extensions with proper scaffolding\n- Setting up Next.js, Vite, or other framework-based projects\n- User asks for \"new project\", \"create a workspace\", \"set up a [framework] project\"\n- Need to establish complete development environment with dependencies, config files, and folder structure\n\nWhen NOT to use this tool:\n- Creating single files or small code snippets\n- Adding individual files to existing projects\n- Making modifications to existing codebases\n- User asks to \"create a file\" or \"add a component\"\n- Simple code examples or demonstrations\n- Debugging or fixing existing code\n\nThis tool provides complete project setup including:\n- Folder structure creation\n- Package.json and dependency management\n- Configuration files (tsconfig, eslint, etc.)\n- Initial boilerplate code\n- Development environment setup\n- Build and run instructions\n\nUse other file creation tools for individual files within existing projects.","inputSchema":{"type":"object","properties":{"query":{"type":"string","description":"The query to use to generate the new workspace. This should be a clear and concise description of the workspace the user wants to create."}},"required":["query"]},"tags":["enable_other_tool_install_extension","enable_other_tool_get_project_setup_info"]},{"name":"copilot_getProjectSetupInfo","displayName":"Get Project Setup Info","when":"config.github.copilot.chat.newWorkspaceCreation.enabled","toolReferenceName":"getProjectSetupInfo","modelDescription":"Do not call this tool without first calling the tool to create a workspace. This tool provides a project setup information for a Visual Studio Code workspace based on a project type and programming language.","inputSchema":{"type":"object","properties":{"projectType":{"type":"string","description":"The type of project to create. Supported values are: 'python-script', 'python-project', 'mcp-server', 'model-context-protocol-server', 'vscode-extension', 'next-js', 'vite' and 'other'"}},"required":["projectType"]},"tags":[]},{"name":"copilot_installExtension","displayName":"Install Extension in VS Code","when":"config.github.copilot.chat.newWorkspaceCreation.enabled","toolReferenceName":"installExtension","modelDescription":"Install an extension in VS Code. Use this tool to install an extension in Visual Studio Code as part of a new workspace creation process only.","inputSchema":{"type":"object","properties":{"id":{"type":"string","description":"The ID of the extension to install. This should be in the format <publisher>.<extension>."},"name":{"type":"string","description":"The name of the extension to install. This should be a clear and concise description of the extension."}},"required":["id","name"]},"tags":[]},{"name":"copilot_runVscodeCommand","displayName":"Run VS Code Command","when":"config.github.copilot.chat.newWorkspaceCreation.enabled","toolReferenceName":"runVscodeCommand","modelDescription":"Run a command in VS Code. Use this tool to run a command in Visual Studio Code as part of a new workspace creation process only.","inputSchema":{"type":"object","properties":{"commandId":{"type":"string","description":"The ID of the command to execute. This should be in the format <command>."},"name":{"type":"string","description":"The name of the command to execute. This should be a clear and concise description of the command."},"args":{"type":"array","description":"The arguments to pass to the command. This should be an array of strings.","items":{"type":"string"}}},"required":["commandId","name"]},"tags":[]},{"name":"copilot_createNewJupyterNotebook","displayName":"Create New Jupyter Notebook","icon":"$(notebook)","toolReferenceName":"newJupyterNotebook","modelDescription":"Generates a new Jupyter Notebook (.ipynb) in VS Code. Jupyter Notebooks are interactive documents commonly used for data exploration, analysis, visualization, and combining code with narrative text. Prefer creating plain Python files or similar unless a user explicitly requests creating a new Jupyter Notebook or already has a Jupyter Notebook opened or exists in the workspace.","userDescription":"Create a new Jupyter Notebook","inputSchema":{"type":"object","properties":{"query":{"type":"string","description":"The query to use to generate the jupyter notebook. This should be a clear and concise description of the notebook the user wants to create."}},"required":["query"]},"tags":[]},{"name":"copilot_insertEdit","toolReferenceName":"insertEdit","displayName":"Edit File","modelDescription":"Insert new code into an existing file in the workspace. Use this tool once per file that needs to be modified, even if there are multiple changes for a file. Generate the \"explanation\" property first.\nThe system is very smart and can understand how to apply your edits to the files, you just need to provide minimal hints.\nAvoid repeating existing code, instead use comments to represent regions of unchanged code. Be as concise as possible. For example:\n// ...existing code...\n{ changed code }\n// ...existing code...\n{ changed code }\n// ...existing code...\n\nHere is an example of how you should use format an edit to an existing Person class:\nclass Person {\n\t// ...existing code...\n\tage: number;\n\t// ...existing code...\n\tgetAge() {\n\treturn this.age;\n\t}\n}","tags":[],"inputSchema":{"type":"object","properties":{"explanation":{"type":"string","description":"A short explanation of the edit being made."},"filePath":{"type":"string","description":"An absolute path to the file to edit."},"code":{"type":"string","description":"The code change to apply to the file.\nThe system is very smart and can understand how to apply your edits to the files, you just need to provide minimal hints.\nAvoid repeating existing code, instead use comments to represent regions of unchanged code. Be as concise as possible. For example:\n// ...existing code...\n{ changed code }\n// ...existing code...\n{ changed code }\n// ...existing code...\n\nHere is an example of how you should use format an edit to an existing Person class:\nclass Person {\n\t// ...existing code...\n\tage: number;\n\t// ...existing code...\n\tgetAge() {\n\t\treturn this.age;\n\t}\n}"}},"required":["explanation","filePath","code"]}},{"name":"copilot_createFile","toolReferenceName":"createFile","displayName":"Create File","userDescription":"Create new files","modelDescription":"This is a tool for creating a new file in the workspace. The file will be created with the specified content. The directory will be created if it does not already exist. Never use this tool to edit a file that already exists.","tags":[],"inputSchema":{"type":"object","properties":{"filePath":{"type":"string","description":"The absolute path to the file to create."},"content":{"type":"string","description":"The content to write to the file."}},"required":["filePath","content"]}},{"name":"copilot_createDirectory","toolReferenceName":"createDirectory","displayName":"Create Directory","userDescription":"Create new directories in your workspace","modelDescription":"Create a new directory structure in the workspace. Will recursively create all directories in the path, like mkdir -p. You do not need to use this tool before using create_file, that tool will automatically create the needed directories.","tags":[],"inputSchema":{"type":"object","properties":{"dirPath":{"type":"string","description":"The absolute path to the directory to create."}},"required":["dirPath"]}},{"name":"copilot_openSimpleBrowser","displayName":"Open Simple Browser","modelDescription":"Preview a website or open a URL in the editor's Simple Browser. Useful for quickly viewing locally hosted websites, demos, or resources without leaving the coding environment.","userDescription":"Preview a locally hosted website in the Simple Browser","toolReferenceName":"openSimpleBrowser","canBeReferencedInPrompt":true,"tags":[],"inputSchema":{"type":"object","properties":{"url":{"type":"string","description":"The website URL to preview or open in the Simple Browser inside the editor. Must be either an http or https URL"}},"required":["url"]}},{"name":"copilot_replaceString","toolReferenceName":"replaceString","displayName":"Replace String in File","modelDescription":"This is a tool for making edits in an existing file in the workspace. For moving or renaming files, use run in terminal tool with the 'mv' command instead. For larger edits, split them into smaller edits and call the edit tool multiple times to ensure accuracy. Before editing, always ensure you have the context to understand the file's contents and context. To edit a file, provide: 1) filePath (absolute path), 2) oldString (MUST be the exact literal text to replace including all whitespace, indentation, newlines, and surrounding code etc), and 3) newString (MUST be the exact literal text to replace \\`oldString\\` with (also including all whitespace, indentation, newlines, and surrounding code etc.). Ensure the resulting code is correct and idiomatic.). Each use of this tool replaces exactly ONE occurrence of oldString.\n\nCRITICAL for \\`oldString\\`: Must uniquely identify the single instance to change. Include at least 3 lines of context BEFORE and AFTER the target text, matching whitespace and indentation precisely. If this string matches multiple locations, or does not match exactly, the tool will fail. Never use 'Lines 123-456 omitted' from summarized documents or ...existing code... comments in the oldString or newString.","when":"!config.github.copilot.chat.disableReplaceTool","inputSchema":{"type":"object","properties":{"filePath":{"type":"string","description":"An absolute path to the file to edit."},"oldString":{"type":"string","description":"The exact literal text to replace, preferably unescaped. For single replacements (default), include at least 3 lines of context BEFORE and AFTER the target text, matching whitespace and indentation precisely. For multiple replacements, specify expected_replacements parameter. If this string is not the exact literal text (i.e. you escaped it) or does not match exactly, the tool will fail."},"newString":{"type":"string","description":"The exact literal text to replace `old_string` with, preferably unescaped. Provide the EXACT text. Ensure the resulting code is correct and idiomatic."}},"required":["filePath","oldString","newString"]}},{"name":"copilot_multiReplaceString","toolReferenceName":"multiReplaceString","displayName":"Multi-Replace String in Files","modelDescription":"This tool allows you to apply multiple replace_string_in_file operations in a single call, which is more efficient than calling replace_string_in_file multiple times. It takes an array of replacement operations and applies them sequentially. Each replacement operation has the same parameters as replace_string_in_file: filePath, oldString, newString, and explanation. This tool is ideal when you need to make multiple edits across different files or multiple edits in the same file. The tool will provide a summary of successful and failed operations.","when":"!config.github.copilot.chat.disableReplaceTool","inputSchema":{"type":"object","properties":{"explanation":{"type":"string","description":"A brief explanation of what the multi-replace operation will accomplish."},"replacements":{"type":"array","description":"An array of replacement operations to apply sequentially.","items":{"type":"object","properties":{"explanation":{"type":"string","description":"A brief explanation of this specific replacement operation."},"filePath":{"type":"string","description":"An absolute path to the file to edit."},"oldString":{"type":"string","description":"The exact literal text to replace, preferably unescaped. Include at least 3 lines of context BEFORE and AFTER the target text, matching whitespace and indentation precisely. If this string is not the exact literal text or does not match exactly, this replacement will fail."},"newString":{"type":"string","description":"The exact literal text to replace `oldString` with, preferably unescaped. Provide the EXACT text. Ensure the resulting code is correct and idiomatic."}},"required":["explanation","filePath","oldString","newString"]},"minItems":1}},"required":["explanation","replacements"]}},{"name":"copilot_editNotebook","toolReferenceName":"editNotebook","displayName":"Edit Notebook","modelDescription":"This is a tool for editing an existing Notebook file in the workspace. Generate the \"explanation\" property first.\nThe system is very smart and can understand how to apply your edits to the notebooks.\nWhen updating the content of an existing cell, ensure newCode preserves whitespace and indentation exactly and does NOT include any code markers such as (...existing code...).","tags":["enable_other_tool_copilot_getNotebookSummary"],"inputSchema":{"type":"object","properties":{"filePath":{"type":"string","description":"An absolute path to the notebook file to edit, or the URI of a untitled, not yet named, file, such as `untitled:Untitled-1."},"cellId":{"type":"string","description":"Id of the cell that needs to be deleted or edited. Use the value `TOP`, `BOTTOM` when inserting a cell at the top or bottom of the notebook, else provide the id of the cell after which a new cell is to be inserted. Remember, if a cellId is provided and editType=insert, then a cell will be inserted after the cell with the provided cellId."},"newCode":{"anyOf":[{"type":"string","description":"The code for the new or existing cell to be edited. Code should not be wrapped within <VSCode.Cell> tags. Do NOT include code markers such as (...existing code...) to indicate existing code."},{"type":"array","items":{"type":"string","description":"The code for the new or existing cell to be edited. Code should not be wrapped within <VSCode.Cell> tags"}}]},"language":{"type":"string","description":"The language of the cell. `markdown`, `python`, `javascript`, `julia`, etc."},"editType":{"type":"string","enum":["insert","delete","edit"],"description":"The operation peformed on the cell, whether `insert`, `delete` or `edit`.\nUse the `editType` field to specify the operation: `insert` to add a new cell, `edit` to modify an existing cell's content, and `delete` to remove a cell."}},"required":["filePath","editType","cellId"]}},{"name":"copilot_runNotebookCell","displayName":"Run Notebook Cell","toolReferenceName":"runCell","icon":"$(play)","modelDescription":"This is a tool for running a code cell in a notebook file directly in the notebook editor. The output from the execution will be returned. Code cells should be run as they are added or edited when working through a problem to bring the kernel state up to date and ensure the code executes successfully. Code cells are ready to run and don't require any pre-processing. If asked to run the first cell in a notebook, you should run the first code cell since markdown cells cannot be executed. NOTE: Avoid executing Markdown cells or providing Markdown cell IDs, as Markdown cells cannot be  executed.","userDescription":"Trigger the execution of a cell in a notebook file","tags":["enable_other_tool_copilot_getNotebookSummary"],"inputSchema":{"type":"object","properties":{"filePath":{"type":"string","description":"An absolute path to the notebook file with the cell to run, or the URI of a untitled, not yet named, file, such as `untitled:Untitled-1.ipynb"},"reason":{"type":"string","description":"An optional explanation of why the cell is being run. This will be shown to the user before the tool is run and is not necessary if it's self-explanatory."},"cellId":{"type":"string","description":"The ID for the code cell to execute. Avoid providing markdown cell IDs as nothing will be executed."},"continueOnError":{"type":"boolean","description":"Whether or not execution should continue for remaining cells if an error is encountered. Default to false unless instructed otherwise."}},"required":["filePath","cellId"]}},{"name":"copilot_getNotebookSummary","toolReferenceName":"getNotebookSummary","displayName":"Get the structure of a notebook","modelDescription":"This is a tool returns the list of the Notebook cells along with the id, cell types, line ranges, language, execution information and output mime types for each cell. This is useful to get Cell Ids when executing a notebook or determine what cells have been executed and what order, or what cells have outputs. If required to read contents of a cell use this to determine the line range of a cells, and then use read_file tool to read a specific line range. Requery this tool if the contents of the notebook change.","tags":[],"inputSchema":{"type":"object","properties":{"filePath":{"type":"string","description":"An absolute path to the notebook file with the cell to run, or the URI of a untitled, not yet named, file, such as `untitled:Untitled-1.ipynb"}},"required":["filePath"]}},{"name":"copilot_readNotebookCellOutput","displayName":"Get Notebook Cell Output","toolReferenceName":"readNotebookCellOutput","icon":"$(notebook-render-output)","modelDescription":"This tool will retrieve the output for a notebook cell from its most recent execution or restored from disk. The cell may have output even when it has not been run in the current kernel session. This tool has a higher token limit for output length than the runNotebookCell tool.","userDescription":"Read the output of a previously executed cell","when":"userHasOpenedNotebook","tags":[],"inputSchema":{"type":"object","properties":{"filePath":{"type":"string","description":"An absolute path to the notebook file with the cell to run, or the URI of a untitled, not yet named, file, such as `untitled:Untitled-1.ipynb"},"cellId":{"type":"string","description":"The ID of the cell for which output should be retrieved."}},"required":["filePath","cellId"]}},{"name":"copilot_fetchWebPage","displayName":"Fetch Web Page","toolReferenceName":"fetch","when":"!isWeb","canBeReferencedInPrompt":true,"icon":"$(globe)","userDescription":"Fetch the main content from a web page. You should include the URL of the page you want to fetch.","modelDescription":"Fetches the main content from a web page. This tool is useful for summarizing or analyzing the content of a webpage. You should use this tool when you think the user is looking for information from a specific webpage.","tags":[],"inputSchema":{"type":"object","properties":{"urls":{"type":"array","items":{"type":"string"},"description":"An array of URLs to fetch content from."},"query":{"type":"string","description":"The query to search for in the web page's content. This should be a clear and concise description of the content you want to find."}},"required":["urls","query"]}},{"name":"copilot_findTestFiles","displayName":"Find Test Files","icon":"$(beaker)","canBeReferencedInPrompt":false,"toolReferenceName":"findTestFiles","userDescription":"For a source code file, find the file that contains the tests. For a test file, find the file that contains the code under test","modelDescription":"For a source code file, find the file that contains the tests. For a test file find the file that contains the code under test.","tags":[],"inputSchema":{"type":"object","properties":{"filePaths":{"type":"array","items":{"type":"string"}}},"required":["filePaths"]}},{"name":"copilot_getDocInfo","displayName":"Doc Info","icon":"$(beaker)","canBeReferencedInPrompt":false,"toolReferenceName":"docInfo","userDescription":"For a symbol like a class or function, find the information about how to document it","modelDescription":"Find information about how to document it a symbol like a class or function. This tool is useful for generating documentation comments for code symbols. You should use this tool when you think the user is looking for information about how to document a specific code symbol.","tags":[],"inputSchema":{"type":"object","properties":{"filePaths":{"type":"array","items":{"type":"string"},"description":"The file paths for which documentation information is needed."}},"required":["filePaths"]}},{"name":"copilot_getSearchResults","toolReferenceName":"searchResults","displayName":"Search View Results","icon":"$(search)","userDescription":"The results from the search view","modelDescription":"The results from the search view"},{"name":"copilot_githubRepo","toolReferenceName":"githubRepo","displayName":"Search GitHub Repository","modelDescription":"Searches a GitHub repository for relevant source code snippets. Only use this tool if the user is very clearly asking for code snippets from a specific GitHub repository. Do not use this tool for Github repos that the user has open in their workspace.","userDescription":"Searches a GitHub repository for relevant source code snippets. You can specify a repository using `owner/repo`","icon":"$(repo)","canBeReferencedInPrompt":true,"inputSchema":{"type":"object","properties":{"repo":{"type":"string","description":"The name of the Github repository to search for code in. Should must be formatted as '<owner>/<repo>'."},"query":{"type":"string","description":"The query to search for repo. Should contain all relevant context."}},"required":["repo","query"]}},{"name":"copilot_toolReplay","modelDescription":"Replays a tool call from a previous chat session.","displayName":"tool replay","when":"false","inputSchema":{"type":"object","properties":{"toolCallId":{"type":"string","description":"the id of the tool original tool call"},"toolName":{"type":"string","description":"the name of the tool being replayed"},"toolCallArgs":{"type":"object","description":"the arguments of the tool call"}}}},{"name":"copilot_editFiles","modelDescription":"This is a placeholder tool, do not use","userDescription":"Edit files","icon":"$(pencil)","displayName":"Edit Files","toolReferenceName":"editFiles"}],"languageModelToolSets":[{"name":"edit","description":"Edit files in your workspace","icon":"$(pencil)","tools":["createFile","createDirectory","editNotebook","newJupyterNotebook","editFiles"]},{"name":"runNotebooks","description":"Run notebook cells","icon":"$(notebook)","tools":["runCell","getNotebookSummary","readNotebookCellOutput"]},{"name":"search","description":"Search and read files in your workspace","icon":"$(search)","tools":["fileSearch","textSearch","listDirectory","readFile","codebase","searchResults"]},{"name":"new","description":"Scaffold a new workspace with VS Code-specific configurations to compile, debug and run new projects.","icon":"$(new-folder)","tools":["newWorkspace","runVscodeCommand","getProjectSetupInfo","installExtension"]}],"chatParticipants":[{"id":"github.copilot.default","name":"GitHubCopilot","fullName":"GitHub Copilot","description":"Ask or edit in context","isDefault":true,"locations":["panel"],"modes":["ask"],"disambiguation":[{"category":"generate_code_sample","description":"The user wants to generate code snippets without referencing the contents of the current workspace. This category does not include generating entire projects.","examples":["Write an example of computing a SHA256 hash."]},{"category":"add_feature_to_file","description":"The user wants to change code in a file that is provided in their request, without referencing the contents of the current workspace. This category does not include generating entire projects.","examples":["Add a refresh button to the table widget."]},{"category":"question_about_specific_files","description":"The user has a question about a specific file or code snippet that they have provided as part of their query, and the question does not require additional workspace context to answer.","examples":["What does this file do?"]}]},{"id":"github.copilot.editingSession","name":"GitHubCopilot","fullName":"GitHub Copilot","description":"Edit files in your workspace","isDefault":true,"locations":["panel"],"modes":["edit"],"when":"!config.chat.edits2.enabled"},{"id":"github.copilot.editingSessionEditor","name":"GitHubCopilot","fullName":"GitHub Copilot","description":"Edit files in your workspace","isDefault":true,"when":"config.inlineChat.enableV2 || config.github.copilot.chat.advanced.inlineChat2","locations":["editor","notebook"],"commands":[{"name":"fix","description":"Propose a fix for the problems in the selected code","when":"config.inlineChat.enableV2 || config.github.copilot.chat.advanced.inlineChat2","disambiguation":[{"category":"fix","description":"Propose a fix for the problems in the selected code","examples":["There is a problem in this code. Rewrite the code to show it with the bug fixed."]}]},{"name":"tests","description":"Generate unit tests for the selected code","when":"config.inlineChat.enableV2 || config.github.copilot.chat.advanced.inlineChat2","disambiguation":[{"category":"tests","description":"Help writing tests for the selected code","examples":["Help me write tests for the selected code."]}]},{"name":"doc","description":"Add documentation comment for this symbol","when":"config.inlineChat.enableV2 || config.github.copilot.chat.advanced.inlineChat2","disambiguation":[{"category":"doc","description":"Add documentation comment for this symbol","examples":["Add jsdoc to this method"]}]}]},{"id":"github.copilot.editingSession2","name":"GitHubCopilot","fullName":"GitHub Copilot","description":"Edit files in your workspace","isDefault":true,"locations":["panel"],"modes":["edit"],"when":"config.chat.edits2.enabled"},{"id":"github.copilot.editsAgent","name":"agent","fullName":"GitHub Copilot","description":"Edit files in your workspace in agent mode","locations":["panel"],"modes":["agent"],"isEngine":true,"isDefault":true,"isAgent":true,"when":"config.chat.agent.enabled","commands":[{"name":"list"},{"name":"error","description":"Make a model request which will result in an error","when":"github.copilot.chat.debug"}]},{"id":"github.copilot.editor","name":"Copilot","fullName":"GitHub Copilot","description":"Ask or edit in context","isDefault":true,"locations":["editor"],"when":"!config.inlineChat.enableV2 && !config.github.copilot.chat.advanced.inlineChat2","disambiguation":[{"category":"unknown","description":"Intent of this command is unclear or is not related to information technologies","examples":["Add a dog to this comment."]}],"commands":[{"name":"generate","description":"Generate new code","disambiguation":[{"category":"generate","description":"Generate new code","examples":["Add a function that returns the sum of two numbers"]}]},{"name":"edit","description":"Edit the selected code in your active editor","disambiguation":[{"category":"edit","description":"Make changes to existing code","examples":["Change this method to use async/await"]}]},{"name":"doc","description":"Add documentation comment for this symbol","disambiguation":[{"category":"doc","description":"Add documentation comment for this symbol","examples":["Add jsdoc to this method"]}]},{"name":"fix","description":"Propose a fix for the problems in the selected code","disambiguation":[{"category":"fix","description":"Propose a fix for the problems in the selected code","examples":["There is a problem in this code. Rewrite the code to show it with the bug fixed."]}]},{"name":"explain","description":"Explain how the code in your active editor works","disambiguation":[{"category":"explain","description":"Explain how the code in your active editor works","examples":["Write an explanation for the code above as paragraphs of text."]}]},{"name":"review","description":"Review the selected code in your active editor","when":"github.copilot.advanced.review.intent"},{"name":"tests","description":"Generate unit tests for the selected code","disambiguation":[{"category":"tests","description":"Generate unit tests for the selected code. The user does not want to fix their existing tests.","examples":["Write a set of detailed unit test functions for the code above."]}]}]},{"id":"github.copilot.notebook","name":"GitHubCopilot","fullName":"GitHub Copilot","description":"Ask or edit in context","isDefault":true,"locations":["notebook"],"when":"!config.inlineChat.enableV2 && !config.github.copilot.chat.advanced.inlineChat2","commands":[{"name":"fix","description":"Propose a fix for the problems in the selected code"},{"name":"explain","description":"Explain how the code in your active editor works"}]},{"id":"github.copilot.notebookEditorAgent","name":"GitHubCopilot","fullName":"GitHub Copilot","description":"Ask or edit in context","isDefault":true,"locations":["notebook"],"when":"config.inlineChat.enableV2","commands":[{"name":"fix","description":"Propose a fix for the problems in the selected code"},{"name":"explain","description":"Explain how the code in your active editor works"}]},{"id":"github.copilot.workspace","name":"workspace","fullName":"Workspace","description":"Ask about your workspace","when":"!github.copilot.interactiveSession.disabled","sampleRequest":"How do I build this project?","locations":["panel"],"disambiguation":[{"category":"workspace_project_questions","description":"The user wants to learn about or update the code or files in their current workspace. Questions in this category may be about understanding what the whole workspace does or locating the implementation of some code. This does not include generating or updating tests.","examples":["What does this project do?"]},{"category":"find_code_in_workspace","description":"The user wants to locate the implementation of some functionality in their current workspace.","examples":["Where is the tree widget implemented?"]},{"category":"generate_with_workspace_context","description":"The user wants to generate code based on multiple files in the workspace and did not specify which files to reference.","examples":["Create a README for this project."]}],"commands":[{"name":"explain","description":"Explain how the code in your active editor works"},{"name":"review","description":"Review the selected code in your active editor","when":"github.copilot.advanced.review.intent"},{"name":"tests","description":"Generate unit tests for the selected code","disambiguation":[{"category":"create_tests","description":"The user wants to generate unit tests.","examples":["Generate tests for my selection using pytest."]}]},{"name":"fix","description":"Propose a fix for the problems in the selected code","sampleRequest":"There is a problem in this code. Rewrite the code to show it with the bug fixed."},{"name":"new","description":"Scaffold code for a new file or project in a workspace","sampleRequest":"Create a RESTful API server using typescript","isSticky":true,"disambiguation":[{"category":"create_new_workspace_or_extension","description":"The user wants to create a complete Visual Studio Code workspace from scratch, such as a new application or a Visual Studio Code extension. Use this category only if the question relates to generating or creating new workspaces in Visual Studio Code. Do not use this category for updating existing code or generating sample code snippets","examples":["Scaffold a Node server.","Create a sample project which uses the fileSystemProvider API.","react application"]}]},{"name":"newNotebook","description":"Create a new Jupyter Notebook","sampleRequest":"How do I create a notebook to load data from a csv file?","disambiguation":[{"category":"create_jupyter_notebook","description":"The user wants to create a new Jupyter notebook in Visual Studio Code.","examples":["Create a notebook to analyze this CSV file."]}]},{"name":"semanticSearch","description":"Find relevant code to your query","sampleRequest":"Where is the toolbar code?","when":"config.github.copilot.semanticSearch.enabled"},{"name":"setupTests","description":"Set up tests in your project (Experimental)","sampleRequest":"add playwright tests to my project","when":"config.github.copilot.chat.setupTests.enabled","disambiguation":[{"category":"set_up_tests","description":"The user wants to configure project test setup, framework, or test runner. The user does not want to fix their existing tests.","examples":["Set up tests for this project."]}]}]},{"id":"github.copilot.vscode","name":"vscode","fullName":"VS Code","description":"Ask questions about VS Code","when":"!github.copilot.interactiveSession.disabled","sampleRequest":"What is the command to open the integrated terminal?","locations":["panel"],"disambiguation":[{"category":"vscode_configuration_questions","description":"The user wants to learn about, use, or configure the Visual Studio Code. Use this category if the users question is specifically about commands, settings, keybindings, extensions and other features available in Visual Studio Code. Do not use this category to answer questions about generating code or creating new projects including Visual Studio Code extensions.","examples":["Switch to light mode.","Keyboard shortcut to toggle terminal visibility.","Settings to enable minimap.","Whats new in the latest release?"]},{"category":"configure_python_environment","description":"The user wants to set up their Python environment.","examples":["Create a virtual environment for my project."]}],"commands":[{"name":"search","description":"Generate query parameters for workspace search","sampleRequest":"Search for 'foo' in all files under my 'src' directory"},{"name":"startDebugging","description":"Generate launch config and start debugging in VS Code (Experimental)","sampleRequest":"Attach to node app at port 9229","when":"config.github.copilot.chat.startDebugging.enabled"}]},{"id":"github.copilot.terminal","name":"terminal","fullName":"Terminal","description":"Ask about commands","when":"!github.copilot.interactiveSession.disabled","sampleRequest":"How do I view all files within a directory including sub-directories?","isDefault":true,"locations":["terminal"],"commands":[{"name":"explain","description":"Explain something in the terminal","sampleRequest":"Explain the last command"}]},{"id":"github.copilot.terminalPanel","name":"terminal","fullName":"Terminal","description":"Ask how to do something in the terminal","when":"!github.copilot.interactiveSession.disabled","sampleRequest":"How do I view all files within a directory including sub-directories?","locations":["panel"],"commands":[{"name":"explain","description":"Explain something in the terminal","sampleRequest":"Explain the last command","disambiguation":[{"category":"terminal_state_questions","description":"The user wants to learn about specific state such as the selection, command, or failed command in the integrated terminal in Visual Studio Code.","examples":["Why did the latest terminal command fail?"]}]}]},{"id":"github.copilot.chatReplay","name":"chatReplay","fullName":"Chat Replay","when":"debugType == 'vscode-chat-replay'","locations":["panel"]}],"languageModelChatProviders":[{"vendor":"copilot","displayName":"Copilot"},{"vendor":"azure","displayName":"Azure","managementCommand":"github.copilot.chat.manageBYOK"},{"vendor":"anthropic","displayName":"Anthropic","managementCommand":"github.copilot.chat.manageBYOK"},{"vendor":"xai","displayName":"xAI","managementCommand":"github.copilot.chat.manageBYOK"},{"vendor":"ollama","displayName":"Ollama"},{"vendor":"openai","displayName":"OpenAI","managementCommand":"github.copilot.chat.manageBYOK"},{"vendor":"gemini","displayName":"Google","managementCommand":"github.copilot.chat.manageBYOK"},{"vendor":"groq","displayName":"Groq","managementCommand":"github.copilot.chat.manageBYOK"},{"vendor":"openrouter","displayName":"OpenRouter","managementCommand":"github.copilot.chat.manageBYOK"}],"interactiveSession":[{"label":"GitHub Copilot","id":"copilot","icon":"","when":"!github.copilot.interactiveSession.disabled"}],"viewsWelcome":[{"view":"debug","when":"github.copilot-chat.activated","contents":"Debug using a [terminal command](command:github.copilot.chat.startCopilotDebugCommand) or in an [interactive chat](command:workbench.action.chat.open?%7B%22query%22%3A%22%40vscode%20%2FstartDebugging%20%22%2C%22isPartialQuery%22%3Atrue%7D)."}],"chatViewsWelcome":[{"icon":"$(copilot-large)","title":"Ask Copilot","content":"Sign in to enable features powered by GitHub Copilot.\n\n[Sign in](command:workbench.action.chat.triggerSetupForceSignIn)","when":"!github.copilot-chat.activated && !github.copilot.offline && !github.copilot.interactiveSession.individual.expired && !github.copilot.interactiveSession.enterprise.disabled && !github.copilot.interactiveSession.contactSupport && !github.copilot.interactiveSession.chatDisabled && !github.copilot.interactiveSession.switchToReleaseChannel"},{"icon":"$(copilot-large)","title":"Ask Copilot","content":"Your Copilot subscription has expired.\n\n[Review Copilot Settings](https://github.com/settings/copilot?editor=vscode)","when":"github.copilot.interactiveSession.individual.expired"},{"icon":"$(copilot-large)","title":"Ask Copilot","content":"Contact your GitHub organization administrator to enable Copilot.","when":"github.copilot.interactiveSession.enterprise.disabled"},{"icon":"$(copilot-large)","title":"Ask Copilot","content":"You are currently offline. Please connect to the internet to use GitHub Copilot.\n\n[Retry Connection](command:github.copilot.refreshToken)","when":"github.copilot.offline"},{"icon":"$(copilot-large)","title":"Ask Copilot","content":"There seems to be a problem with your account. Please contact GitHub support.\n\n[Contact Support](https://support.github.com/?editor=vscode)","when":"github.copilot.interactiveSession.contactSupport"},{"icon":"$(copilot-large)","title":"Ask Copilot","content":"GitHub Copilot Chat is currently disabled for your account by an organization administrator. Contact an organization administrator to enable chat.\n\n[Learn More](https://docs.github.com/en/copilot/managing-copilot/managing-github-copilot-in-your-organization/managing-github-copilot-features-in-your-organization/managing-policies-for-copilot-in-your-organization)","when":"github.copilot.interactiveSession.chatDisabled"},{"icon":"$(copilot-large)","title":"Ask Copilot","content":"The Pre-Release version of the GitHub Copilot Chat extension is not currently supported in the stable version of VS Code. Please switch to the release version for GitHub Copilot Chat or try VS Code Insiders.\n\n[Switch to Release Version and Reload](command:runCommands?%7B%22commands%22%3A%5B%7B%22command%22%3A%22workbench.extensions.action.switchToRelease%22%2C%22args%22%3A%5B%22GitHub.copilot-chat%22%5D%7D%2C%22workbench.action.reloadWindow%22%5D%7D)\n\n[Switch to VS Code Insiders](https://aka.ms/vscode-insiders)","when":"github.copilot.interactiveSession.switchToReleaseChannel"}],"commands":[{"command":"github.copilot.claude.sessions.refresh","title":"Refresh Claude Code Sessions","icon":"$(refresh)","category":"Claude Code"},{"command":"github.copilot.chat.replay","title":"Start Chat Replay","icon":"$(debug-line-by-line)","enablement":"resourceLangId == chatReplay && !inDebugMode"},{"command":"github.copilot.chat.replay.enableWorkspaceEditTracing","title":"Enable Chat Edit Tracing","category":"Developer","enablement":"!github.copilot.chat.replay.workspaceEditTracing"},{"command":"github.copilot.chat.replay.disableWorkspaceEditTracing","title":"Disable Chat Edit Tracing","category":"Developer","enablement":"github.copilot.chat.replay.workspaceEditTracing"},{"command":"github.copilot.chat.explain","title":"Explain","enablement":"!github.copilot.interactiveSession.disabled","category":"Chat"},{"command":"github.copilot.chat.explain.palette","title":"Explain","enablement":"!github.copilot.interactiveSession.disabled && !editorReadonly","category":"Chat"},{"command":"github.copilot.chat.review","title":"Review","enablement":"config.github.copilot.chat.reviewSelection.enabled && !github.copilot.interactiveSession.disabled","category":"Chat"},{"command":"github.copilot.chat.review.apply","title":"Apply","icon":"$(sparkle)","enablement":"commentThread =~ /hasSuggestion/","category":"Chat"},{"command":"github.copilot.chat.review.applyAndNext","title":"Apply and Go to Next","icon":"$(sparkle)","enablement":"commentThread =~ /hasSuggestion/","category":"Chat"},{"command":"github.copilot.chat.review.discard","title":"Discard","icon":"$(close)","category":"Chat"},{"command":"github.copilot.chat.review.discardAndNext","title":"Discard and Go to Next","icon":"$(close)","category":"Chat"},{"command":"github.copilot.chat.review.discardAll","title":"Discard All","icon":"$(close-all)","category":"Chat"},{"command":"github.copilot.chat.review.stagedChanges","title":"Code Review - Staged Changes","icon":"$(code-review)","enablement":"github.copilot.chat.reviewDiff.enabled && !github.copilot.interactiveSession.disabled","category":"Chat"},{"command":"github.copilot.chat.review.unstagedChanges","title":"Code Review - Unstaged Changes","icon":"$(code-review)","enablement":"github.copilot.chat.reviewDiff.enabled && !github.copilot.interactiveSession.disabled","category":"Chat"},{"command":"github.copilot.chat.review.changes","title":"Code Review - Uncommitted Changes","icon":"$(code-review)","enablement":"github.copilot.chat.reviewDiff.enabled && !github.copilot.interactiveSession.disabled","category":"Chat"},{"command":"github.copilot.chat.review.stagedFileChange","title":"Review Changes","icon":"$(code-review)","enablement":"github.copilot.chat.reviewDiff.enabled && !github.copilot.interactiveSession.disabled","category":"Chat"},{"command":"github.copilot.chat.review.unstagedFileChange","title":"Review Changes","icon":"$(code-review)","enablement":"github.copilot.chat.reviewDiff.enabled && !github.copilot.interactiveSession.disabled","category":"Chat"},{"command":"github.copilot.chat.review.previous","title":"Previous Suggestion","icon":"$(arrow-up)","category":"Chat"},{"command":"github.copilot.chat.review.next","title":"Next Suggestion","icon":"$(arrow-down)","category":"Chat"},{"command":"github.copilot.chat.review.continueInInlineChat","title":"Discard and Copy to Inline Chat","icon":"$(comment-discussion)","category":"Chat"},{"command":"github.copilot.chat.review.continueInChat","title":"View in Chat Panel","icon":"$(comment-discussion)","category":"Chat"},{"command":"github.copilot.chat.review.markHelpful","title":"Helpful","icon":"$(thumbsup)","enablement":"!(commentThread =~ /markedAsHelpful/)","category":"Chat"},{"command":"github.copilot.chat.openUserPreferences","title":"Open User Preferences","category":"Chat","enablement":"config.github.copilot.chat.enableUserPreferences"},{"command":"github.copilot.chat.review.markUnhelpful","title":"Unhelpful","icon":"$(thumbsdown)","enablement":"!(commentThread =~ /markedAsUnhelpful/)","category":"Chat"},{"command":"github.copilot.chat.generate","title":"Generate This","icon":"$(sparkle)","enablement":"!github.copilot.interactiveSession.disabled && !editorReadonly","category":"Chat"},{"command":"github.copilot.chat.generateDocs","title":"Generate Docs","enablement":"!github.copilot.interactiveSession.disabled && !editorReadonly","category":"Chat"},{"command":"github.copilot.chat.generateTests","title":"Generate Tests","enablement":"!github.copilot.interactiveSession.disabled && !editorReadonly","category":"Chat"},{"command":"github.copilot.chat.fix","title":"Fix","enablement":"!github.copilot.interactiveSession.disabled && !editorReadonly","category":"Chat"},{"command":"github.copilot.interactiveSession.feedback","title":"Send Chat Feedback","enablement":"github.copilot-chat.activated && !github.copilot.interactiveSession.disabled","icon":"$(feedback)","category":"Chat"},{"command":"github.copilot.debug.workbenchState","title":"Log Workbench State","category":"Developer"},{"command":"github.copilot.debug.showChatLogView","title":"Show Chat Debug View","category":"Developer"},{"command":"github.copilot.debug.showOutputChannel","title":"Show Output Channel","category":"Developer"},{"command":"github.copilot.debug.showContextInspectorView","title":"Inspect Language Context","icon":"$(inspect)","category":"Developer"},{"command":"github.copilot.debug.resetVirtualToolGroups","title":"Reset Virtual Tool Groups","icon":"$(inspect)","category":"Developer"},{"command":"github.copilot.terminal.explainTerminalLastCommand","title":"Explain Last Terminal Command","category":"Chat"},{"command":"github.copilot.git.generateCommitMessage","title":"Generate Commit Message","icon":"$(sparkle)","enablement":"!github.copilot.interactiveSession.disabled","category":"Chat"},{"command":"github.copilot.git.resolveMergeConflicts","title":"Resolve Conflicts with AI","icon":"$(chat-sparkle)","enablement":"!github.copilot.interactiveSession.disabled","category":"Chat"},{"command":"github.copilot.devcontainer.generateDevContainerConfig","title":"Generate Dev Container Configuration","category":"Chat"},{"command":"github.copilot.tests.fixTestFailure","icon":"$(sparkle)","title":"Fix Test Failure","category":"Chat"},{"command":"github.copilot.tests.fixTestFailure.fromInline","icon":"$(sparkle)","title":"Fix Test Failure"},{"command":"github.copilot.chat.attachFile","title":"Add File to Chat","category":"Chat"},{"command":"github.copilot.chat.attachSelection","title":"Add Selection to Chat","icon":"$(comment-discussion)","category":"Chat"},{"command":"github.copilot.debug.collectDiagnostics","title":"Chat Diagnostics","category":"Developer"},{"command":"github.copilot.debug.inlineEdit.clearCache","title":"Clear Next Edit Cache","category":"Developer"},{"command":"github.copilot.debug.inlineEdit.reportNotebookNESIssue","title":"Report Notebook Next Edit Issue","enablement":"config.github.copilot.chat.advanced.notebook.alternativeNESFormat.enabled || github.copilot.chat.enableEnhancedNotebookNES","category":"Developer"},{"command":"github.copilot.debug.generateSTest","title":"Generate STest From Last Chat Request","enablement":"github.copilot.debugReportFeedback","category":"Developer"},{"command":"github.copilot.debug.generateConfiguration","title":"Generate Debug Configuration","category":"Chat","enablement":"config.github.copilot.chat.startDebugging.enabled","tags":["experimental"]},{"command":"github.copilot.open.walkthrough","title":"Open Walkthrough","category":"Chat"},{"command":"github.copilot.debug.generateInlineEditTests","title":"Generate Inline Edit Tests","category":"Chat","enablement":"resourceScheme == 'ccreq'"},{"command":"github.copilot.buildLocalWorkspaceIndex","title":"Build Local Workspace Index","category":"Chat","enablement":"github.copilot-chat.activated"},{"command":"github.copilot.buildRemoteWorkspaceIndex","title":"Build Remote Workspace Index","category":"Chat","enablement":"github.copilot-chat.activated"},{"command":"github.copilot.report","title":"Report Issue","category":"Chat"},{"command":"github.copilot.chat.rerunWithCopilotDebug","title":"Debug Last Terminal Command","category":"Chat"},{"command":"github.copilot.chat.startCopilotDebugCommand","title":"Start Copilot Debug"},{"command":"github.copilot.chat.clearTemporalContext","title":"Clear Temporal Context","category":"Developer"},{"command":"github.copilot.search.markHelpful","title":"Helpful","icon":"$(thumbsup)","enablement":"!github.copilot.search.feedback.sent"},{"command":"github.copilot.search.markUnhelpful","title":"Unhelpful","icon":"$(thumbsdown)","enablement":"!github.copilot.search.feedback.sent"},{"command":"github.copilot.search.feedback","title":"Feedback","icon":"$(feedback)","enablement":"!github.copilot.search.feedback.sent"},{"command":"github.copilot.chat.debug.showElements","title":"Show Rendered Elements"},{"command":"github.copilot.chat.debug.hideElements","title":"Hide Rendered Elements"},{"command":"github.copilot.chat.debug.showTools","title":"Show Tools"},{"command":"github.copilot.chat.debug.hideTools","title":"Hide Tools"},{"command":"github.copilot.chat.debug.showNesRequests","title":"Show NES Requests"},{"command":"github.copilot.chat.debug.hideNesRequests","title":"Hide NES Requests"},{"command":"github.copilot.chat.debug.showRawRequestBody","title":"Show Raw Request Body"},{"command":"github.copilot.chat.debug.exportLogItem","title":"Export as...","icon":"$(export)"},{"command":"github.copilot.chat.debug.exportPromptArchive","title":"Export All as Archive...","icon":"$(archive)"},{"command":"github.copilot.chat.debug.exportPromptLogsAsJson","title":"Export All as JSON...","icon":"$(export)"},{"command":"github.copilot.chat.debug.exportAllPromptLogsAsJson","title":"Export All Prompt Logs as JSON...","icon":"$(export)"},{"command":"github.copilot.debug.collectWorkspaceIndexDiagnostics","title":"Collect Workspace Index Diagnostics","category":"Developer"},{"command":"github.copilot.chat.mcp.setup.check","title":"MCP Check: is supported"},{"command":"github.copilot.chat.mcp.setup.validatePackage","title":"MCP Check: validate package"},{"command":"github.copilot.chat.mcp.setup.flow","title":"MCP Check: do prompts"},{"command":"github.copilot.chat.generateAltText","title":"Generate/Refine Alt Text"},{"command":"github.copilot.chat.notebook.enableFollowCellExecution","title":"Enable Follow Cell Execution from Chat","shortTitle":"Follow","icon":"$(pinned)"},{"command":"github.copilot.chat.notebook.disableFollowCellExecution","title":"Disable Follow Cell Execution from Chat","shortTitle":"Unfollow","icon":"$(pinned-dirty)"},{"command":"github.copilot.chat.manageBYOK","title":"Manage Bring Your Own Key Vendor","enablement":"false"}],"configuration":[{"title":"GitHub Copilot Chat","id":"stable","properties":{"github.copilot.chat.codeGeneration.useInstructionFiles":{"type":"boolean","default":true,"markdownDescription":"Controls whether code instructions from `.github/copilot-instructions.md` are added to Copilot requests.\n\nNote: Keep your instructions short and precise. Poor instructions can degrade Copilot's quality and performance. [Learn more](https://aka.ms/github-copilot-custom-instructions) about customizing Copilot."},"github.copilot.editor.enableCodeActions":{"type":"boolean","default":true,"description":"Controls if Copilot commands are shown as Code Actions when available"},"github.copilot.renameSuggestions.triggerAutomatically":{"type":"boolean","default":true,"description":"Controls whether Copilot generates suggestions for renaming"},"github.copilot.chat.localeOverride":{"type":"string","enum":["auto","en","fr","it","de","es","ru","zh-CN","zh-TW","ja","ko","cs","pt-br","tr","pl"],"enumDescriptions":["Use VS Code's configured display language","English","français","italiano","Deutsch","español","русский","中文(简体)","中文(繁體)","日本語","한국어","čeština","português","Türkçe","polski"],"default":"auto","markdownDescription":"Specify a locale that Copilot should respond in, e.g. `en` or `fr`. By default, Copilot will respond using VS Code's configured display language locale."},"github.copilot.chat.terminalChatLocation":{"type":"string","default":"chatView","markdownDescription":"Controls where chat queries from the terminal should be opened.","markdownEnumDescriptions":["Open the chat view.","Open quick chat.","Open terminal inline chat"],"enum":["chatView","quickChat","terminal"]},"github.copilot.chat.scopeSelection":{"type":"boolean","default":false,"markdownDescription":"Whether to prompt the user to select a specific symbol scope if the user uses `/explain` and the active editor has no selection."},"github.copilot.chat.useProjectTemplates":{"type":"boolean","default":true,"markdownDescription":"Use relevant GitHub projects as starter projects when using `/new`"},"github.copilot.nextEditSuggestions.enabled":{"type":"boolean","default":false,"tags":["nextEditSuggestions","onExp"],"markdownDescription":"Whether to enable next edit suggestions (NES).\n\nNES can propose a next edit based on your recent changes. [Learn more](https://aka.ms/vscode-nes) about next edit suggestions.","scope":"language-overridable"},"github.copilot.nextEditSuggestions.fixes":{"type":"boolean","default":true,"tags":["nextEditSuggestions","onExp"],"markdownDescription":"Whether to offer fixes for diagnostics via next edit suggestions (NES).","scope":"language-overridable"},"github.copilot.nextEditSuggestions.allowWhitespaceOnlyChanges":{"type":"boolean","default":true,"tags":["nextEditSuggestions","onExp"],"markdownDescription":"Whether to allow whitespace-only changes be proposed by next edit suggestions (NES).","scope":"language-overridable"},"github.copilot.chat.agent.autoFix":{"type":"boolean","default":true,"description":"Automatically fix diagnostics for edited files."},"github.copilot.chat.customInstructionsInSystemMessage":{"type":"boolean","default":true,"description":"When enabled, custom instructions and mode instructions will be appended to the system message instead of a user message."},"github.copilot.chat.agent.currentEditorContext.enabled":{"type":"boolean","default":true,"description":"When enabled, Copilot will include the name of the current active editor in the context for agent mode."}}},{"title":"Preview","id":"preview","properties":{"github.copilot.chat.startDebugging.enabled":{"type":"boolean","default":true,"markdownDescription":"Enables the `/startDebugging` intent in panel chat. Generates or finds launch config to match the query (if any), project structure, and more.","tags":["preview"]},"github.copilot.chat.reviewAgent.enabled":{"type":"boolean","default":true,"description":"Enables the code review agent.","tags":["preview"]},"github.copilot.chat.reviewSelection.enabled":{"type":"boolean","default":true,"description":"Enables code review on current selection.","tags":["preview"]},"github.copilot.chat.reviewSelection.instructions":{"type":"array","items":{"oneOf":[{"type":"object","markdownDescription":"A path to a file that will be added to Copilot requests that provide code review for the current selection. Optionally, you can specify a language for the instruction.","properties":{"file":{"type":"string","examples":[".copilot-review-instructions.md"]},"language":{"type":"string"}},"examples":[{"file":".copilot-review-instructions.md"}],"required":["file"]},{"type":"object","markdownDescription":"A text instruction that will be added to Copilot requests that provide code review for the current selection. Optionally, you can specify a language for the instruction.","properties":{"text":{"type":"string","examples":["Use underscore for field names."]},"language":{"type":"string"}},"required":["text"],"examples":[{"text":"Use underscore for field names."},{"text":"Resolve all TODO tasks."}]}]},"default":[],"markdownDescription":"A set of instructions that will be added to Copilot requests that provide code review for the current selection.\nInstructions can come from: \n- a file in the workspace: `{ \"file\": \"fileName\" }`\n- text in natural language: `{ \"text\": \"Use underscore for field names.\" }`\n\nNote: Keep your instructions short and precise. Poor instructions can degrade Copilot's effectiveness.","examples":[[{"file":".copilot-review-instructions.md"},{"text":"Resolve all TODO tasks."}]],"tags":["preview"]},"github.copilot.chat.copilotDebugCommand.enabled":{"type":"boolean","default":true,"tags":["preview"],"description":"Whether the `copilot-debug` command is enabled in the terminal."},"github.copilot.chat.codesearch.enabled":{"type":"boolean","default":false,"tags":["preview"],"markdownDescription":"Whether to enable agentic codesearch when using `#codebase`."},"github.copilot.chat.byok.ollamaEndpoint":{"type":"string","default":"http://localhost:11434","tags":["preview"],"markdownDescription":"The endpoint to use for the Ollama when accessed via bring your own key. Defaults to localhost."}}},{"title":"Experimental","id":"experimental","properties":{"github.copilot.chat.agent.thinkingTool":{"type":"boolean","default":false,"tags":["experimental"],"markdownDescription":"Enables the thinking tool that allows Copilot to think deeply about your request before generating a response in agent mode."},"github.copilot.chat.imageUpload.enabled":{"type":"boolean","default":true,"tags":["experimental","onExp"],"markdownDescription":"Enables the use of image upload URLs in chat requests instead of raw base64 strings."},"github.copilot.chat.edits.suggestRelatedFilesFromGitHistory":{"type":"boolean","default":true,"tags":["experimental"],"markdownDescription":"Whether to suggest related files from git history for the Copilot Edits working set."},"github.copilot.chat.edits.suggestRelatedFilesForTests":{"type":"boolean","default":true,"tags":["experimental"],"markdownDescription":"Whether to suggest source files from test files for the Copilot Edits working set."},"github.copilot.chat.codeGeneration.instructions":{"markdownDeprecationMessage":"Use instructions files instead. See https://aka.ms/vscode-ghcp-custom-instructions for more information.","type":"array","items":{"oneOf":[{"type":"object","markdownDescription":"A path to a file that will be added to Copilot requests that generate code. Optionally, you can specify a language for the instruction.","properties":{"file":{"type":"string","examples":[".copilot-codeGeneration-instructions.md"]},"language":{"type":"string"}},"examples":[{"file":".copilot-codeGeneration-instructions.md"}],"required":["file"]},{"type":"object","markdownDescription":"A text instruction that will be added to Copilot requests that generate code. Optionally, you can specify a language for the instruction.","properties":{"text":{"type":"string","examples":["Use underscore for field names."]},"language":{"type":"string"}},"required":["text"],"examples":[{"text":"Use underscore for field names."},{"text":"Always add a comment: 'Generated by Copilot'."}]}]},"default":[],"markdownDescription":"A set of instructions that will be added to Copilot requests that generate code.\nInstructions can come from: \n- a file in the workspace: `{ \"file\": \"fileName\" }`\n- text in natural language: `{ \"text\": \"Use underscore for field names.\" }`\n\nNote: Keep your instructions short and precise. Poor instructions can degrade Copilot's quality and performance.","examples":[[{"file":".copilot-codeGeneration-instructions.md"},{"text":"Always add a comment: 'Generated by Copilot'."}]],"tags":["experimental"]},"github.copilot.chat.testGeneration.instructions":{"markdownDeprecationMessage":"Use instructions files instead. See https://aka.ms/vscode-ghcp-custom-instructions for more information.","type":"array","items":{"oneOf":[{"type":"object","markdownDescription":"A path to a file that will be added to Copilot requests that generate tests. Optionally, you can specify a language for the instruction.","properties":{"file":{"type":"string","examples":[".copilot-test-instructions.md"]},"language":{"type":"string"}},"examples":[{"file":".copilot-test-instructions.md"}],"required":["file"]},{"type":"object","markdownDescription":"A text instruction that will be added to Copilot requests that generate tests. Optionally, you can specify a language for the instruction.","properties":{"text":{"type":"string","examples":["Use suite and test instead of describe and it."]},"language":{"type":"string"}},"required":["text"],"examples":[{"text":"Always try uniting related tests in a suite."}]}]},"default":[],"markdownDescription":"A set of instructions that will be added to Copilot requests that generate tests.\nInstructions can come from: \n- a file in the workspace: `{ \"file\": \"fileName\" }`\n- text in natural language: `{ \"text\": \"Use underscore for field names.\" }`\n\nNote: Keep your instructions short and precise. Poor instructions can degrade Copilot's quality and performance.","examples":[[{"file":".copilot-test-instructions.md"},{"text":"Always try uniting related tests in a suite."}]],"tags":["experimental"]},"github.copilot.chat.commitMessageGeneration.instructions":{"type":"array","items":{"oneOf":[{"type":"object","markdownDescription":"A path to a file with instructions that will be added to Copilot requests that generate commit messages.","properties":{"file":{"type":"string","examples":[".copilot-commit-message-instructions.md"]}},"examples":[{"file":".copilot-commit-message-instructions.md"}],"required":["file"]},{"type":"object","markdownDescription":"Text instructions that will be added to Copilot requests that generate commit messages.","properties":{"text":{"type":"string","examples":["Use conventional commit message format."]}},"required":["text"],"examples":[{"text":"Use conventional commit message format."}]}]},"default":[],"markdownDescription":"A set of instructions that will be added to Copilot requests that generate commit messages.\nInstructions can come from: \n- a file in the workspace: `{ \"file\": \"fileName\" }`\n- text in natural language: `{ \"text\": \"Use conventional commit message format.\" }`\n\nNote: Keep your instructions short and precise. Poor instructions can degrade Copilot's quality and performance.","examples":[[{"file":".copilot-commit-message-instructions.md"},{"text":"Use conventional commit message format."}]],"tags":["experimental"]},"github.copilot.chat.pullRequestDescriptionGeneration.instructions":{"type":"array","items":{"oneOf":[{"type":"object","markdownDescription":"A path to a file with instructions that will be added to Copilot requests that generate pull request titles and descriptions.","properties":{"file":{"type":"string","examples":[".copilot-pull-request-description-instructions.md"]}},"examples":[{"file":".copilot-pull-request-description-instructions.md"}],"required":["file"]},{"type":"object","markdownDescription":"Text instructions that will be added to Copilot requests that generate pull request titles and descriptions.","properties":{"text":{"type":"string","examples":["Include every commit message in the pull request description."]}},"required":["text"],"examples":[{"text":"Include every commit message in the pull request description."}]}]},"default":[],"markdownDescription":"A set of instructions that will be added to Copilot requests that generate pull request titles and descriptions.\nInstructions can come from: \n- a file in the workspace: `{ \"file\": \"fileName\" }`\n- text in natural language: `{ \"text\": \"Always include a list of key changes.\" }`\n\nNote: Keep your instructions short and precise. Poor instructions can degrade Copilot's quality and performance.","examples":[[{"file":".copilot-pull-request-description-instructions.md"},{"text":"Use conventional commit message format."}]],"tags":["experimental"]},"github.copilot.chat.generateTests.codeLens":{"type":"boolean","default":false,"description":"Show 'Generate tests' code lens for symbols that are not covered by current test coverage information.","tags":["experimental"]},"github.copilot.chat.edits.temporalContext.enabled":{"type":"boolean","default":false,"description":"When making edits request whether to include recently viewed and edited files with Copilot requests.","tags":["experimental","onExp"]},"github.copilot.chat.editor.temporalContext.enabled":{"type":"boolean","default":false,"description":"When making inline chat request whether to include recently viewed and edited files with Copilot requests.","tags":["experimental","onExp"]},"github.copilot.chat.setupTests.enabled":{"type":"boolean","default":true,"markdownDescription":"Enables the `/setupTests` intent and prompting in `/tests` generation.","tags":["experimental"]},"github.copilot.chat.languageContext.typescript.enabled":{"type":"boolean","default":false,"scope":"resource","tags":["experimental","onExP"],"markdownDescription":"Enables the TypeScript language context provider for inline completions"},"github.copilot.chat.languageContext.typescript.items":{"type":"string","enum":["minimal","double","fillHalf","fill"],"default":"minimal","scope":"resource","tags":["experimental","onExP"],"markdownDescription":"Controls which kind of items are included in the TypeScript language context provider."},"github.copilot.chat.languageContext.typescript.includeDocumentation":{"type":"boolean","default":false,"scope":"resource","tags":["experimental","onExP"],"markdownDescription":"Controls whether to include documentation comments in the generated code snippets."},"github.copilot.chat.languageContext.typescript.cacheTimeout":{"type":"number","default":500,"scope":"resource","tags":["experimental","onExP"],"markdownDescription":"The cache population timeout for the TypeScript language context provider in milliseconds. The default is 500 milliseconds."},"github.copilot.chat.languageContext.fix.typescript.enabled":{"type":"boolean","default":false,"scope":"resource","tags":["experimental","onExP"],"markdownDescription":"Enables the TypeScript language context provider for /fix commands"},"github.copilot.chat.languageContext.inline.typescript.enabled":{"type":"boolean","default":false,"scope":"resource","tags":["experimental","onExP"],"markdownDescription":"Enables the TypeScript language context provider for inline chats (both generate and edit)"},"github.copilot.chat.newWorkspaceCreation.enabled":{"type":"boolean","default":true,"tags":["experimental"],"description":"Whether to enable new agentic workspace creation."},"github.copilot.chat.newWorkspace.useContext7":{"type":"boolean","default":false,"tags":["experimental"],"markdownDescription":"Whether to use the [Context7](command:github.copilot.mcp.viewContext7) tools to scaffold project for new workspace creation."},"github.copilot.chat.notebook.followCellExecution.enabled":{"type":"boolean","default":false,"tags":["experimental"],"description":"Controls whether the currently executing cell is revealed into the viewport upon execution from Copilot."},"github.copilot.chat.notebook.enhancedNextEditSuggestions.enabled":{"type":"boolean","default":false,"tags":["experimental","onExp"],"description":"Controls whether to use an enhanced approach for generating next edit suggestions in notebook cells."},"github.copilot.chat.summarizeAgentConversationHistory.enabled":{"type":"boolean","default":true,"tags":["experimental"],"description":"Whether to auto-summarize agent conversation history once the context window is filled."},"github.copilot.chat.virtualTools.threshold":{"type":"number","minimum":0,"maximum":128,"default":128,"tags":["experimental"],"markdownDescription":"This setting defines the tool count over which virtual tools should be used. Virtual tools group similar sets of tools together and they allow the model to activate them on-demand. Certain tool groups will optimistically be pre-activated. We are actively developing this feature and you experience degraded tool calling once the threshold is hit.\n\nMay be set to `0` to disable virtual tools."},"github.copilot.chat.azureModels":{"type":"object","default":{},"tags":["experimental"],"additionalProperties":{"type":"object","properties":{"name":{"type":"string","description":"Display name of the Azure model"},"url":{"type":"string","description":"URL endpoint for the Azure model"},"toolCalling":{"type":"boolean","description":"Whether the model supports tool calling"},"vision":{"type":"boolean","description":"Whether the model supports vision capabilities"},"maxInputTokens":{"type":"number","description":"Maximum number of input tokens supported by the model"},"maxOutputTokens":{"type":"number","description":"Maximum number of output tokens supported by the model"},"thinking":{"type":"boolean","default":false,"description":"Whether the model supports thinking capabilities"}},"required":["name","url","toolCalling","vision","maxInputTokens","maxOutputTokens"],"additionalProperties":false},"markdownDescription":"Configure custom Azure OpenAI models. Each key should be a unique model ID, and the value should be an object with model configuration including name, url, toolCalling, vision, maxInputTokens, and maxOutputTokens properties."},"github.copilot.chat.customOAIModels":{"type":"object","default":{},"tags":["experimental"],"additionalProperties":{"type":"object","properties":{"name":{"type":"string","description":"Display name of the custom OpenAI model"},"url":{"type":"string","description":"URL endpoint for the custom OpenAI-compatible model"},"toolCalling":{"type":"boolean","description":"Whether the model supports tool calling"},"vision":{"type":"boolean","description":"Whether the model supports vision capabilities"},"maxInputTokens":{"type":"number","description":"Maximum number of input tokens supported by the model"},"maxOutputTokens":{"type":"number","description":"Maximum number of output tokens supported by the model"},"requiresAPIKey":{"type":"boolean","description":"Whether the model requires an API key for authentication","default":true},"editTools":{"type":"array","description":"List of edit tools supported by the model. If this is not configured, the editor will try multiple edit tools and pick the best one.\n\n- 'find-replace': Find and replace text in a document.\n- 'multi-find-replace': Find and replace text in a document.\n- 'apply-patch': A file-oriented diff format used by some OpenAI models\n- 'code-rewrite': A general but slower editing tool that allows the model to rewrite and code snippet and provide only the replacement to the editor.","items":{"type":"string","enum":["find-replace","multi-find-replace","apply-patch","code-rewrite"]}},"thinking":{"type":"boolean","default":false,"description":"Whether the model supports thinking capabilities"}},"required":["name","url","toolCalling","vision","maxInputTokens","maxOutputTokens","requiresAPIKey"],"additionalProperties":false},"markdownDescription":"Configure custom OpenAI-compatible models. Each key should be a unique model ID, and the value should be an object with model configuration including name, url, toolCalling, vision, maxInputTokens, and maxOutputTokens properties."},"github.copilot.chat.alternateGptPrompt.enabled":{"type":"boolean","default":false,"tags":["experimental"],"description":"Enables an experimental alternate prompt for GPT models instead of the default prompt."},"github.copilot.chat.gpt5AlternatePrompt":{"type":"string","default":"default","tags":["experimental"],"description":"Specifies an experimental alternate prompt to use for GPT-5 models."},"github.copilot.chat.gpt5CodexAlternatePrompt":{"type":"string","default":"codex","tags":["experimental","onExp"],"enum":["default","codex"],"description":"Specifies an experimental alternate prompt to use for the GPT-5-Codex model."},"github.copilot.chat.grokCodeAlternatePrompt":{"type":"string","default":"default","tags":["experimental"],"description":"Specifies an experimental alternate prompt to use for Grok Code models."},"github.copilot.chat.claudeSonnet45AlternatePrompt":{"type":"string","default":"default","tags":["experimental"],"description":"Specifies an experimental alternate prompt to use for Claude Sonnet 4.5."},"github.copilot.chat.useResponsesApi":{"type":"boolean","default":false,"markdownDescription":"Use the Responses API instead of the Chat Completions API when supported. Enables reasoning and reasoning summaries.\n\n**Note**: This is an experimental feature that is not yet activated for all users.","tags":["experimental","onExp"]},"github.copilot.chat.responsesApiReasoningEffort":{"type":"string","default":"default","markdownDescription":"Sets the reasoning effort used for the Responses API. Requires `#github.copilot.chat.useResponsesApi#`.","tags":["experimental","onExp"],"enum":["low","medium","high","default"]},"github.copilot.chat.responsesApiReasoningSummary":{"type":"string","default":"detailed","markdownDescription":"Sets the reasoning summary style used for the Responses API. Requires `#github.copilot.chat.useResponsesApi#`.","tags":["experimental","onExp"],"enum":["off","detailed"]},"github.copilot.chat.executePrompt.enabled":{"type":"boolean","default":false,"markdownDescription":"The executePrompt tool enables the agent to execute tasks in a separate, isolated context.","tags":["experimental"]},"github.copilot.chat.completionsFetcher":{"type":["string","null"],"markdownDescription":"Sets the fetcher used for the inline completions.","tags":["experimental","onExp"],"enum":["electron-fetch","node-fetch"]},"github.copilot.chat.nesFetcher":{"type":["string","null"],"markdownDescription":"Sets the fetcher used for the next edit suggestions.","tags":["experimental","onExp"],"enum":["electron-fetch","node-fetch"]}}}],"submenus":[{"id":"copilot/reviewComment/additionalActions/applyAndNext","label":"Apply and Go to Next"},{"id":"copilot/reviewComment/additionalActions/discardAndNext","label":"Discard and Go to Next"},{"id":"copilot/reviewComment/additionalActions/discard","label":"Discard"},{"id":"github.copilot.chat.debug.filter","label":"Filter","icon":"$(filter)"},{"id":"github.copilot.chat.debug.exportAllPromptLogsAsJson","label":"Export All Logs as JSON","icon":"$(file-export)"}],"menus":{"editor/title":[{"command":"github.copilot.debug.generateInlineEditTests","when":"resourceScheme == 'ccreq'"},{"command":"github.copilot.chat.notebook.enableFollowCellExecution","when":"config.github.copilot.chat.notebook.followCellExecution.enabled && !github.copilot.notebookFollowInSessionEnabled && github.copilot.notebookAgentModeUsage && !config.notebook.globalToolbar","group":"navigation@10"},{"command":"github.copilot.chat.notebook.disableFollowCellExecution","when":"config.github.copilot.chat.notebook.followCellExecution.enabled && github.copilot.notebookFollowInSessionEnabled && github.copilot.notebookAgentModeUsage && !config.notebook.globalToolbar","group":"navigation@10"},{"command":"github.copilot.chat.replay","group":"navigation@9","when":"resourceLangId == chatReplay"}],"editor/context":[{"command":"github.copilot.chat.explain","when":"!github.copilot.interactiveSession.disabled","group":"1_chat@4"}],"editor/context/chat":[{"command":"github.copilot.chat.fix","when":"!github.copilot.interactiveSession.disabled && !editorReadonly","group":"copilotAction@1"},{"command":"github.copilot.chat.review","when":"config.github.copilot.chat.reviewSelection.enabled && !github.copilot.interactiveSession.disabled && resourceScheme != 'vscode-chat-code-block'","group":"copilotAction@2"},{"command":"github.copilot.chat.generateDocs","when":"!github.copilot.interactiveSession.disabled && !editorReadonly","group":"copilotGenerate@1"},{"command":"github.copilot.chat.generateTests","when":"!github.copilot.interactiveSession.disabled && !editorReadonly","group":"copilotGenerate@2"}],"testing/item/result":[{"command":"github.copilot.tests.fixTestFailure.fromInline","when":"testResultState == failed && !testResultOutdated","group":"inline@2"}],"testing/item/context":[{"command":"github.copilot.tests.fixTestFailure.fromInline","when":"testResultState == failed && !testResultOutdated","group":"inline@2"}],"commandPalette":[{"command":"github.copilot.interactiveSession.feedback","when":"github.copilot-chat.activated && !github.copilot.interactiveSession.disabled"},{"command":"github.copilot.debug.workbenchState","when":"true"},{"command":"github.copilot.chat.rerunWithCopilotDebug","when":"false"},{"command":"github.copilot.chat.startCopilotDebugCommand","when":"false"},{"command":"github.copilot.git.generateCommitMessage","when":"false"},{"command":"github.copilot.git.resolveMergeConflicts","when":"false"},{"command":"github.copilot.chat.explain","when":"false"},{"command":"github.copilot.chat.review","when":"!github.copilot.interactiveSession.disabled"},{"command":"github.copilot.chat.review.apply","when":"false"},{"command":"github.copilot.chat.review.applyAndNext","when":"false"},{"command":"github.copilot.chat.review.discard","when":"false"},{"command":"github.copilot.chat.review.discardAndNext","when":"false"},{"command":"github.copilot.chat.review.discardAll","when":"false"},{"command":"github.copilot.chat.review.stagedChanges","when":"false"},{"command":"github.copilot.chat.review.unstagedChanges","when":"false"},{"command":"github.copilot.chat.review.changes","when":"false"},{"command":"github.copilot.chat.review.stagedFileChange","when":"false"},{"command":"github.copilot.chat.review.unstagedFileChange","when":"false"},{"command":"github.copilot.chat.review.previous","when":"false"},{"command":"github.copilot.chat.review.next","when":"false"},{"command":"github.copilot.chat.review.continueInInlineChat","when":"false"},{"command":"github.copilot.chat.review.continueInChat","when":"false"},{"command":"github.copilot.chat.review.markHelpful","when":"false"},{"command":"github.copilot.chat.review.markUnhelpful","when":"false"},{"command":"github.copilot.devcontainer.generateDevContainerConfig","when":"false"},{"command":"github.copilot.tests.fixTestFailure","when":"false"},{"command":"github.copilot.tests.fixTestFailure.fromInline","when":"false"},{"command":"github.copilot.search.markHelpful","when":"false"},{"command":"github.copilot.search.markUnhelpful","when":"false"},{"command":"github.copilot.search.feedback","when":"false"},{"command":"github.copilot.chat.debug.showElements","when":"false"},{"command":"github.copilot.chat.debug.hideElements","when":"false"},{"command":"github.copilot.chat.debug.showTools","when":"false"},{"command":"github.copilot.chat.debug.hideTools","when":"false"},{"command":"github.copilot.chat.debug.showNesRequests","when":"false"},{"command":"github.copilot.chat.debug.hideNesRequests","when":"false"},{"command":"github.copilot.chat.debug.exportLogItem","when":"false"},{"command":"github.copilot.chat.debug.exportPromptArchive","when":"false"},{"command":"github.copilot.chat.debug.exportPromptLogsAsJson","when":"false"},{"command":"github.copilot.chat.debug.exportAllPromptLogsAsJson","when":"false"},{"command":"github.copilot.chat.mcp.setup.check","when":"false"},{"command":"github.copilot.chat.mcp.setup.validatePackage","when":"false"},{"command":"github.copilot.chat.mcp.setup.flow","when":"false"},{"command":"github.copilot.chat.debug.showRawRequestBody","when":"false"},{"command":"github.copilot.debug.showOutputChannel","when":"false"}],"view/title":[{"command":"github.copilot.claude.sessions.refresh","when":"view == workbench.view.chat.sessions.claude-code","group":"navigation@1"},{"submenu":"github.copilot.chat.debug.filter","when":"view == copilot-chat","group":"navigation"},{"command":"github.copilot.chat.debug.exportAllPromptLogsAsJson","when":"view == copilot-chat","group":"export@1"},{"command":"github.copilot.debug.showOutputChannel","when":"view == copilot-chat","group":"3_show@1"},{"command":"github.copilot.debug.showChatLogView","when":"view == workbench.panel.chat.view.copilot","group":"3_show"}],"view/item/context":[{"command":"github.copilot.chat.debug.showRawRequestBody","when":"view == copilot-chat && viewItem == request","group":"export@0"},{"command":"github.copilot.chat.debug.exportLogItem","when":"view == copilot-chat && (viewItem == toolcall || viewItem == request)","group":"export@1"},{"command":"github.copilot.chat.debug.exportPromptArchive","when":"view == copilot-chat && viewItem == chatprompt","group":"export@2"},{"command":"github.copilot.chat.debug.exportPromptLogsAsJson","when":"view == copilot-chat && viewItem == chatprompt","group":"export@3"}],"searchPanel/aiResults/commands":[{"command":"github.copilot.search.markHelpful","group":"inline@0","when":"aiResultsTitle && aiResultsRequested"},{"command":"github.copilot.search.markUnhelpful","group":"inline@1","when":"aiResultsTitle && aiResultsRequested"},{"command":"github.copilot.search.feedback","group":"inline@2","when":"aiResultsTitle && aiResultsRequested && github.copilot.debugReportFeedback"}],"comments/comment/title":[{"command":"github.copilot.chat.review.markHelpful","group":"inline@0","when":"commentController == github-copilot-review"},{"command":"github.copilot.chat.review.markUnhelpful","group":"inline@1","when":"commentController == github-copilot-review"}],"commentsView/commentThread/context":[{"command":"github.copilot.chat.review.apply","group":"context@1","when":"commentController == github-copilot-review"},{"command":"github.copilot.chat.review.discard","group":"context@2","when":"commentController == github-copilot-review"},{"command":"github.copilot.chat.review.discardAll","group":"context@3","when":"commentController == github-copilot-review"}],"comments/commentThread/additionalActions":[{"submenu":"copilot/reviewComment/additionalActions/applyAndNext","group":"inline@1","when":"commentController == github-copilot-review && github.copilot.chat.review.numberOfComments > 1"},{"command":"github.copilot.chat.review.apply","group":"inline@1","when":"commentController == github-copilot-review && github.copilot.chat.review.numberOfComments == 1"},{"submenu":"copilot/reviewComment/additionalActions/discardAndNext","group":"inline@2","when":"commentController == github-copilot-review && github.copilot.chat.review.numberOfComments > 1"},{"submenu":"copilot/reviewComment/additionalActions/discard","group":"inline@2","when":"commentController == github-copilot-review && github.copilot.chat.review.numberOfComments == 1"}],"copilot/reviewComment/additionalActions/applyAndNext":[{"command":"github.copilot.chat.review.applyAndNext","group":"inline@1","when":"commentController == github-copilot-review"},{"command":"github.copilot.chat.review.apply","group":"inline@2","when":"commentController == github-copilot-review"}],"copilot/reviewComment/additionalActions/discardAndNext":[{"command":"github.copilot.chat.review.discardAndNext","group":"inline@1","when":"commentController == github-copilot-review"},{"command":"github.copilot.chat.review.discard","group":"inline@2","when":"commentController == github-copilot-review"},{"command":"github.copilot.chat.review.continueInInlineChat","group":"inline@3","when":"commentController == github-copilot-review"}],"copilot/reviewComment/additionalActions/discard":[{"command":"github.copilot.chat.review.discard","group":"inline@2","when":"commentController == github-copilot-review"},{"command":"github.copilot.chat.review.continueInInlineChat","group":"inline@3","when":"commentController == github-copilot-review"}],"comments/commentThread/title":[{"command":"github.copilot.chat.review.previous","group":"inline@1","when":"commentController == github-copilot-review"},{"command":"github.copilot.chat.review.next","group":"inline@2","when":"commentController == github-copilot-review"},{"command":"github.copilot.chat.review.continueInChat","group":"inline@3","when":"commentController == github-copilot-review"},{"command":"github.copilot.chat.review.discardAll","group":"inline@4","when":"commentController == github-copilot-review"}],"scm/title":[{"command":"github.copilot.chat.review.changes","group":"navigation","when":"config.github.copilot.chat.reviewAgent.enabled && github.copilot.chat.reviewDiff.enabled && scmProvider == git && scmProviderRootUri in github.copilot.chat.reviewDiff.enabledRootUris"}],"scm/resourceGroup/context":[{"command":"github.copilot.chat.review.stagedChanges","when":"config.github.copilot.chat.reviewAgent.enabled && github.copilot.chat.reviewDiff.enabled && scmProvider == git && scmResourceGroup == index","group":"inline@-3"},{"command":"github.copilot.chat.review.unstagedChanges","when":"config.github.copilot.chat.reviewAgent.enabled && github.copilot.chat.reviewDiff.enabled && scmProvider == git && scmResourceGroup == workingTree","group":"inline@-3"}],"scm/resourceState/context":[{"command":"github.copilot.git.resolveMergeConflicts","when":"scmProvider == git && scmResourceGroup == merge && git.activeResourceHasMergeConflicts","group":"z_chat@1"},{"command":"github.copilot.chat.review.stagedFileChange","group":"3_copilot","when":"config.github.copilot.chat.reviewAgent.enabled && github.copilot.chat.reviewDiff.enabled && scmProvider == git && scmResourceGroup == index"},{"command":"github.copilot.chat.review.unstagedFileChange","group":"3_copilot","when":"config.github.copilot.chat.reviewAgent.enabled && github.copilot.chat.reviewDiff.enabled && scmProvider == git && scmResourceGroup == workingTree"}],"scm/inputBox":[{"command":"github.copilot.git.generateCommitMessage","when":"scmProvider == git"}],"testing/message/context":[{"command":"github.copilot.tests.fixTestFailure","when":"testing.testItemHasUri","group":"inline@1"}],"debug/createConfiguration":[{"command":"github.copilot.debug.generateConfiguration","group":"z_commands","when":"config.github.copilot.chat.startDebugging.enabled"}],"issue/reporter":[{"command":"github.copilot.report"}],"github.copilot.chat.debug.filter":[{"command":"github.copilot.chat.debug.showElements","when":"github.copilot.chat.debug.elementsHidden","group":"commands@0"},{"command":"github.copilot.chat.debug.hideElements","when":"!github.copilot.chat.debug.elementsHidden","group":"commands@0"},{"command":"github.copilot.chat.debug.showTools","when":"github.copilot.chat.debug.toolsHidden","group":"commands@1"},{"command":"github.copilot.chat.debug.hideTools","when":"!github.copilot.chat.debug.toolsHidden","group":"commands@1"},{"command":"github.copilot.chat.debug.showNesRequests","when":"github.copilot.chat.debug.nesRequestsHidden","group":"commands@2"},{"command":"github.copilot.chat.debug.hideNesRequests","when":"!github.copilot.chat.debug.nesRequestsHidden","group":"commands@2"}],"notebook/toolbar":[{"command":"github.copilot.chat.notebook.enableFollowCellExecution","when":"config.github.copilot.chat.notebook.followCellExecution.enabled && !github.copilot.notebookFollowInSessionEnabled && github.copilot.notebookAgentModeUsage && config.notebook.globalToolbar","group":"navigation/execute@15"},{"command":"github.copilot.chat.notebook.disableFollowCellExecution","when":"config.github.copilot.chat.notebook.followCellExecution.enabled && github.copilot.notebookFollowInSessionEnabled && github.copilot.notebookAgentModeUsage && config.notebook.globalToolbar","group":"navigation/execute@15"}],"editor/content":[{"command":"github.copilot.git.resolveMergeConflicts","group":"z_chat@1","when":"config.git.enabled && !git.missing && !isInDiffEditor && !isMergeEditor && resource in git.mergeChanges && git.activeResourceHasMergeConflicts"}]},"icons":{"copilot-logo":{"description":"GitHub Copilot icon","default":{"fontPath":"assets/copilot.woff","fontCharacter":"\\0041"}},"copilot-warning":{"description":"GitHub Copilot icon","default":{"fontPath":"assets/copilot.woff","fontCharacter":"\\0042"}},"copilot-notconnected":{"description":"GitHub Copilot icon","default":{"fontPath":"assets/copilot.woff","fontCharacter":"\\0043"}}},"iconFonts":[{"id":"copilot-font","src":[{"path":"assets/copilot.woff","format":"woff"}]}],"terminalQuickFixes":[{"id":"copilot-chat.fixWithCopilot","commandLineMatcher":".+","commandExitResult":"error","outputMatcher":{"anchor":"bottom","length":1,"lineMatcher":".+","offset":0},"kind":"explain"},{"id":"copilot-chat.generateCommitMessage","commandLineMatcher":"git add .+","commandExitResult":"success","kind":"explain","outputMatcher":{"anchor":"bottom","length":1,"lineMatcher":".+","offset":0}},{"id":"copilot-chat.terminalToDebugging","commandLineMatcher":".+","kind":"explain","commandExitResult":"error","outputMatcher":{"anchor":"bottom","length":1,"lineMatcher":"","offset":0}},{"id":"copilot-chat.terminalToDebuggingSuccess","commandLineMatcher":".+","kind":"explain","commandExitResult":"success","outputMatcher":{"anchor":"bottom","length":1,"lineMatcher":"","offset":0}}],"languages":[{"id":"ignore","filenamePatterns":[".copilotignore"],"aliases":[]},{"id":"markdown","extensions":[".copilotmd"]},{"id":"chatReplay","aliases":["chatReplay","Chat Replay"],"extensions":[".chatReplay.json",".chatreplay.json"]}],"views":{"copilot-chat":[{"id":"copilot-chat","name":"Chat Debug","icon":"assets/debug-icon.svg","when":"github.copilot.chat.showLogView"}],"context-inspector":[{"id":"context-inspector","name":"Language Context Inspector","icon":"$(inspect)","when":"github.copilot.chat.showContextInspectorView"}]},"viewsContainers":{"activitybar":[{"id":"copilot-chat","title":"Chat Debug","icon":"assets/debug-icon.svg"},{"id":"context-inspector","title":"Language Context Inspector","icon":"$(inspect)"}]},"configurationDefaults":{"workbench.editorAssociations":{"*.copilotmd":"vscode.markdown.preview.editor"}},"keybindings":[{"command":"github.copilot.chat.rerunWithCopilotDebug","key":"ctrl+alt+.","mac":"cmd+alt+.","when":"github.copilot-chat.activated && terminalShellIntegrationEnabled && terminalFocus && !terminalAltBufferActive"}],"walkthroughs":[{"id":"copilotWelcome","title":"GitHub Copilot","description":"Your AI pair programmer to write code faster and smarter","when":"!isWeb","steps":[{"id":"copilot.setup.signIn","title":"Sign in to use Copilot for free","description":"You can use Copilot to generate code across multiple files, fix errors, ask questions about your code and much more using natural language.\n We now offer [Copilot for free](https://github.com/features/copilot/plans) with your GitHub account.\n\n[Use Copilot for Free](command:workbench.action.chat.triggerSetupForceSignIn)","when":"chatEntitlementSignedOut && !view.workbench.panel.chat.view.copilot.visible && !github.copilot-chat.activated && !github.copilot.offline && !github.copilot.interactiveSession.individual.disabled && !github.copilot.interactiveSession.individual.expired && !github.copilot.interactiveSession.enterprise.disabled && !github.copilot.interactiveSession.contactSupport","media":{"video":{"dark":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/workspace.mp4","light":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/workspace-light.mp4","hc":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/workspace-hc.mp4","hcLight":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/workspace-hclight.mp4"},"altText":"The user invokes @workspace in the Chat panel in the secondary sidebar to understand the code base. Copilot retrieves the relevant information and provides a response with links to the files"}},{"id":"copilot.setup.signInNoAction","title":"Sign in to use Copilot for free","description":"You can use Copilot to generate code across multiple files, fix errors, ask questions about your code and much more using natural language.\n We now offer [Copilot for free](https://github.com/features/copilot/plans) with your GitHub account.","when":"chatEntitlementSignedOut && view.workbench.panel.chat.view.copilot.visible && !github.copilot-chat.activated && !github.copilot.offline && !github.copilot.interactiveSession.individual.disabled && !github.copilot.interactiveSession.individual.expired && !github.copilot.interactiveSession.enterprise.disabled && !github.copilot.interactiveSession.contactSupport","media":{"video":{"dark":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/workspace.mp4","light":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/workspace-light.mp4","hc":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/workspace-hc.mp4","hcLight":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/workspace-hclight.mp4"},"altText":"The user invokes @workspace in the Chat panel in the secondary sidebar to understand the code base. Copilot retrieves the relevant information and provides a response with links to the files"}},{"id":"copilot.setup.signUp","title":"Get started with Copilot for free","description":"You can use Copilot to generate code across multiple files, fix errors, ask questions about your code and much more using natural language.\n We now offer [Copilot for free](https://github.com/features/copilot/plans) with your GitHub account.\n\n[Use Copilot for Free](command:workbench.action.chat.triggerSetupForceSignIn)","when":"chatPlanCanSignUp && !view.workbench.panel.chat.view.copilot.visible && !github.copilot-chat.activated && !github.copilot.offline && (github.copilot.interactiveSession.individual.disabled || github.copilot.interactiveSession.individual.expired) && !github.copilot.interactiveSession.enterprise.disabled && !github.copilot.interactiveSession.contactSupport","media":{"video":{"dark":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/workspace.mp4","light":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/workspace-light.mp4","hc":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/workspace-hc.mp4","hcLight":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/workspace-hclight.mp4"},"altText":"The user invokes @workspace in the Chat panel in the secondary sidebar to understand the code base. Copilot retrieves the relevant information and provides a response with links to the files"}},{"id":"copilot.setup.signUpNoAction","title":"Get started with Copilot for free","description":"You can use Copilot to generate code across multiple files, fix errors, ask questions about your code and much more using natural language.\n We now offer [Copilot for free](https://github.com/features/copilot/plans) with your GitHub account.","when":"chatPlanCanSignUp && view.workbench.panel.chat.view.copilot.visible && !github.copilot-chat.activated && !github.copilot.offline && (github.copilot.interactiveSession.individual.disabled || github.copilot.interactiveSession.individual.expired) && !github.copilot.interactiveSession.enterprise.disabled && !github.copilot.interactiveSession.contactSupport","media":{"video":{"dark":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/workspace.mp4","light":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/workspace-light.mp4","hc":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/workspace-hc.mp4","hcLight":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/workspace-hclight.mp4"},"altText":"The user invokes @workspace in the Chat panel in the secondary sidebar to understand the code base. Copilot retrieves the relevant information and provides a response with links to the files"}},{"id":"copilot.panelChat","title":"Chat about your code","description":"Ask Copilot programming questions or get help with your code using **@workspace**.\n Type **@** to see all available chat participants that you can chat with directly, each with their own expertise.\n[Chat with Copilot](command:workbench.action.chat.open?%7B%22mode%22%3A%22ask%22%7D)","when":"!chatEntitlementSignedOut || chatIsEnabled ","media":{"video":{"dark":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/workspace.mp4","light":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/workspace-light.mp4","hc":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/workspace-hc.mp4","hcLight":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/workspace-hclight.mp4"},"altText":"The user invokes @workspace in the Chat panel in the secondary sidebar to understand the code base. Copilot retrieves the relevant information and provides a response with links to the files"}},{"id":"copilot.edits","title":"Make changes using natural language","description":"Use **Copilot Edits** to select files you want to work with and describe changes you want to make. Copilot applies them directly to your files.\n[Edit with Copilot](command:workbench.action.chat.open?%7B%22mode%22%3A%22edit%22%7D)","when":"!chatEntitlementSignedOut || chatIsEnabled ","media":{"video":{"dark":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/edits.mp4","light":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/edits-light.mp4","hc":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/edits-hc.mp4","hcLight":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/edits-hclight.mp4"},"altText":"The video shows the user dragging and dropping files into the Copilot Edits input box located in the secondary sidebar. Copilot then updates the file according to the user’s request"}},{"id":"copilot.firstSuggest","title":"AI-suggested code completions","description":"As you type in the editor, Copilot suggests code to help you complete what you started.","when":"!chatEntitlementSignedOut || chatIsEnabled ","media":{"video":{"dark":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/ghost-text.mp4","light":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/ghost-text-light.mp4","hc":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/ghost-text-hc.mp4","hcLight":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/ghost-text-hclight.mp4"},"altText":"The video shows different Copilot completions, where Copilot suggests code to help the user complete their code"}},{"id":"copilot.inlineChatNotMac","title":"Use natural language in your files","description":"Sometimes, it's easier to describe the code you want to write directly within a file.\nPlace your cursor or make a selection and use **``Ctrl+I``** to open **Inline Chat**.","when":"!isMac && (!chatEntitlementSignedOut || chatIsEnabled )","media":{"video":{"dark":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/inline.mp4","light":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/inline-light.mp4","hc":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/inline-hc.mp4","hcLight":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/inline-hclight.mp4"},"altText":"Inline Chat view in the editor. The video shows the user invoking the inline chat widget and asking Copilot to make a change in the file using natural language. Copilot then makes the requested change"}},{"id":"copilot.inlineChatMac","title":"Use natural language in your files","description":"Sometimes, it's easier to describe the code you want to write directly within a file.\nPlace your cursor or make a selection and use **``Cmd+I``** to open **Inline Chat**.","when":"isMac && (!chatEntitlementSignedOut || chatIsEnabled )","media":{"video":{"dark":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/inline.mp4","light":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/inline-light.mp4","hc":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/inline-hc.mp4","hcLight":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/inline-hclight.mp4"},"altText":"The video shows the user invoking the inline chat widget and asking Copilot to make a change in the file using natural language. Copilot then makes the requested change"}},{"id":"copilot.sparkle","title":"Look out for smart actions","description":"Copilot enhances your coding experience with AI-powered smart actions throughout the VS Code interface.\nLook for $(sparkle) icons, such as in the [Source Control view](command:workbench.view.scm), where Copilot generates commit messages and PR descriptions based on code changes.\n\n[Discover Tips and Tricks](https://code.visualstudio.com/docs/copilot/copilot-vscode-features)","when":"!chatEntitlementSignedOut || chatIsEnabled","media":{"video":{"dark":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/git-commit.mp4","light":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/git-commit-light.mp4","hc":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/git-commit-hc.mp4","hcLight":"https://vscodewalkthroughs.z1.web.core.windows.net/v0.26/git-commit-hclight.mp4"},"altText":"The video shows the sparkle icon in the source control input box being clicked, triggering GitHub Copilot to generate a commit message automatically"}}]}],"jsonValidation":[{"fileMatch":"settings.json","url":"ccsettings://root/schema.json"}],"typescriptServerPlugins":[{"name":"@vscode/copilot-typescript-server-plugin","enableForWorkspaceTypeScriptVersions":true}],"chatSessions":[{"type":"claude-code","name":"claude","displayName":"Claude Code","description":"The Claude Code agent","when":"config.github.copilot.chat.advanced.claudeCode.enabled","capabilities":{"supportsFileAttachments":true,"supportsToolAttachments":false},"commands":[{"name":"init","description":"Initialize a new CLAUDE.md file with codebase documentation"},{"name":"compact","description":"Clear conversation history but keep a summary in context. Optional: /compact [instructions for summarization]"},{"name":"pr-comments","description":"Get comments from a GitHub pull request"},{"name":"review","description":"Review a pull request"},{"name":"security-review","description":"Complete a security review of the pending changes on the current branch"}]}],"debuggers":[{"type":"vscode-chat-replay","label":"vscode-chat-replay","languages":["chatReplay"],"configurationAttributes":{"launch":{"properties":{"program":{"type":"string","description":"Chat replay file to debug (parse for headers)","default":"${file}"},"stopOnEntry":{"type":"boolean","default":true,"description":"Break immediately to step through manually."}},"required":["program"]}},"initialConfigurations":[{"type":"vscode-chat-replay","request":"launch","name":"Debug Chat Replay","program":"${file}","stopOnEntry":true}]}]},"extensionPack":["GitHub.copilot"],"prettier":{"useTabs":true,"tabWidth":4,"singleQuote":true},"overrides":{"@aminya/node-gyp-build":"npm:node-gyp-build@4.8.1","string_decoder":"npm:string_decoder@1.2.0","node-gyp":"npm:node-gyp@10.3.1"},"isPreRelease":false,"originalEnabledApiProposals":["extensionsAny","newSymbolNamesProvider","interactive","codeActionAI","activeComment","commentReveal","contribCommentThreadAdditionalMenu","contribCommentsViewThreadMenus","documentFiltersExclusive","embeddings","findTextInFiles","findTextInFiles2","findFiles2@2","textSearchProvider","terminalDataWriteEvent","terminalExecuteCommandEvent","terminalSelection","terminalQuickFixProvider","mappedEditsProvider","aiRelatedInformation","aiSettingsSearch","chatParticipantAdditions","chatEditing","defaultChatParticipant@4","contribSourceControlInputBoxMenu","authLearnMore","testObserver","aiTextSearchProvider@2","chatParticipantPrivate@10","chatProvider@4","contribDebugCreateConfiguration","chatReferenceDiagnostic","textSearchProvider2","chatReferenceBinaryData","languageModelSystem","languageModelCapabilities","inlineCompletionsAdditions","languageModelDataPart@3","chatStatusItem","taskProblemMatcherStatus","contribLanguageModelToolSets","textDocumentChangeReason","resolvers","taskExecutionTerminal","dataChannels","languageModelThinkingPart","chatSessionsProvider@2","devDeviceId","contribEditorContentMenu"]},"location":{"$mid":1,"path":"/home/usainzg/.vscode/extensions/github.copilot-chat-0.32.3","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"GitHub","metadata":{"isApplicationScoped":true,"isMachineScoped":false,"isBuiltin":false,"installedTimestamp":1761027233160,"pinned":false,"source":"gallery","id":"7ec7d6e6-b89e-4cc5-a59b-d6c4d238246f","publisherId":"7c1c19cd-78eb-4dfb-8999-99caf7679002","publisherDisplayName":"GitHub","targetPlatform":"undefined","updated":true,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"preRelease":false,"size":39739238},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"ms-python.python","uuid":"f1f59ae4-9318-4f3c-a9b5-81b2eaa5f8a5"},"manifest":{"name":"python","displayName":"Python","description":"Python language support with extension access points for IntelliSense (Pylance), Debugging (Python Debugger), linting, formatting, refactoring, unit tests, and more.","version":"2025.16.0","featureFlags":{"usingNewInterpreterStorage":true},"capabilities":{"untrustedWorkspaces":{"supported":false,"description":"The Python extension is not available in untrusted workspaces. Use Pylance to get partial IntelliSense support for Python files."},"virtualWorkspaces":{"supported":"limited","description":"Only Partial IntelliSense supported."}},"publisher":"ms-python","enabledApiProposals":["contribEditorContentMenu","quickPickSortByLabel","testObserver","quickPickItemTooltip","terminalDataWriteEvent","terminalExecuteCommandEvent","codeActionAI","notebookReplDocument","notebookVariableProvider"],"author":{"name":"Microsoft Corporation"},"license":"MIT","homepage":"https://github.com/Microsoft/vscode-python","repository":{"type":"git","url":"https://github.com/Microsoft/vscode-python"},"bugs":{"url":"https://github.com/Microsoft/vscode-python/issues"},"qna":"https://github.com/microsoft/vscode-python/discussions/categories/q-a","icon":"icon.png","galleryBanner":{"color":"#1e415e","theme":"dark"},"engines":{"vscode":"^1.95.0"},"enableTelemetry":true,"keywords":["python","django","unittest","multi-root ready"],"categories":["Programming Languages","Debuggers","Other","Data Science","Machine Learning"],"activationEvents":["onDebugInitialConfigurations","onLanguage:python","onDebugResolve:python","onCommand:python.copilotSetupTests","workspaceContains:mspythonconfig.json","workspaceContains:pyproject.toml","workspaceContains:Pipfile","workspaceContains:setup.py","workspaceContains:requirements.txt","workspaceContains:pylock.toml","workspaceContains:**/pylock.*.toml","workspaceContains:manage.py","workspaceContains:app.py","workspaceContains:.venv","workspaceContains:.conda","onLanguageModelTool:get_python_environment_details","onLanguageModelTool:get_python_executable_details","onLanguageModelTool:install_python_packages","onLanguageModelTool:configure_python_environment","onLanguageModelTool:create_virtual_environment","onTerminalShellIntegration:python"],"main":"./out/client/extension","browser":"./dist/extension.browser.js","l10n":"./l10n","contributes":{"problemMatchers":[{"name":"python","owner":"python","source":"python","fileLocation":"autoDetect","pattern":[{"regexp":"^.*File \\\"([^\\\"]|.*)\\\", line (\\d+).*","file":1,"line":2},{"regexp":"^\\s*(.*)\\s*$"},{"regexp":"^\\s*(.*Error.*)$","message":1}]}],"walkthroughs":[{"id":"pythonWelcome","title":"Get Started with Python Development","description":"Your first steps to set up a Python project with all the powerful tools and features that the Python extension has to offer!","when":"workspacePlatform != webworker","steps":[{"id":"python.createPythonFolder","title":"Open a Python project folder","description":"[Open](command:workbench.action.files.openFolder) or create a project folder.\n[Open Project Folder](command:workbench.action.files.openFolder)","media":{"svg":"resources/walkthrough/open-folder.svg","altText":"Open a Python file or a folder with a Python project."},"when":"workspaceFolderCount = 0"},{"id":"python.createPythonFile","title":"Create a Python file","description":"[Open](command:toSide:workbench.action.files.openFile) or [create](command:toSide:workbench.action.files.newUntitledFile?%7B%22languageId%22%3A%22python%22%7D) a Python file - make sure to save it as \".py\".\n[Create Python File](command:toSide:workbench.action.files.newUntitledFile?%7B%22languageId%22%3A%22python%22%7D)","media":{"svg":"resources/walkthrough/open-folder.svg","altText":"Open a Python file or a folder with a Python project."}},{"id":"python.installPythonWin8","title":"Install Python","description":"The Python Extension requires Python to be installed. Install Python [from python.org](https://www.python.org/downloads).\n\n[Install Python](https://www.python.org/downloads)\n","media":{"markdown":"resources/walkthrough/install-python-windows-8.md"},"when":"workspacePlatform == windows && showInstallPythonTile"},{"id":"python.installPythonMac","title":"Install Python","description":"The Python Extension requires Python to be installed. Install Python 3 through the terminal.\n[Install Python via Brew](command:python.installPythonOnMac)\n","media":{"markdown":"resources/walkthrough/install-python-macos.md"},"when":"workspacePlatform == mac && showInstallPythonTile","command":"workbench.action.terminal.new"},{"id":"python.installPythonLinux","title":"Install Python","description":"The Python Extension requires Python to be installed. Install Python 3 through the terminal.\n[Install Python via terminal](command:python.installPythonOnLinux)\n","media":{"markdown":"resources/walkthrough/install-python-linux.md"},"when":"workspacePlatform == linux && showInstallPythonTile","command":"workbench.action.terminal.new"},{"id":"python.createEnvironment","title":"Select or create a Python environment","description":"Create an environment for your Python project or use [Select Python Interpreter](command:python.setInterpreter) to select an existing one.\n[Create Environment](command:python.createEnvironment)\n**Tip**: Run the ``Python: Create Environment`` command in the [Command Palette](command:workbench.action.showCommands).","media":{"svg":"resources/walkthrough/create-environment.svg","altText":"Creating a Python environment from the Command Palette"}},{"id":"python.runAndDebug","title":"Run and debug your Python file","description":"Open your Python file  and click on the play button on the top right of the editor, or press F5 when on the file and select \"Python File\" to run with the debugger. \n  \n[Learn more](https://code.visualstudio.com/docs/python/python-tutorial#_run-hello-world)","media":{"svg":"resources/walkthrough/rundebug2.svg","altText":"How to run and debug in VS Code with F5 or the play button on the top right."}},{"id":"python.learnMoreWithDS","title":"Keep exploring!","description":"🎨 Explore all the features the Python extension has to offer by looking for \"Python\" in the [Command Palette](command:workbench.action.showCommands). \n 📈 Learn more about getting started with [data science](command:workbench.action.openWalkthrough?%7B%22category%22%3A%22ms-python.python%23pythonDataScienceWelcome%22%2C%22step%22%3A%22ms-python.python%23python.createNewNotebook%22%7D) in Python. \n ✨ Take a look at our [Release Notes](https://aka.ms/AA8dxtb) to learn more about the latest features. \n \n[Follow along with the Python Tutorial](https://aka.ms/AA8dqti)","media":{"altText":"Image representing our documentation page and mailing list resources.","svg":"resources/walkthrough/learnmore.svg"}}]},{"id":"pythonDataScienceWelcome","title":"Get Started with Python for Data Science","description":"Your first steps to getting started with a Data Science project with Python!","when":"false","steps":[{"id":"python.installJupyterExt","title":"Install Jupyter extension","description":"If you haven't already, install the [Jupyter extension](command:workbench.extensions.search?\"ms-toolsai.jupyter\") to take full advantage of notebooks experiences in VS Code!\n \n[Search Jupyter extension](command:workbench.extensions.search?\"ms-toolsai.jupyter\")","media":{"svg":"resources/walkthrough/data-science.svg","altText":"Creating a new Jupyter notebook"}},{"id":"python.createNewNotebook","title":"Create or open a Jupyter Notebook","description":"Right click in the file explorer and create a new file with an .ipynb extension. Or, open the [Command Palette](command:workbench.action.showCommands) and run the command \n``Jupyter: Create New Blank Notebook``.\n[Create new Jupyter Notebook](command:toSide:jupyter.createnewnotebook)\n If you have an existing project, you can also [open a folder](command:workbench.action.files.openFolder) and/or clone a project from GitHub: [clone a Git repository](command:git.clone).","media":{"svg":"resources/walkthrough/create-notebook.svg","altText":"Creating a new Jupyter notebook"},"completionEvents":["onCommand:jupyter.createnewnotebook","onCommand:workbench.action.files.openFolder","onCommand:workbench.action.files.openFileFolder"]},{"id":"python.openInteractiveWindow","title":"Open the Python Interactive Window","description":"The Python Interactive Window is a Python shell where you can execute and view the results of your Python code. You can create cells on a Python file by typing ``#%%``.\n \nTo open the interactive window anytime, open the [Command Palette](command:workbench.action.showCommands) and run the command \n``Jupyter: Create Interactive Window``.\n[Open Interactive Window](command:jupyter.createnewinteractive)","media":{"svg":"resources/walkthrough/interactive-window.svg","altText":"Opening Python interactive window"},"completionEvents":["onCommand:jupyter.createnewinteractive"]},{"id":"python.dataScienceLearnMore","title":"Find out more!","description":"📒 Take a look into the [Jupyter extension](command:workbench.extensions.search?\"ms-toolsai.jupyter\") features, by looking for \"Jupyter\" in the [Command Palette](command:workbench.action.showCommands). \n 🏃🏻 Find out more features in our [Tutorials](https://aka.ms/AAdjzpd).  \n[Learn more](https://aka.ms/AAdar6q)","media":{"svg":"resources/walkthrough/learnmore.svg","altText":"Image representing our documentation page and mailing list resources."}}]}],"breakpoints":[{"language":"html"},{"language":"jinja"},{"language":"python"},{"language":"django-html"},{"language":"django-txt"}],"commands":[{"title":"New Python File","shortTitle":"Python File","category":"Python","command":"python.createNewFile"},{"category":"Python","command":"python.copyTestId","title":"Copy Test Id"},{"category":"Python","command":"python.analysis.restartLanguageServer","title":"Restart Language Server"},{"category":"Python","command":"python.clearCacheAndReload","title":"Clear Cache and Reload Window"},{"category":"Python","command":"python.clearWorkspaceInterpreter","title":"Clear Workspace Interpreter Setting"},{"category":"Python","command":"python.configureTests","title":"Configure Tests"},{"category":"Python","command":"python.createTerminal","title":"Create Terminal"},{"category":"Python","command":"python.createEnvironment","title":"Create Environment..."},{"category":"Python","command":"python.createEnvironment-button","title":"Create Environment..."},{"category":"Python","command":"python.execInTerminal","title":"Run Python File in Terminal"},{"category":"Python","command":"python.execInTerminal-icon","icon":"$(play)","title":"Run Python File"},{"category":"Python","command":"python.execInDedicatedTerminal","icon":"$(play)","title":"Run Python File in Dedicated Terminal"},{"category":"Python","command":"python.execSelectionInDjangoShell","title":"Run Selection/Line in Django Shell"},{"category":"Python","command":"python.execSelectionInTerminal","title":"Run Selection/Line in Python Terminal","shortTitle":"Run Selection/Line"},{"category":"Python","command":"python.execInREPL","title":"Run Selection/Line in Native Python REPL"},{"category":"Python","command":"python.reportIssue","title":"Report Issue..."},{"category":"Test","command":"testing.reRunFailTests","icon":"$(run-errors)","title":"Rerun Failed Tests"},{"category":"Python","command":"python.setInterpreter","title":"Select Interpreter"},{"category":"Python","command":"python.startREPL","title":"Start Terminal REPL"},{"category":"Python","command":"python.startNativeREPL","title":"Start Native Python REPL"},{"category":"Python","command":"python.viewLanguageServerOutput","enablement":"python.hasLanguageServerOutputChannel","title":"Show Language Server Output"},{"category":"Python","command":"python.viewOutput","icon":{"dark":"resources/dark/repl.svg","light":"resources/light/repl.svg"},"title":"Show Output"},{"category":"Python","command":"python.installJupyter","title":"Install the Jupyter extension"}],"configuration":{"properties":{"python.activeStateToolPath":{"default":"state","description":"Path to the State Tool executable for ActiveState runtimes (version 0.36+).","scope":"machine-overridable","type":"string"},"python.autoComplete.extraPaths":{"default":[],"description":"List of paths to libraries and the like that need to be imported by auto complete engine. E.g. when using Google App SDK, the paths are not in system path, hence need to be added into this list.","scope":"resource","type":"array","uniqueItems":true},"python.createEnvironment.contentButton":{"default":"hide","markdownDescription":"Show or hide Create Environment button in the editor for `requirements.txt` or other dependency files.","scope":"machine-overridable","type":"string","enum":["show","hide"]},"python.createEnvironment.trigger":{"default":"prompt","markdownDescription":"Detect if environment creation is required for the current project","scope":"machine-overridable","type":"string","enum":["off","prompt"]},"python.condaPath":{"default":"","description":"Path to the conda executable to use for activation (version 4.4+).","scope":"machine","type":"string"},"python.defaultInterpreterPath":{"default":"python","markdownDescription":"Path to default Python to use when extension loads up for the first time, no longer used once an interpreter is selected for the workspace. See [here](https://aka.ms/AAfekmf) to understand when this is used","scope":"machine-overridable","type":"string"},"python.envFile":{"default":"${workspaceFolder}/.env","description":"Absolute path to a file containing environment variable definitions.","scope":"resource","type":"string"},"python.useEnvironmentsExtension":{"default":false,"description":"Enables the Python Environments extension. Requires window reload on change.","scope":"machine-overridable","type":"boolean","tags":["onExP","preview"]},"python.experiments.enabled":{"default":true,"description":"Enables A/B tests experiments in the Python extension. If enabled, you may get included in proposed enhancements and/or features.","scope":"window","type":"boolean"},"python.experiments.optInto":{"default":[],"markdownDescription":"List of experiments to opt into. If empty, user is assigned the default experiment groups. See [here](https://github.com/microsoft/vscode-python/wiki/AB-Experiments) for more details.","items":{"enum":["All","pythonSurveyNotification","pythonPromptNewToolsExt","pythonTerminalEnvVarActivation","pythonDiscoveryUsingWorkers","pythonTestAdapter"],"enumDescriptions":["Combined list of all experiments.","Denotes the Python Survey Notification experiment.","Denotes the Python Prompt New Tools Extension experiment.","Enables use of environment variables to activate terminals instead of sending activation commands.","Enables use of worker threads to do heavy computation when discovering interpreters.","Denotes the Python Test Adapter experiment."]},"scope":"window","type":"array","uniqueItems":true},"python.experiments.optOutFrom":{"default":[],"markdownDescription":"List of experiments to opt out of. If empty, user is assigned the default experiment groups. See [here](https://github.com/microsoft/vscode-python/wiki/AB-Experiments) for more details.","items":{"enum":["All","pythonSurveyNotification","pythonPromptNewToolsExt","pythonTerminalEnvVarActivation","pythonDiscoveryUsingWorkers","pythonTestAdapter"],"enumDescriptions":["Combined list of all experiments.","Denotes the Python Survey Notification experiment.","Denotes the Python Prompt New Tools Extension experiment.","Enables use of environment variables to activate terminals instead of sending activation commands.","Enables use of worker threads to do heavy computation when discovering interpreters.","Denotes the Python Test Adapter experiment."]},"scope":"window","type":"array","uniqueItems":true},"python.globalModuleInstallation":{"default":false,"description":"Whether to install Python modules globally when not using an environment.","scope":"resource","type":"boolean"},"python.languageServer":{"default":"Default","description":"Defines type of the language server.","enum":["Default","Jedi","Pylance","None"],"enumDescriptions":["Automatically select a language server: Pylance if installed and available, otherwise fallback to Jedi.","Use Jedi behind the Language Server Protocol (LSP) as a language server.","Use Pylance as a language server.","Disable language server capabilities."],"scope":"window","type":"string"},"python.interpreter.infoVisibility":{"default":"onPythonRelated","description":"Controls when to display information of selected interpreter in the status bar.","enum":["never","onPythonRelated","always"],"enumDescriptions":["Never display information.","Only display information if Python-related files are opened.","Always display information."],"scope":"machine","type":"string"},"python.logging.level":{"default":"error","deprecationMessage":"This setting is deprecated. Please use command `Developer: Set Log Level...` to set logging level.","description":"The logging level the extension logs at, defaults to 'error'","enum":["debug","error","info","off","warn"],"scope":"machine","type":"string"},"python.missingPackage.severity":{"default":"Hint","description":"Set severity of missing packages in requirements.txt or pyproject.toml","enum":["Error","Hint","Information","Warning"],"scope":"resource","type":"string"},"python.locator":{"default":"js","description":"[Experimental] Select implementation of environment locators. This is an experimental setting while we test native environment location.","enum":["js","native"],"tags":["onExP","preview"],"scope":"machine","type":"string"},"python.pipenvPath":{"default":"pipenv","description":"Path to the pipenv executable to use for activation.","scope":"machine-overridable","type":"string"},"python.poetryPath":{"default":"poetry","description":"Path to the poetry executable.","scope":"machine-overridable","type":"string"},"python.pixiToolPath":{"default":"pixi","description":"Path to the pixi executable.","scope":"machine-overridable","type":"string"},"python.terminal.activateEnvInCurrentTerminal":{"default":false,"description":"Activate Python Environment in the current Terminal on load of the Extension.","scope":"resource","type":"boolean"},"python.terminal.activateEnvironment":{"default":true,"description":"Activate Python Environment in all Terminals created.","scope":"resource","type":"boolean"},"python.terminal.executeInFileDir":{"default":false,"description":"When executing a file in the terminal, whether to use execute in the file's directory, instead of the current open folder.","scope":"resource","type":"boolean"},"python.terminal.focusAfterLaunch":{"default":false,"description":"When launching a python terminal, whether to focus the cursor on the terminal.","scope":"resource","type":"boolean"},"python.terminal.launchArgs":{"default":[],"description":"Python launch arguments to use when executing a file in the terminal.","scope":"resource","type":"array"},"python.terminal.shellIntegration.enabled":{"default":true,"markdownDescription":"Enable [shell integration](https://code.visualstudio.com/docs/terminal/shell-integration) for the terminals running python. Shell integration enhances the terminal experience by enabling command decorations, run recent command, improving accessibility among other things. Note: PyREPL (available in Python 3.13+) is automatically disabled when shell integration is enabled to avoid cursor indentation issues.","scope":"resource","type":"boolean","tags":["preview"]},"python.REPL.enableREPLSmartSend":{"default":true,"description":"Toggle Smart Send for the Python REPL. Smart Send enables sending the smallest runnable block of code to the REPL on Shift+Enter and moves the cursor accordingly.","scope":"resource","type":"boolean"},"python.REPL.sendToNativeREPL":{"default":false,"description":"Toggle to send code to Python REPL instead of the terminal on execution. Turning this on will change the behavior for both Smart Send and Run Selection/Line in the Context Menu.","scope":"resource","type":"boolean"},"python.REPL.provideVariables":{"default":true,"description":"Toggle to provide variables for the REPL variable view for the native REPL.","scope":"resource","type":"boolean"},"python.testing.autoTestDiscoverOnSaveEnabled":{"default":true,"description":"Enable auto run test discovery when saving a test file.","scope":"resource","type":"boolean"},"python.testing.autoTestDiscoverOnSavePattern":{"default":"**/*.py","description":"Glob pattern used to determine which files are used by autoTestDiscoverOnSaveEnabled.","scope":"resource","type":"string"},"python.testing.cwd":{"default":null,"description":"Optional working directory for tests.","scope":"resource","type":"string"},"python.testing.debugPort":{"default":3000,"description":"Port number used for debugging of tests.","scope":"resource","type":"number"},"python.testing.promptToConfigure":{"default":true,"description":"Prompt to configure a test framework if potential tests directories are discovered.","scope":"resource","type":"boolean"},"python.testing.pytestArgs":{"default":[],"description":"Arguments passed in. Each argument is a separate item in the array.","items":{"type":"string"},"scope":"resource","type":"array"},"python.testing.pytestEnabled":{"default":false,"description":"Enable testing using pytest.","scope":"resource","type":"boolean"},"python.testing.pytestPath":{"default":"pytest","description":"Path to pytest. You can use a custom version of pytest by modifying this setting to include the full path.","scope":"machine-overridable","type":"string"},"python.testing.unittestArgs":{"default":["-v","-s",".","-p","*test*.py"],"description":"Arguments passed in. Each argument is a separate item in the array.","items":{"type":"string"},"scope":"resource","type":"array"},"python.testing.unittestEnabled":{"default":false,"description":"Enable testing using unittest.","scope":"resource","type":"boolean"},"python.venvFolders":{"default":[],"description":"Folders in your home directory to look into for virtual environments (supports pyenv, direnv and virtualenvwrapper by default).","items":{"type":"string"},"scope":"machine","type":"array","uniqueItems":true},"python.venvPath":{"default":"","description":"Path to folder with a list of Virtual Environments (e.g. ~/.pyenv, ~/Envs, ~/.virtualenvs).","scope":"machine","type":"string"}},"title":"Python","type":"object"},"debuggers":[{"configurationAttributes":{"attach":{"properties":{"connect":{"label":"Attach by connecting to debugpy over a socket.","properties":{"host":{"default":"127.0.0.1","description":"Hostname or IP address to connect to.","type":"string"},"port":{"description":"Port to connect to.","type":"number"}},"required":["port"],"type":"object"},"debugAdapterPath":{"description":"Path (fully qualified) to the python debug adapter executable.","type":"string"},"django":{"default":false,"description":"Django debugging.","type":"boolean"},"host":{"default":"127.0.0.1","description":"Hostname or IP address to connect to.","type":"string"},"jinja":{"default":null,"description":"Jinja template debugging (e.g. Flask).","enum":[false,null,true]},"justMyCode":{"default":true,"description":"If true, show and debug only user-written code. If false, show and debug all code, including library calls.","type":"boolean"},"listen":{"label":"Attach by listening for incoming socket connection from debugpy","properties":{"host":{"default":"127.0.0.1","description":"Hostname or IP address of the interface to listen on.","type":"string"},"port":{"description":"Port to listen on.","type":"number"}},"required":["port"],"type":"object"},"logToFile":{"default":false,"description":"Enable logging of debugger events to a log file.","type":"boolean"},"pathMappings":{"default":[],"items":{"label":"Path mapping","properties":{"localRoot":{"default":"${workspaceFolder}","label":"Local source root.","type":"string"},"remoteRoot":{"default":"","label":"Remote source root.","type":"string"}},"required":["localRoot","remoteRoot"],"type":"object"},"label":"Path mappings.","type":"array"},"port":{"description":"Port to connect to.","type":"number"},"processId":{"anyOf":[{"default":"${command:pickProcess}","description":"Use process picker to select a process to attach, or Process ID as integer.","enum":["${command:pickProcess}"]},{"description":"ID of the local process to attach to.","type":"integer"}]},"redirectOutput":{"default":true,"description":"Redirect output.","type":"boolean"},"showReturnValue":{"default":true,"description":"Show return value of functions when stepping.","type":"boolean"},"subProcess":{"default":false,"description":"Whether to enable Sub Process debugging","type":"boolean"}}},"launch":{"properties":{"args":{"default":[],"description":"Command line arguments passed to the program.","items":{"type":"string"},"type":["array","string"]},"autoReload":{"default":{},"description":"Configures automatic reload of code on edit.","properties":{"enable":{"default":false,"description":"Automatically reload code on edit.","type":"boolean"},"exclude":{"default":["**/.git/**","**/.metadata/**","**/__pycache__/**","**/node_modules/**","**/site-packages/**"],"description":"Glob patterns of paths to exclude from auto reload.","items":{"type":"string"},"type":"array"},"include":{"default":["**/*.py","**/*.pyw"],"description":"Glob patterns of paths to include in auto reload.","items":{"type":"string"},"type":"array"}},"type":"object"},"console":{"default":"integratedTerminal","description":"Where to launch the debug target: internal console, integrated terminal, or external terminal.","enum":["externalTerminal","integratedTerminal","internalConsole"]},"consoleTitle":{"default":"Python Debug Console","description":"Display name of the debug console or terminal"},"cwd":{"default":"${workspaceFolder}","description":"Absolute path to the working directory of the program being debugged. Default is the root directory of the file (leave empty).","type":"string"},"debugAdapterPath":{"description":"Path (fully qualified) to the python debug adapter executable.","type":"string"},"django":{"default":false,"description":"Django debugging.","type":"boolean"},"env":{"additionalProperties":{"type":"string"},"default":{},"description":"Environment variables defined as a key value pair. Property ends up being the Environment Variable and the value of the property ends up being the value of the Env Variable.","type":"object"},"envFile":{"default":"${workspaceFolder}/.env","description":"Absolute path to a file containing environment variable definitions.","type":"string"},"gevent":{"default":false,"description":"Enable debugging of gevent monkey-patched code.","type":"boolean"},"host":{"default":"localhost","description":"IP address of the of the local debug server (default is localhost).","type":"string"},"jinja":{"default":null,"description":"Jinja template debugging (e.g. Flask).","enum":[false,null,true]},"justMyCode":{"default":true,"description":"Debug only user-written code.","type":"boolean"},"logToFile":{"default":false,"description":"Enable logging of debugger events to a log file.","type":"boolean"},"module":{"default":"","description":"Name of the module to be debugged.","type":"string"},"pathMappings":{"default":[],"items":{"label":"Path mapping","properties":{"localRoot":{"default":"${workspaceFolder}","label":"Local source root.","type":"string"},"remoteRoot":{"default":"","label":"Remote source root.","type":"string"}},"required":["localRoot","remoteRoot"],"type":"object"},"label":"Path mappings.","type":"array"},"port":{"default":0,"description":"Debug port (default is 0, resulting in the use of a dynamic port).","type":"number"},"program":{"default":"${file}","description":"Absolute path to the program.","type":"string"},"purpose":{"default":[],"description":"Tells extension to use this configuration for test debugging, or when using debug-in-terminal command.","items":{"enum":["debug-test","debug-in-terminal"],"enumDescriptions":["Use this configuration while debugging tests using test view or test debug commands.","Use this configuration while debugging a file using debug in terminal button in the editor."]},"type":"array"},"pyramid":{"default":false,"description":"Whether debugging Pyramid applications","type":"boolean"},"python":{"default":"${command:python.interpreterPath}","description":"Absolute path to the Python interpreter executable; overrides workspace configuration if set.","type":"string"},"pythonArgs":{"default":[],"description":"Command-line arguments passed to the Python interpreter. To pass arguments to the debug target, use \"args\".","items":{"type":"string"},"type":"array"},"redirectOutput":{"default":true,"description":"Redirect output.","type":"boolean"},"showReturnValue":{"default":true,"description":"Show return value of functions when stepping.","type":"boolean"},"stopOnEntry":{"default":false,"description":"Automatically stop after launch.","type":"boolean"},"subProcess":{"default":false,"description":"Whether to enable Sub Process debugging","type":"boolean"},"sudo":{"default":false,"description":"Running debug program under elevated permissions (on Unix).","type":"boolean"}}}},"deprecated":"This configuration will be deprecated soon. Please replace `python` with `debugpy` to use the new Python Debugger extension.","configurationSnippets":[],"label":"Python","languages":["python"],"type":"python","variables":{"pickProcess":"python.pickLocalProcess"},"when":"!virtualWorkspace && shellExecutionSupported","hiddenWhen":"true"}],"grammars":[{"language":"pip-requirements","path":"./syntaxes/pip-requirements.tmLanguage.json","scopeName":"source.pip-requirements"}],"jsonValidation":[{"fileMatch":".condarc","url":"./schemas/condarc.json"},{"fileMatch":"environment.yml","url":"./schemas/conda-environment.json"},{"fileMatch":"meta.yaml","url":"./schemas/conda-meta.json"}],"keybindings":[{"command":"python.execSelectionInTerminal","key":"shift+enter","when":"editorTextFocus && editorLangId == python && !findInputFocussed && !replaceInputFocussed && !jupyter.ownsSelection && !notebookEditorFocused && !isCompositeNotebook"},{"command":"python.execInREPL","key":"shift+enter","when":"config.python.REPL.sendToNativeREPL && editorLangId == python && editorTextFocus && !jupyter.ownsSelection && !notebookEditorFocused && !isCompositeNotebook"},{"command":"python.execInREPLEnter","key":"enter","when":"!config.interactiveWindow.executeWithShiftEnter && isCompositeNotebook && activeEditor == 'workbench.editor.repl' && !inlineChatFocused && !notebookCellListFocused"},{"command":"python.execInInteractiveWindowEnter","key":"enter","when":"!config.interactiveWindow.executeWithShiftEnter && isCompositeNotebook && activeEditor == 'workbench.editor.interactive' && !inlineChatFocused && !notebookCellListFocused"}],"languages":[{"aliases":["Jinja"],"extensions":[".j2",".jinja2"],"id":"jinja"},{"aliases":["pip requirements","requirements.txt"],"configuration":"./languages/pip-requirements.json","filenamePatterns":["**/*requirements*.{txt, in}","**/*constraints*.txt","**/requirements/*.{txt,in}","**/constraints/*.txt"],"filenames":["constraints.txt","requirements.in","requirements.txt"],"id":"pip-requirements"},{"filenames":[".condarc"],"id":"yaml"},{"filenames":[".flake8",".pep8",".pylintrc",".pypirc"],"id":"ini"},{"filenames":["Pipfile","poetry.lock","uv.lock"],"id":"toml"},{"filenames":["Pipfile.lock"],"id":"json"}],"menus":{"issue/reporter":[{"command":"python.reportIssue"}],"testing/item/context":[{"command":"python.copyTestId","group":"navigation","when":"controllerId == 'python-tests'"}],"testing/item/gutter":[{"command":"python.copyTestId","group":"navigation","when":"controllerId == 'python-tests'"}],"commandPalette":[{"category":"Python","command":"python.analysis.restartLanguageServer","title":"Restart Language Server","when":"!virtualWorkspace && shellExecutionSupported && (editorLangId == python || notebookType == jupyter-notebook)"},{"category":"Python","command":"python.clearCacheAndReload","title":"Clear Cache and Reload Window","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.clearWorkspaceInterpreter","title":"Clear Workspace Interpreter Setting","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.configureTests","title":"Configure Tests","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.createEnvironment","title":"Create Environment...","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.createEnvironment-button","title":"Create Environment...","when":"false"},{"category":"Python","command":"python.createTerminal","title":"Create Terminal","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.execInTerminal","title":"Run Python File in Terminal","when":"!virtualWorkspace && shellExecutionSupported && editorLangId == python"},{"category":"Python","command":"python.execInTerminal-icon","icon":"$(play)","title":"Run Python File","when":"false"},{"category":"Python","command":"python.execInDedicatedTerminal","icon":"$(play)","title":"Run Python File in Dedicated Terminal","when":"false"},{"category":"Python","command":"python.execSelectionInDjangoShell","title":"Run Selection/Line in Django Shell","when":"!virtualWorkspace && shellExecutionSupported && editorLangId == python"},{"category":"Python","command":"python.execSelectionInTerminal","title":"Run Selection/Line in Python Terminal","when":"!virtualWorkspace && shellExecutionSupported && editorLangId == python"},{"category":"Python","command":"python.copyTestId","title":"Copy Test Id","when":"false"},{"category":"Python","command":"python.execInREPL","title":"Run Selection/Line in Native Python REPL","when":"false"},{"category":"Python","command":"python.reportIssue","title":"Report Issue...","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Test","command":"testing.reRunFailTests","icon":"$(run-errors)","title":"Rerun Failed Tests","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.setInterpreter","title":"Select Interpreter","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.startREPL","title":"Start Terminal REPL","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.startNativeREPL","title":"Start Native Python REPL","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.viewLanguageServerOutput","enablement":"python.hasLanguageServerOutputChannel","title":"Show Language Server Output","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.viewOutput","title":"Show Output","when":"!virtualWorkspace && shellExecutionSupported"}],"editor/content":[{"group":"Python","command":"python.createEnvironment-button","when":"showCreateEnvButton && resourceLangId == pip-requirements && !virtualWorkspace && shellExecutionSupported && !inDiffEditor && !isMergeResultEditor && pythonDepsNotInstalled"},{"group":"Python","command":"python.createEnvironment-button","when":"showCreateEnvButton && resourceFilename == pyproject.toml && pipInstallableToml && !virtualWorkspace && shellExecutionSupported  && !inDiffEditor && !isMergeResultEditor && pythonDepsNotInstalled"}],"editor/context":[{"submenu":"python.run","group":"Python","when":"editorLangId == python && !virtualWorkspace && shellExecutionSupported && isWorkspaceTrusted && !inChat  && notebookType != jupyter-notebook"},{"submenu":"python.runFileInteractive","group":"Jupyter2","when":"editorLangId == python && !virtualWorkspace && shellExecutionSupported && !isJupyterInstalled && isWorkspaceTrusted && !inChat"}],"python.runFileInteractive":[{"command":"python.installJupyter","group":"Jupyter2","when":"resourceLangId == python && !virtualWorkspace && shellExecutionSupported"}],"python.run":[{"command":"python.execInTerminal","group":"Python","when":"resourceLangId == python && !virtualWorkspace && shellExecutionSupported"},{"command":"python.execSelectionInDjangoShell","group":"Python","when":"editorHasSelection && editorLangId == python && python.isDjangoProject && !virtualWorkspace && shellExecutionSupported"},{"command":"python.execSelectionInTerminal","group":"Python","when":"!config.python.REPL.sendToNativeREPL && editorFocus && editorLangId == python && !virtualWorkspace && shellExecutionSupported"},{"command":"python.execInREPL","group":"Python","when":"editorFocus && editorLangId == python && !virtualWorkspace && shellExecutionSupported && config.python.REPL.sendToNativeREPL"}],"editor/title/run":[{"command":"python.execInTerminal-icon","group":"navigation@0","title":"Run Python File","when":"resourceLangId == python && !isInDiffEditor && !virtualWorkspace && shellExecutionSupported"},{"command":"python.execInDedicatedTerminal","group":"navigation@0","title":"Run Python File in Dedicated Terminal","when":"resourceLangId == python && !isInDiffEditor && !virtualWorkspace && shellExecutionSupported"}],"explorer/context":[{"command":"python.execInTerminal","group":"Python","when":"resourceLangId == python && !virtualWorkspace && shellExecutionSupported"}],"file/newFile":[{"command":"python.createNewFile","group":"file","when":"!virtualWorkspace"}],"view/title":[{"command":"testing.reRunFailTests","when":"view == workbench.view.testing && hasFailedTests && !virtualWorkspace && shellExecutionSupported","group":"navigation@1"}]},"submenus":[{"id":"python.run","label":"Run Python","icon":"$(play)"},{"id":"python.runFileInteractive","label":"Run in Interactive window"}],"viewsWelcome":[{"view":"testing","contents":"Configure a test framework to see your tests here.\n[Configure Python Tests](command:python.configureTests)","when":"!virtualWorkspace && shellExecutionSupported"}],"yamlValidation":[{"fileMatch":".condarc","url":"./schemas/condarc.json"},{"fileMatch":"environment.yml","url":"./schemas/conda-environment.json"},{"fileMatch":"meta.yaml","url":"./schemas/conda-meta.json"}],"languageModelTools":[{"name":"get_python_environment_details","displayName":"Get Python Environment Info","userDescription":"Get information for a Python Environment, such as Type, Version, Packages, and more.","modelDescription":"This tool will retrieve the details of the Python Environment for the specified file or workspace. The details returned include the 1. Type of Python Environment (conda, venv, etec), 2. Version of Python, 3. List of all installed Python packages with their versions. ALWAYS call configure_python_environment before using this tool.","toolReferenceName":"getPythonEnvironmentInfo","tags":["python","python environment","extension_installed_by_tool","enable_other_tool_configure_python_environment"],"icon":"$(snake)","canBeReferencedInPrompt":true,"inputSchema":{"type":"object","properties":{"resourcePath":{"type":"string","description":"The path to the Python file or workspace to get the environment information for."}},"required":[]}},{"name":"get_python_executable_details","displayName":"Get Python Executable","userDescription":"Get executable info for a Python Environment","modelDescription":"This tool will retrieve the details of the Python Environment for the specified file or workspace. ALWAYS use this tool before executing any Python command in the terminal. This tool returns the details of how to construct the fully qualified path and or command including details such as arguments required to run Python in a terminal. Note: Instead of executing `python --version` or `python -c 'import sys; print(sys.executable)'`, use this tool to get the Python executable path to replace the `python` command. E.g. instead of using `python -c 'import sys; print(sys.executable)'`, use this tool to build the command `conda run -n <env_name> -c 'import sys; print(sys.executable)'`. ALWAYS call configure_python_environment before using this tool.","toolReferenceName":"getPythonExecutableCommand","tags":["python","python environment","extension_installed_by_tool","enable_other_tool_configure_python_environment"],"icon":"$(terminal)","canBeReferencedInPrompt":true,"inputSchema":{"type":"object","properties":{"resourcePath":{"type":"string","description":"The path to the Python file or workspace to get the executable information for. If not provided, the current workspace will be used. Where possible pass the path to the file or workspace."}},"required":[]}},{"name":"install_python_packages","displayName":"Install Python Package","userDescription":"Installs Python packages in a Python Environment.","modelDescription":"Installs Python packages in the given workspace. Use this tool to install Python packages in the user's chosen Python environment. ALWAYS call configure_python_environment before using this tool.","toolReferenceName":"installPythonPackage","tags":["python","python environment","install python package","extension_installed_by_tool","enable_other_tool_configure_python_environment"],"icon":"$(package)","canBeReferencedInPrompt":true,"inputSchema":{"type":"object","properties":{"packageList":{"type":"array","items":{"type":"string"},"description":"The list of Python packages to install."},"resourcePath":{"type":"string","description":"The path to the Python file or workspace into which the packages are installed. If not provided, the current workspace will be used. Where possible pass the path to the file or workspace."}},"required":["packageList"]}},{"name":"configure_python_environment","displayName":"Configure Python Environment","modelDescription":"This tool configures a Python environment in the given workspace. ALWAYS Use this tool to set up the user's chosen environment and ALWAYS call this tool before using any other Python related tools or running any Python command in the terminal.","userDescription":"Configure a Python Environment for a workspace","toolReferenceName":"configurePythonEnvironment","tags":["python","python environment","extension_installed_by_tool"],"icon":"$(gear)","canBeReferencedInPrompt":true,"inputSchema":{"type":"object","properties":{"resourcePath":{"type":"string","description":"The path to the Python file or workspace for which a Python Environment needs to be configured."}},"required":[]}},{"name":"create_virtual_environment","displayName":"Create a Virtual Environment","modelDescription":"This tool will create a Virual Environment","tags":[],"canBeReferencedInPrompt":false,"inputSchema":{"type":"object","properties":{"packageList":{"type":"array","items":{"type":"string"},"description":"The list of packages to install."},"resourcePath":{"type":"string","description":"The path to the Python file or workspace for which a Python Environment needs to be configured."}},"required":[]},"when":"false"},{"name":"selectEnvironment","displayName":"Select a Python Environment","modelDescription":"This tool will prompt the user to select an existing Python Environment","tags":[],"canBeReferencedInPrompt":false,"inputSchema":{"type":"object","properties":{"resourcePath":{"type":"string","description":"The path to the Python file or workspace for which a Python Environment needs to be configured."}},"required":[]},"when":"false"}]},"copilot":{"tests":{"getSetupConfirmation":"python.copilotSetupTests"}},"scripts":{"package":"gulp clean && gulp prePublishBundle && vsce package -o ms-python-insiders.vsix","prePublish":"gulp clean && gulp prePublishNonBundle","compile":"tsc -watch -p ./","compileApi":"node ./node_modules/typescript/lib/tsc.js -b ./pythonExtensionApi/tsconfig.json","compiled":"deemon npm run compile","kill-compiled":"deemon --kill npm run compile","checkDependencies":"gulp checkDependencies","test":"node ./out/test/standardTest.js && node ./out/test/multiRootTest.js","test:unittests":"mocha --config ./build/.mocha.unittests.json","test:unittests:cover":"nyc --no-clean --nycrc-path ./build/.nycrc mocha --config ./build/.mocha.unittests.json","test:functional":"mocha --require source-map-support/register --config ./build/.mocha.functional.json","test:functional:perf":"node --inspect-brk ./node_modules/mocha/bin/_mocha --require source-map-support/register --config ./build/.mocha.functional.perf.json","test:functional:memleak":"node --inspect-brk ./node_modules/mocha/bin/_mocha --require source-map-support/register --config ./build/.mocha.functional.json","test:functional:cover":"nyc --no-clean --nycrc-path ./build/.nycrc mocha --require source-map-support/register --config ./build/.mocha.functional.json","test:cover:report":"nyc --nycrc-path ./build/.nycrc  report --reporter=text --reporter=html --reporter=text-summary --reporter=cobertura","testDebugger":"node ./out/test/testBootstrap.js ./out/test/debuggerTest.js","testDebugger:cover":"nyc --no-clean --use-spawn-wrap --nycrc-path ./build/.nycrc --require source-map-support/register node ./out/test/debuggerTest.js","testSingleWorkspace":"node ./out/test/testBootstrap.js ./out/test/standardTest.js","testSingleWorkspace:cover":"nyc --no-clean --use-spawn-wrap --nycrc-path ./build/.nycrc --require source-map-support/register node ./out/test/standardTest.js","preTestJediLSP":"node ./out/test/languageServers/jedi/lspSetup.js","testJediLSP":"node ./out/test/languageServers/jedi/lspSetup.js && cross-env CODE_TESTS_WORKSPACE=src/test VSC_PYTHON_CI_TEST_GREP='Language Server:' node ./out/test/testBootstrap.js ./out/test/standardTest.js && node ./out/test/languageServers/jedi/lspTeardown.js","testMultiWorkspace":"node ./out/test/testBootstrap.js ./out/test/multiRootTest.js","testPerformance":"node ./out/test/testBootstrap.js ./out/test/performanceTest.js","testSmoke":"cross-env INSTALL_JUPYTER_EXTENSION=true \"node ./out/test/smokeTest.js\"","testInsiders":"cross-env VSC_PYTHON_CI_TEST_VSC_CHANNEL=insiders INSTALL_PYLANCE_EXTENSION=true TEST_FILES_SUFFIX=insiders.test CODE_TESTS_WORKSPACE=src/testMultiRootWkspc/smokeTests \"node ./out/test/standardTest.js\"","lint-staged":"node gulpfile.js","lint":"eslint  src build pythonExtensionApi","lint-fix":"eslint --fix src build pythonExtensionApi gulpfile.js","format-check":"prettier --check 'src/**/*.ts' 'build/**/*.js' '.github/**/*.yml' gulpfile.js","format-fix":"prettier --write 'src/**/*.ts' 'build/**/*.js' '.github/**/*.yml' gulpfile.js","clean":"gulp clean","addExtensionPackDependencies":"gulp addExtensionPackDependencies","updateBuildNumber":"gulp updateBuildNumber","verifyBundle":"gulp verifyBundle","webpack":"webpack"},"dependencies":{"@iarna/toml":"^2.2.5","@vscode/extension-telemetry":"^0.8.4","arch":"^2.1.0","fs-extra":"^11.2.0","glob":"^7.2.0","iconv-lite":"^0.6.3","inversify":"^6.0.2","jsonc-parser":"^3.0.0","lodash":"^4.17.21","minimatch":"^5.0.1","named-js-regexp":"^1.3.3","node-stream-zip":"^1.6.0","reflect-metadata":"^0.2.2","rxjs":"^6.5.4","rxjs-compat":"^6.5.4","semver":"^7.5.2","stack-trace":"0.0.10","sudo-prompt":"^9.2.1","tmp":"^0.2.5","uint64be":"^3.0.0","unicode":"^14.0.0","vscode-debugprotocol":"^1.28.0","vscode-jsonrpc":"^9.0.0-next.5","vscode-languageclient":"^10.0.0-next.12","vscode-languageserver-protocol":"^3.17.6-next.10","vscode-tas-client":"^0.1.84","which":"^2.0.2","winreg":"^1.2.4","xml2js":"^0.5.0"},"devDependencies":{"@istanbuljs/nyc-config-typescript":"^1.0.2","@types/bent":"^7.3.0","@types/chai":"^4.1.2","@types/chai-arrays":"^2.0.0","@types/chai-as-promised":"^7.1.0","@types/download":"^8.0.1","@types/fs-extra":"^11.0.4","@types/glob":"^7.2.0","@types/lodash":"^4.14.104","@types/mocha":"^9.1.0","@types/node":"^22.5.0","@types/semver":"^5.5.0","@types/shortid":"^0.0.29","@types/sinon":"^17.0.3","@types/stack-trace":"0.0.29","@types/tmp":"^0.0.33","@types/vscode":"^1.95.0","@types/which":"^2.0.1","@types/winreg":"^1.2.30","@types/xml2js":"^0.4.2","@typescript-eslint/eslint-plugin":"^6.21.0","@typescript-eslint/parser":"^6.21.0","@vscode/test-electron":"^2.3.8","@vscode/vsce":"^2.27.0","bent":"^7.3.12","chai":"^4.1.2","chai-arrays":"^2.0.0","chai-as-promised":"^7.1.1","copy-webpack-plugin":"^9.1.0","cross-env":"^7.0.3","cross-spawn":"^6.0.5","del":"^6.0.0","download":"^8.0.0","eslint":"^8.57.1","eslint-config-prettier":"^8.3.0","eslint-plugin-import":"^2.31.0","eslint-plugin-jsx-a11y":"^6.3.1","eslint-plugin-no-only-tests":"^3.3.0","eslint-plugin-react":"^7.20.3","eslint-plugin-react-hooks":"^4.0.0","expose-loader":"^3.1.0","flat":"^5.0.2","get-port":"^5.1.1","gulp":"^5.0.0","gulp-typescript":"^5.0.0","mocha":"^11.1.0","mocha-junit-reporter":"^2.0.2","mocha-multi-reporters":"^1.1.7","node-has-native-dependencies":"^1.0.2","node-loader":"^1.0.2","node-polyfill-webpack-plugin":"^1.1.4","nyc":"^15.0.0","prettier":"^2.0.2","rewiremock":"^3.13.0","shortid":"^2.2.8","sinon":"^18.0.0","source-map-support":"^0.5.12","ts-loader":"^9.2.8","ts-mockito":"^2.5.0","ts-node":"^10.7.0","tsconfig-paths-webpack-plugin":"^3.2.0","typemoq":"^2.1.0","typescript":"~5.2","uuid":"^8.3.2","webpack":"^5.76.0","webpack-bundle-analyzer":"^4.5.0","webpack-cli":"^4.9.2","webpack-fix-default-import-plugin":"^1.0.3","webpack-merge":"^5.8.0","webpack-node-externals":"^3.0.0","webpack-require-from":"^1.8.6","worker-loader":"^3.0.8","yargs":"^15.3.1"},"extensionPack":["ms-python.vscode-pylance","ms-python.debugpy","ms-python.vscode-python-envs"]},"location":{"$mid":1,"path":"/home/usainzg/.vscode/extensions/ms-python.python-2025.16.0-linux-x64","scheme":"file"},"isBuiltin":false,"targetPlatform":"linux-x64","publisherDisplayName":"Microsoft","metadata":{"isApplicationScoped":false,"isMachineScoped":false,"isBuiltin":false,"installedTimestamp":1761027233160,"pinned":false,"source":"gallery","id":"f1f59ae4-9318-4f3c-a9b5-81b2eaa5f8a5","publisherId":"998b010b-e2af-44a5-a6cd-0b5fd3b9b6f8","publisherDisplayName":"Microsoft","targetPlatform":"linux-x64","updated":true,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"preRelease":false,"size":41917196},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"ms-python.vscode-pylance","uuid":"364d2426-116a-433a-a5d8-a5098dc3afbd"},"manifest":{"name":"vscode-pylance","displayName":"Pylance","description":"A performant, feature-rich language server for Python in VS Code","version":"2025.8.3","license":"SEE LICENSE IN LICENSE.txt","author":{"name":"Microsoft Corporation"},"publisher":"ms-python","private":true,"bugs":{"url":"https://github.com/microsoft/pylance-release/issues"},"repository":{"type":"git","url":"https://github.com/microsoft/pylance-release"},"engines":{"vscode":"^1.101.0"},"keywords":["python"],"categories":["Programming Languages"],"icon":"images/icon.png","main":"./dist/extension.bundle.js","browser":"./dist/browser.extension.bundle.js","activationEvents":["onLanguage:python","workspaceContains:pyrightconfig.json","workspaceContains:pyproject.toml"],"extensionDependencies":[],"extensionOptionalDependencies":["ms-python.python","ms-python.vscode-python-envs"],"capabilities":{"untrustedWorkspaces":{"supported":"limited","description":"Python will not be executed; the latest Python version will be used for analysis and installed libraries will not be available.","restrictedConfigurations":["python.analysis.nodeExecutable","python.analysis.nodeArguments","python.pythonPath"]},"virtualWorkspaces":{"supported":"limited","description":"Analysis is limited to opened files."}},"contributes":{"mcpServerDefinitionProviders":[{"id":"pylanceMcp","label":"pylance mcp server"}],"commands":[{"command":"pylance.reportIssue","title":"Pylance: Report Issue..."},{"command":"pylance.indexing.clearPersistedIndices","title":"Pylance: Clear All Persisted Indices"},{"command":"pylance.profiling.start","title":"Pylance: Start Profiling"},{"command":"pylance.profiling.stop","title":"Pylance: Stop Profiling"},{"command":"pylance.logging.start","title":"Pylance: Start Logging"},{"command":"pylance.logging.stop","title":"Pylance: Stop Logging"},{"command":"pylance.gotoOutputChannel","title":"Pylance: Go to output channel"},{"command":"pylance.runCurrentFileInSandbox","title":"Pylance: Run current file in sandbox","category":"Pylance debugging","enablement":"editorLangId == python && config.pyright.development"},{"command":"pylance.dumpTokens","title":"Dump token streams ...","category":"Pylance debugging","enablement":"editorLangId == python && config.pyright.development"},{"command":"pylance.dumpNodes","title":"Dump parse tree ...","category":"Pylance debugging","enablement":"editorLangId == python && config.pyright.development"},{"command":"pylance.dumpTypes","title":"Dump type info ...","category":"Pylance debugging","enablement":"editorLangId == python && config.pyright.development"},{"command":"pylance.dumpCachedTypes","title":"Pylance: Dump cached type info ...","category":"Pylance debugging","enablement":"editorLangId == python && config.pyright.development"},{"command":"pylance.dumpCodeFlowGraph","title":"Pylance: Dump code flow graph for node ...","category":"Pylance debugging","enablement":"editorLangId == python && config.pyright.development"},{"command":"pylance.learnMoreAboutImportResolution","title":"Learn more about import resolution","enablement":"false"},{"command":"pylance.foldDocstrings","title":"Pylance: Fold All Docstrings"},{"command":"pylance.unfoldDocstrings","title":"Pylance: Unfold All Docstrings"}],"menus":{"commandPalette":[{"command":"pylance.reportIssue"},{"command":"pylance.indexing.clearPersistedIndices","when":"!isWeb"},{"command":"pylance.profiling.start","when":"!isWeb"},{"command":"pylance.profiling.stop","when":"!isWeb"},{"command":"pylance.logging.start","when":"!isWeb"},{"command":"pylance.logging.stop","when":"!isWeb"},{"command":"pylance.runCurrentFileInSandbox","when":"editorLangId == python && config.pyright.development"},{"command":"pylance.dumpTokens","when":"editorLangId == python && config.pyright.development"},{"command":"pylance.dumpNodes","when":"editorLangId == python && config.pyright.development"},{"command":"pylance.dumpTypes","when":"editorLangId == python && config.pyright.development"},{"command":"pylance.dumpCachedTypes","when":"editorLangId == python && config.pyright.development"},{"command":"pylance.dumpCodeFlowGraph","when":"editorLangId == python && config.pyright.development"},{"command":"pylance.foldDocstrings","when":"!isWeb"},{"command":"pylance.unfoldDocstrings","when":"!isWeb"}]},"configurationDefaults":{"[python]":{"editor.formatOnType":true,"editor.wordBasedSuggestions":"off"}},"configuration":{"type":"object","title":"Pylance","properties":{"python.analysis.inlayHints.variableTypes":{"type":"boolean","default":false,"markdownDescription":"Enable/disable inlay hints for variable types. Hints are not displayed for assignments of literals or constants:\n```python\nfoo':list[str]' = [\"a\"]\n \n```\n","scope":"resource"},"python.analysis.inlayHints.functionReturnTypes":{"type":"boolean","default":false,"markdownDescription":"Enable/disable inlay hints for function return types:\n```python\ndef foo(x:int) '-> int':\n\treturn x\n```\n","scope":"resource"},"python.analysis.inlayHints.callArgumentNames":{"type":"string","default":"off","markdownDescription":"Enable/disable inlay hints for call argument names:\n```python\ndatetime('year='2019, 'month='10, 'day='27)\n```\n","enum":["off","partial","all"],"enumDescriptions":["Disable inlay hints for call argument names.","Enable inlay hints for positional-or-keyword arguments while ignoring positional-only and keyword-only.","Enable inlay hints for positional-or-keyword and positional-only arguments while ignoring keyword-only."],"scope":"resource"},"python.analysis.inlayHints.pytestParameters":{"type":"boolean","default":false,"markdownDescription":"Enable/disable inlay hints for pytest function parameter types:\n```python\ndef test_foo(my_fixture: 'str'):\n\tassert(my_fixture == 'foo')\n```\n","scope":"resource"},"python.analysis.completeFunctionParens":{"type":"boolean","default":false,"markdownDescription":"Add parentheses to function completions.","scope":"resource"},"python.analysis.autoImportCompletions":{"type":"boolean","default":false,"markdownDescription":"Enable auto-import completions.","scope":"resource"},"python.analysis.showOnlyDirectDependenciesInAutoImport":{"type":"boolean","default":false,"markdownDescription":"Show only direct dependencies declared in `requirements.txt` or `pyproject.toml` in `auto import` suggestions, if they exist. This only affects `auto import` for completions. The `add import` code action will continue to show all possible imports.","scope":"resource"},"python.analysis.autoFormatStrings":{"type":"boolean","default":false,"markdownDescription":"When typing a `{` in a string, automatically prefix the string with an `f`.","scope":"window"},"python.analysis.autoSearchPaths":{"type":"boolean","default":true,"markdownDescription":"Automatically add common search paths like `src`.","scope":"resource"},"python.analysis.stubPath":{"type":"string","default":"typings","markdownDescription":"Path to directory containing custom type stub files.","scope":"resource"},"python.analysis.diagnosticMode":{"type":"string","default":"openFilesOnly","markdownDescription":"Analysis scope for showing diagnostics.","enum":["openFilesOnly","workspace"],"enumDescriptions":["Analyzes and reports errors on only open files.","Analyzes and reports errors on all files in the workspace."],"scope":"resource"},"python.analysis.extraPaths":{"type":"array","default":[],"items":{"type":"string"},"markdownDescription":"Additional import search resolution paths","scope":"resource"},"python.analysis.include":{"type":"array","default":[],"items":{"type":"string"},"markdownDescription":"Paths of directories or files that should be included. If no paths are specified, Pylance defaults to the workspace root directory. \n\nPaths may contain wildcard characters `**` (a directory or multiple levels of directories), `*` (a sequence of zero or more characters), or `?` (a single character). \n\nIf the path contains a `${workspaceFolder:<workspaceName>}` variable, the glob pattern will only apply to the corresponding workspace in a multi-root workspace environment.","scope":"resource"},"python.analysis.exclude":{"type":"array","default":[],"items":{"type":"string"},"markdownDescription":"Paths of directories or files that should not be included. These override the include directories, allowing specific subdirectories to be excluded. \n\nNote that files in the exclude paths may still be included in the analysis if they are referenced (imported) by source files that are not excluded. \n\nPaths may contain wildcard characters `**` (a directory or multiple levels of directories), `*` (a sequence of zero or more characters), or `?` (a single character). \n\nIf no exclude paths are specified, Pylance automatically excludes the following: `**/node_modules`, `**/__pycache__`, `.git` and any virtual environment directories. If the path contains a `${workspaceFolder:<workspaceName>}` variable, the glob pattern will only apply to the corresponding workspace in a multi-root workspace environment.","scope":"resource"},"python.analysis.ignore":{"type":"array","default":[],"items":{"type":"string"},"markdownDescription":"Paths of directories or files whose diagnostic output (errors and warnings) should be suppressed even if they are an included file or within the transitive closure of an included file. \n\nPaths may contain wildcard characters `**` (a directory or multiple levels of directories), `*` (a sequence of zero or more characters), or `?` (a single character). \n\nIf the path contains a `${workspaceFolder:<workspaceName>}` variable, the glob pattern will only apply to the corresponding workspace in a multi-root workspace environment.","scope":"resource"},"python.analysis.indexing":{"type":"boolean","default":true,"markdownDescription":"Enable indexing of installed third party libraries and user files for language features such as auto-import, add import, workspace symbols and etc.","scope":"resource"},"python.analysis.userFileIndexingLimit":{"type":"number","default":2000,"markdownDescription":"Maximum number of user files to index in the workspace. Indexing files is a performance-intensive task. Please use this setting to limit the number of files you want us to index. If you enter -1, we will index all files.","scope":"resource"},"python.analysis.persistAllIndices":{"type":"boolean","default":true,"markdownDescription":"Indices for all third party libraries will be persisted to disk.","scope":"resource"},"python.analysis.includeAliasesFromUserFiles":{"type":"boolean","default":false,"markdownDescription":"Include alias symbols from user files. This will make alias symbols to show up in features such as `add import`, `auto import`","scope":"resource"},"python.analysis.extraCommitChars":{"type":"boolean","default":false,"markdownDescription":"Allow using '.', '(' as commit characters when applicable.","scope":"resource"},"python.analysis.useLibraryCodeForTypes":{"type":"boolean","default":true,"markdownDescription":"Use library implementations to extract type information when type stub is not present.","scope":"resource"},"python.analysis.autoIndent":{"type":"boolean","default":true,"markdownDescription":"Automatically adjust indentation based on language semantics when typing Python code.","scope":"window"},"python.analysis.autoSplitStrings":{"type":"boolean","default":true,"markdownDescription":"Automatically add quote and line continuation characters when splitting strings.","scope":"window"},"python.analysis.typeCheckingMode":{"type":"string","default":"off","enum":["off","basic","standard","strict"],"markdownDescription":"Type checking modes Basic, Standard, and Strict :\n\n| Feature                                  | Basic | Standard | Strict |\n|------------------------------------------|:-----:|:--------:|:------:|\n| Variable type mismatches                 |   ✅   |    ✅     |   ✅   |\n| Function return type checks              |   ✅   |    ✅     |   ✅   |\n| Type narrowing enforcement               |       |    ✅     |   ✅   |\n| Checking of `Any` type                   |       |    ✅     |   ✅   |\n| Private/protected access checks          |       |    ✅     |   ✅   |\n| Enforces stricter generics usage         |       |    ✅     |   ✅   |\n| Reports missing type annotations         |       |          |   ✅   |\n| Disallows `Any` type usage               |       |          |   ✅   |\n| Requires strict type compatibility       |       |          |   ✅   |\n| Enforces complete type coverage          |       |          |   ✅   |\n\nFor more details, check the [Pyright documentation](https://microsoft.github.io/pyright/#/configuration?id=type-check-diagnostics-settings).","markdownEnumDescriptions":["Show diagnostics for invalid syntax, unresolved imports, undefined variables.","All rules from `off` + `basic` type checking rules.","All rules from `basic` + `standard` type checking rules.","All rules from `standard` + `strict` type checking rules."],"scope":"resource"},"python.analysis.fixAll":{"type":"array","default":[],"items":{"enum":["source.unusedImports","source.convertImportFormat"],"markdownEnumDescriptions":["Remove unused imports.","Convert import format following python.analysis.importFormat."]},"markdownDescription":"source fixes to run in fix all.","scope":"resource"},"python.analysis.packageIndexDepths":{"type":"array","default":[{"name":"sklearn","depth":2},{"name":"matplotlib","depth":2},{"name":"scipy","depth":2},{"name":"django","depth":2},{"name":"flask","depth":2},{"name":"fastapi","depth":2},{"name":"cuda","depth":3,"includeAllSymbols":true}],"items":{"type":"object","label":"Per package settings","required":["name"],"properties":{"name":{"type":"string","label":"Package name to configure. Empty name means all packages.","default":""},"depth":{"type":"integer","label":"Depth to scan modules.","default":1},"includeAllSymbols":{"type":"boolean","label":"'true' means include all symbols. 'false' means only symbols in __all__.","default":false}}},"markdownDescription":"Used to override how many levels under installed packages to index on a per package basis. By default, only top-level modules are indexed (depth = 1). To index submodules, increase depth by 1 for each level of submodule you want to index. Accepted values are:\n```JSON\n{\"name\": \"package name (str)\",\n \"depth\": \"depth to scan (int)\",\n \"includeAllSymbols\": \"whether to include all symbols (bool)\"}\n\n```\nIf `includeAllSymbols` is set to `false`, only symbols in each package's `__all__` are included. When it's set to `true`, Pylance will index every module/top level symbol declarations in the file.  \n  \nUsage example: \n```JSON\n[\n\t{\"name\": \"sklearn\", \"depth\": 2, \"includeAllSymbols\": true},\n\t{\"name\": \"matplotlib\", \"depth\": 3, \"includeAllSymbols\": false}\n]\n\n```\n","scope":"resource"},"python.analysis.typeEvaluation.strictListInference":{"type":"boolean","markdownDescription":"When inferring the type of a list, use strict type assumptions. For example, the expression \n\n```python\n[1, 'a', 3.4]\n```\n could be inferred to be of type `list[Any]` or `list[int | str | float]`. If this setting is true, it will use the latter (stricter) type. The default value for this setting is `false`.","default":false,"scope":"resource"},"python.analysis.typeEvaluation.strictDictionaryInference":{"type":"boolean","markdownDescription":"When inferring the type of a dictionary’s keys and values, use strict type assumptions. For example, the expression \n\n```python\n{'a': 1, 'b': 'a'}\n```\n could be inferred to be of type `dict[str, Any]` or `dict[str, int | str]`. If this setting is true, it will use the latter (stricter) type. The default value for this setting is `false`.","default":false,"scope":"resource"},"python.analysis.typeEvaluation.strictSetInference":{"type":"boolean","markdownDescription":"When inferring the type of a set, use strict type assumptions. For example, the expression \n\n```python\n{1, 'a', 3.4}\n```\n could be inferred to be of type `set[Any]` or `set[int | str | float]`. If this setting is true, it will use the latter (stricter) type. The default value for this setting is `false`.","default":false,"scope":"resource"},"python.analysis.typeEvaluation.analyzeUnannotatedFunctions":{"type":"boolean","markdownDescription":"Analyze and report errors for functions and methods that have no type annotations for input parameters or return types. The default value for this setting is `true`.","default":true,"scope":"resource"},"python.analysis.typeEvaluation.strictParameterNoneValue":{"type":"boolean","markdownDescription":"[PEP 484](https://peps.python.org/pep-0484) indicates that when a function parameter is assigned a default value of None, its type should implicitly be Optional even if the explicit type is not. When enabled, this rule requires that parameter type annotations use Optional explicitly in this case. The default value for this setting is `true`.","default":true,"scope":"resource"},"python.analysis.typeEvaluation.enableTypeIgnoreComments":{"type":"boolean","markdownDescription":"[PEP 484](https://peps.python.org/pep-0484) defines support for `# type: ignore` comments. This switch enables or disables support for these comments. The default value for this setting is `true`. This does not affect `# pyright: ignore` comments.","default":true,"scope":"resource"},"python.analysis.typeEvaluation.deprecateTypingAliases":{"type":"boolean","markdownDescription":"[PEP 585](https://peps.python.org/pep-0585) indicates that aliases to types in standard collections that were introduced solely to support generics are deprecated as of Python 3.9. This switch controls whether these are treated as deprecated. This applies only when pythonVersion is 3.9 or newer. The default value for this setting is `false` but may be switched to `true` in the future.","default":false,"scope":"resource"},"python.analysis.typeEvaluation.enableReachabilityAnalysis":{"type":"boolean","markdownDescription":"If enabled, code that is determined to be unreachable by type analysis is reported using a tagged hint. This setting does not affect code that is determined to be unreachable regardless of type analysis; such code is always reported as unreachable. This setting also has no effect when when using the command-line version of pyright because it never emits tagged hints for unreachable code.","default":false,"scope":"resource"},"python.analysis.typeEvaluation.enableExperimentalFeatures":{"type":"boolean","markdownDescription":"Enables a set of experimental (mostly undocumented) features that correspond to proposed or exploratory changes to the Python typing standard. These features will likely change or be removed, so they should not be used except for experimentation purposes. The default value for this setting is `false`.","default":false,"scope":"resource"},"python.analysis.typeEvaluation.disableBytesTypePromotions":{"type":"boolean","markdownDescription":"Disables legacy behavior where `bytearray` and `memoryview` are considered subtypes of `bytes`. [PEP 688](https://peps.python.org/pep-0688/#no-special-meaning-for-bytes) deprecates this behavior, but this switch is provided to restore the older behavior. The default value for this setting is `false`.","default":false,"scope":"resource"},"python.analysis.diagnosticSeverityOverrides":{"type":"object","markdownDescription":"Allows a user to override the severity levels for individual diagnostics. \n\nUse the rule name as a key and one of `error`, `warning`, `information`, `none`, `true` (alias for `error`) or `false` (alias for `none`) as value. The default value shown for each diagnostic is the default when #python.analysis.typeCheckingMode# is set to `off`. See [here](https://github.com/microsoft/pyright/blob/main/docs/configuration.md#diagnostic-rule-defaults) for defaults for each type checking mode (`off`, `basic` and `strict`).","scope":"resource","properties":{"reportGeneralTypeIssues":{"type":["string","boolean"],"description":"Diagnostics for general type inconsistencies, unsupported operations, argument/parameter mismatches, etc. Covers all of the basic type-checking rules not covered by other rules. Does not include syntax errors.","default":"none","enum":["none","information","warning","error",true,false]},"reportPropertyTypeMismatch":{"type":["string","boolean"],"description":"Diagnostics for property whose setter and getter have mismatched types.","default":"none","enum":["none","information","warning","error",true,false]},"reportFunctionMemberAccess":{"type":["string","boolean"],"description":"Diagnostics for member accesses on functions.","default":"none","enum":["none","information","warning","error",true,false]},"reportMissingImports":{"type":["string","boolean"],"description":"Diagnostics for imports that have no corresponding imported python file or type stub file.","default":"warning","enum":["none","information","warning","error",true,false]},"reportMissingModuleSource":{"type":["string","boolean"],"description":"Diagnostics for imports that have no corresponding source file. This happens when a type stub is found, but the module source file was not found, indicating that the code may fail at runtime when using this execution environment. Type checking will be done using the type stub.","default":"warning","enum":["none","information","warning","error",true,false]},"reportInvalidTypeForm":{"type":["string","boolean"],"description":"Diagnostics for type expression that uses an invalid form.","default":"error","enum":["none","information","warning","error",true,false]},"reportMissingTypeStubs":{"type":["string","boolean"],"description":"Diagnostics for imports that have no corresponding type stub file (either a typeshed file or a custom type stub). The type checker requires type stubs to do its best job at analysis.","default":"none","enum":["none","information","warning","error",true,false]},"reportImportCycles":{"type":["string","boolean"],"description":"Diagnostics for cyclical import chains. These are not errors in Python, but they do slow down type analysis and often hint at architectural layering issues. Generally, they should be avoided.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnusedImport":{"type":["string","boolean"],"description":"Diagnostics for an imported symbol that is not referenced within that file.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnusedClass":{"type":["string","boolean"],"description":"Diagnostics for a class with a private name (starting with an underscore) that is not accessed.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnusedFunction":{"type":["string","boolean"],"description":"Diagnostics for a function or method with a private name (starting with an underscore) that is not accessed.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnusedVariable":{"type":["string","boolean"],"description":"Diagnostics for a variable that is not accessed.","default":"none","enum":["none","information","warning","error",true,false]},"reportDuplicateImport":{"type":["string","boolean"],"description":"Diagnostics for an imported symbol or module that is imported more than once.","default":"none","enum":["none","information","warning","error",true,false]},"reportWildcardImportFromLibrary":{"type":["string","boolean"],"description":"Diagnostics for an wildcard import from an external library.","default":"none","enum":["none","information","warning","error",true,false]},"reportAbstractUsage":{"type":["string","boolean"],"description":"Diagnostics for an attempt to instantiate an abstract or protocol class or use an abstract method.","default":"error","enum":["none","information","warning","error",true,false]},"reportArgumentType":{"type":["string","boolean"],"description":"Diagnostics for a type incompatibility for an argument to a call.","default":"error","enum":["none","information","warning","error",true,false]},"reportAssertTypeFailure":{"type":["string","boolean"],"description":"Diagnostics for a type incompatibility detected by a typing.assert_type call.","default":"error","enum":["none","information","warning","error",true,false]},"reportAssignmentType":{"type":["string","boolean"],"description":"Diagnostics for type incompatibilities for assignments.","default":"error","enum":["none","information","warning","error",true,false]},"reportAttributeAccessIssue":{"type":["string","boolean"],"description":"Diagnostics for issues involving attribute accesses.","default":"error","enum":["none","information","warning","error",true,false]},"reportCallIssue":{"type":["string","boolean"],"description":"Diagnostics for issues involving call expressions and arguments.","default":"error","enum":["none","information","warning","error",true,false]},"reportInconsistentOverload":{"type":["string","boolean"],"description":"Diagnostics for inconsistencies between function overload signatures and implementation.","default":"error","enum":["none","information","warning","error",true,false]},"reportIndexIssue":{"type":["string","boolean"],"description":"Diagnostics related to index operations and expressions.","default":"error","enum":["none","information","warning","error",true,false]},"reportInvalidTypeArguments":{"type":["string","boolean"],"description":"Diagnostics for invalid type argument usage.","default":"error","enum":["none","information","warning","error",true,false]},"reportNoOverloadImplementation":{"type":["string","boolean"],"description":"Diagnostics for an overloaded function or method with a missing implementation.","default":"error","enum":["none","information","warning","error",true,false]},"reportOperatorIssue":{"type":["string","boolean"],"description":"Diagnostics for related to unary or binary operators.","default":"error","enum":["none","information","warning","error",true,false]},"reportOptionalSubscript":{"type":["string","boolean"],"description":"Diagnostics for an attempt to subscript (index) a variable with an Optional type.","default":"none","enum":["none","information","warning","error",true,false]},"reportOptionalMemberAccess":{"type":["string","boolean"],"description":"Diagnostics for an attempt to access a member of a variable with an Optional type.","default":"none","enum":["none","information","warning","error",true,false]},"reportOptionalCall":{"type":["string","boolean"],"description":"Diagnostics for an attempt to call a variable with an Optional type.","default":"none","enum":["none","information","warning","error",true,false]},"reportOptionalIterable":{"type":["string","boolean"],"description":"Diagnostics for an attempt to use an Optional type as an iterable value (e.g. within a for statement).","default":"none","enum":["none","information","warning","error",true,false]},"reportOptionalContextManager":{"type":["string","boolean"],"description":"Diagnostics for an attempt to use an Optional type as a context manager (as a parameter to a with statement).","default":"none","enum":["none","information","warning","error",true,false]},"reportOptionalOperand":{"type":["string","boolean"],"description":"Diagnostics for an attempt to use an Optional type as an operand to a binary or unary operator (like '+', '==', 'or', 'not').","default":"none","enum":["none","information","warning","error",true,false]},"reportRedeclaration":{"type":["string","boolean"],"description":"Diagnostics for an attempt to declare the type of a symbol multiple times.","default":"error","enum":["none","information","warning","error",true,false]},"reportReturnType":{"type":["string","boolean"],"description":"Diagnostics related to function return type compatibility.","default":"error","enum":["none","information","warning","error",true,false]},"reportTypedDictNotRequiredAccess":{"type":["string","boolean"],"description":"Diagnostics for an attempt to access a non-required key within a TypedDict without a check for its presence.","default":"none","enum":["none","information","warning","error",true,false]},"reportUntypedFunctionDecorator":{"type":["string","boolean"],"description":"Diagnostics for function decorators that have no type annotations. These obscure the function type, defeating many type analysis features.","default":"none","enum":["none","information","warning","error",true,false]},"reportUntypedClassDecorator":{"type":["string","boolean"],"description":"Diagnostics for class decorators that have no type annotations. These obscure the class type, defeating many type analysis features.","default":"none","enum":["none","information","warning","error",true,false]},"reportUntypedBaseClass":{"type":["string","boolean"],"description":"Diagnostics for base classes whose type cannot be determined statically. These obscure the class type, defeating many type analysis features.","default":"none","enum":["none","information","warning","error",true,false]},"reportUntypedNamedTuple":{"type":["string","boolean"],"description":"Diagnostics when “namedtuple” is used rather than “NamedTuple”. The former contains no type information, whereas the latter does.","default":"none","enum":["none","information","warning","error",true,false]},"reportPrivateUsage":{"type":["string","boolean"],"description":"Diagnostics for incorrect usage of private or protected variables or functions. Protected class members begin with a single underscore _ and can be accessed only by subclasses. Private class members begin with a double underscore but do not end in a double underscore and can be accessed only within the declaring class. Variables and functions declared outside of a class are considered private if their names start with either a single or double underscore, and they cannot be accessed outside of the declaring module.","default":"none","enum":["none","information","warning","error",true,false]},"reportTypeCommentUsage":{"type":["string","boolean"],"description":"Diagnostics for usage of deprecated type comments.","default":"none","enum":["none","information","warning","error",true,false]},"reportPrivateImportUsage":{"type":["string","boolean"],"description":"Diagnostics for incorrect usage of symbol imported from a \"py.typed\" module that is not re-exported from that module.","default":"none","enum":["none","information","warning","error",true,false]},"reportConstantRedefinition":{"type":["string","boolean"],"description":"Diagnostics for attempts to redefine variables whose names are all-caps with underscores and numerals.","default":"none","enum":["none","information","warning","error",true,false]},"reportDeprecated":{"type":["string","boolean"],"description":"Diagnostics for use of deprecated classes or functions.","default":"none","enum":["none","information","warning","error",true,false]},"reportIncompatibleMethodOverride":{"type":["string","boolean"],"description":"Diagnostics for methods that override a method of the same name in a base class in an incompatible manner (wrong number of parameters, incompatible parameter types, or incompatible return type).","default":"none","enum":["none","information","warning","error",true,false]},"reportIncompatibleVariableOverride":{"type":["string","boolean"],"description":"Diagnostics for overrides in subclasses that redefine a variable in an incompatible way.","default":"none","enum":["none","information","warning","error",true,false]},"reportInconsistentConstructor":{"type":["string","boolean"],"description":"Diagnostics for __init__ and __new__ methods whose signatures are inconsistent.","default":"none","enum":["none","information","warning","error",true,false]},"reportOverlappingOverload":{"type":["string","boolean"],"description":"Diagnostics for function overloads that overlap in signature and obscure each other or have incompatible return types.","default":"none","enum":["none","information","warning","error",true,false]},"reportPossiblyUnboundVariable":{"type":["string","boolean"],"description":"Diagnostics for the use of variables that may be unbound on some code paths.","default":"error","enum":["none","information","warning","error",true,false]},"reportMissingSuperCall":{"type":["string","boolean"],"description":"Diagnostics for missing call to parent class for inherited `__init__` methods.","default":"none","enum":["none","information","warning","error",true,false]},"reportUninitializedInstanceVariable":{"type":["string","boolean"],"description":"Diagnostics for instance variables that are not declared or initialized within class body or `__init__` method.","default":"none","enum":["none","information","warning","error",true,false]},"reportInvalidStringEscapeSequence":{"type":["string","boolean"],"description":"Diagnostics for invalid escape sequences used within string literals. The Python specification indicates that such sequences will generate a syntax error in future versions.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnknownParameterType":{"type":["string","boolean"],"description":"Diagnostics for input or return parameters for functions or methods that have an unknown type.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnknownArgumentType":{"type":["string","boolean"],"description":"Diagnostics for call arguments for functions or methods that have an unknown type.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnknownLambdaType":{"type":["string","boolean"],"description":"Diagnostics for input or return parameters for lambdas that have an unknown type.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnknownVariableType":{"type":["string","boolean"],"description":"Diagnostics for variables that have an unknown type..","default":"none","enum":["none","information","warning","error",true,false]},"reportUnknownMemberType":{"type":["string","boolean"],"description":"Diagnostics for class or instance variables that have an unknown type.","default":"none","enum":["none","information","warning","error",true,false]},"reportMissingParameterType":{"type":["string","boolean"],"description":"Diagnostics for parameters that are missing a type annotation.","default":"none","enum":["none","information","warning","error",true,false]},"reportMissingTypeArgument":{"type":["string","boolean"],"description":"Diagnostics for generic class reference with missing type arguments.","default":"none","enum":["none","information","warning","error",true,false]},"reportInvalidTypeVarUse":{"type":["string","boolean"],"description":"Diagnostics for improper use of type variables in a function signature.","default":"none","enum":["none","information","warning","error",true,false]},"reportCallInDefaultInitializer":{"type":["string","boolean"],"description":"Diagnostics for function calls within a default value initialization expression. Such calls can mask expensive operations that are performed at module initialization time.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnnecessaryIsInstance":{"type":["string","boolean"],"description":"Diagnostics for 'isinstance' or 'issubclass' calls where the result is statically determined to be always true. Such calls are often indicative of a programming error.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnnecessaryCast":{"type":["string","boolean"],"description":"Diagnostics for 'cast' calls that are statically determined to be unnecessary. Such calls are sometimes indicative of a programming error.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnnecessaryComparison":{"type":["string","boolean"],"description":"Diagnostics for '==' and '!=' comparisons that are statically determined to be unnecessary. Such calls are sometimes indicative of a programming error.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnnecessaryContains":{"type":["string","boolean"],"description":"Diagnostics for 'in' operation that is statically determined to be unnecessary. Such operations are sometimes indicative of a programming error.","default":"none","enum":["none","information","warning","error",true,false]},"reportAssertAlwaysTrue":{"type":["string","boolean"],"description":"Diagnostics for 'assert' statement that will provably always assert. This can be indicative of a programming error.","default":"none","enum":["none","information","warning","error",true,false]},"reportSelfClsParameterName":{"type":["string","boolean"],"description":"Diagnostics for a missing or misnamed “self” parameter in instance methods and “cls” parameter in class methods. Instance methods in metaclasses (classes that derive from “type”) are allowed to use “cls” for instance methods.","default":"none","enum":["none","information","warning","error",true,false]},"reportImplicitStringConcatenation":{"type":["string","boolean"],"description":"Diagnostics for two or more string literals that follow each other, indicating an implicit concatenation. This is considered a bad practice and often masks bugs such as missing commas.","default":"none","enum":["none","information","warning","error",true,false]},"reportInvalidStubStatement":{"type":["string","boolean"],"description":"Diagnostics for type stub statements that do not conform to PEP 484.","default":"none","enum":["none","information","warning","error",true,false]},"reportIncompleteStub":{"type":["string","boolean"],"description":"Diagnostics for the use of a module-level “__getattr__” function, indicating that the stub is incomplete.","default":"none","enum":["none","information","warning","error",true,false]},"reportUndefinedVariable":{"type":["string","boolean"],"description":"Diagnostics for undefined variables.","default":"warning","enum":["none","information","warning","error",true,false]},"reportUnboundVariable":{"type":["string","boolean"],"description":"Diagnostics for the use of unbound variables.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnhashable":{"type":["string","boolean"],"description":"Diagnostics for the use of an unhashable object in a container that requires hashability.","default":"error","enum":["none","information","warning","error",true,false]},"reportUnusedCallResult":{"type":["string","boolean"],"description":"Diagnostics for call expressions whose results are not consumed and are not None.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnusedCoroutine":{"type":["string","boolean"],"description":"Diagnostics for call expressions that return a Coroutine and whose results are not consumed.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnusedExcept":{"type":["string","boolean"],"description":"Diagnostics for unreachable except clause.","default":"error","enum":["none","information","warning","error",true,false]},"reportUnusedExpression":{"type":["string","boolean"],"description":"Diagnostics for simple expressions whose value is not used in any way.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnsupportedDunderAll":{"type":["string","boolean"],"description":"Diagnostics for unsupported operations performed on __all__.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnnecessaryTypeIgnoreComment":{"type":["string","boolean"],"description":"Diagnostics for '# type: ignore' comments that have no effect.","default":"none","enum":["none","information","warning","error",true,false]},"reportMatchNotExhaustive":{"type":["string","boolean"],"description":"Diagnostics for 'match' statements that do not exhaustively match all possible values.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnreachable":{"type":["string","boolean"],"description":"Diagnostics for code that is determined by type analysis to be unreachable.","default":"none","enum":["none","information","warning","error",true,false]},"reportShadowedImports":{"type":["string","boolean"],"description":"Diagnostics for files that are overriding a module in the stdlib.","default":"none","enum":["none","information","warning","error",true,false]},"reportImplicitOverride":{"type":["string","boolean"],"description":"Diagnostics for overridden methods that do not include an `@override` decorator.","default":"none","enum":["none","information","warning","error",true,false]}}},"python.analysis.disableTaggedHints":{"type":"boolean","default":false,"scope":"resource","markdownDescription":"Disable hint diagnostics with special hints for grayed-out or strike-through text."},"python.analysis.logLevel":{"type":"string","default":"Information","markdownDescription":"Specifies the level of logging for the Output panel","enum":["Error","Warning","Information","Trace"],"scope":"window"},"python.analysis.typeshedPaths":{"type":"array","default":[],"items":{"type":"string"},"markdownDescription":"Paths to look for typeshed modules.","scope":"resource"},"python.analysis.importFormat":{"type":"string","default":"absolute","enum":["absolute","relative"],"markdownDescription":"Defines the default format for importing modules.","enumDescriptions":["Use absolute import format when creating new import statement.","Use relative import format when creating new import statement."],"scope":"resource"},"python.analysis.reportExtraTelemetry":{"type":"boolean","default":false,"scope":"window","markdownDescription":"Report extra telemetry [Experimental]. For internal use only, may cause Pylance to slow down.","tags":["experimental","onExP"]},"python.analysis.enablePytestSupport":{"type":"boolean","default":true,"markdownDescription":"Enables pytest support in Pylance.","scope":"resource"},"python.analysis.gotoDefinitionInStringLiteral":{"type":"boolean","default":true,"markdownDescription":"For string literals that look like module names, enables go to definition to go to the module.","scope":"resource"},"python.analysis.nodeExecutable":{"type":"string","default":"","oneOf":[{"enum":["","auto"],"description":"Predefined Node.js executable option.","enumDescriptions":["Use VS Code's default Node.js executable.","Automatically download and use a Node.js executable."]},{"type":"string","minLength":1,"pattern":"^(?!auto$).+$","markdownDescription":"Custom Node.js executable path provided by the user."}],"markdownDescription":"Path to a Node.js executable to use for running the language server. If not specified, the language server will use the Node.js executable that ships with VS Code. If set to \"auto\", it will automatically download a version from [nodejs](https://nodejs.org/dist/). Set this option if you're having trouble with Pylance running out of memory. See [here](https://aka.ms/AApf7ox) for more information.","scope":"machine","requiresReload":true},"python.analysis.nodeArguments":{"type":"array","default":["--max-old-space-size=8192"],"items":{"type":"string"},"markdownDescription":"Extra arguments to pass to a Node.js executable to use for running the language server when `python.analysis.nodeExecutable` is set. Default is `--max_old_space_size=8192`.","scope":"machine","requiresReload":true},"python.analysis.supportRestructuredText":{"type":"boolean","default":true,"markdownDescription":"Enable/disable support for reStructuredText in docstrings.","scope":"window","tags":["preview"]},"python.analysis.cacheLSPData":{"type":"boolean","default":false,"markdownDescription":"Cache LSP data for faster completions. \n\n[Experimental] may cause Pylance to stop working.","scope":"machine","tags":["experimental","onExP"]},"python.analysis.regenerateStdLibIndices":{"type":"boolean","default":false,"markdownDescription":"Instead of relying on the shared stdlib.json indices for all Python versions, generate unique indices tailored to each workspace's specific Python version and platform. This regeneration process will affect performance, unlike using the prebuilt stdlib indices.","scope":"resource"},"python.analysis.aiCodeActions":{"type":"object","default":{"implementAbstractClasses":true,"generateSymbol":true,"convertFormatString":true},"markdownDescription":"Enable/disable AI-assisted code actions. Requires the Copilot Chat extension to be enabled.","scope":"resource","properties":{"implementAbstractClasses":{"type":"boolean","default":true,"markdownDescription":"Enable/disable AI assistance for implementing inherited abstract classes."},"generateDocstring":{"type":"boolean","default":false,"markdownDescription":"Enable/disable AI assistance for generating reStructuredText docstrings. Trigger with code action inside empty docstrings."},"generateSymbol":{"type":"boolean","default":true,"markdownDescription":"Enable/disable AI assistance for generating symbol such as class, function and variable."},"convertLambdaToNamedFunction":{"type":"boolean","default":false,"markdownDescription":"Enable/disable AI assistance for converting lambdas to named functions."},"convertFormatString":{"type":"boolean","default":true,"markdownDescription":"Enable/disable AI assistance for converting string concatenation to f-string or format()."}}},"python.analysis.generateWithTypeAnnotation":{"type":"boolean","default":false,"markdownDescription":"Add type annotations when generating code. Defaults to `false` for type checking mode `off`, and `true` for other modes.","scope":"resource"},"python.analysis.languageServerMode":{"type":"string","default":"default","enum":["light","default","full"],"markdownDescription":"Select a predefined set of values for settings. Please check [this link](https://aka.ms/languageserver-mode) for more details.","markdownEnumDescriptions":["Set Pylance to do only essential work to make it light weight. See the link at the description to find out exactly what settings are set to what value.","Leave Pylance with default settings.","Enable most Pylance features by default. See the link at the description to find out exactly what settings are set to what value."],"scope":"resource"},"python.analysis.supportDocstringTemplate":{"type":"boolean","default":false,"markdownDescription":"Enable/disable reStructuredText docstring generation. Templates appear after typing opening triple quotes or via code action inside empty docstrings.","scope":"resource","tags":["experimental","onExP"]},"python.analysis.displayEnglishDiagnostics":{"type":"boolean","default":false,"markdownDescription":"Display diagnostics in English regardless of VS Code's display language.","scope":"resource"},"python.analysis.enableEditableInstalls":{"type":"boolean","default":true,"markdownDescription":"Enable support for editable installs of packages as described in [PEP 660](https://peps.python.org/pep-0660/) when using Python 3.13 and higher. \n\n[Experimental]. For internal use only, may cause Pylance to stop working.","scope":"machine"},"python.analysis.diagnosticsSource":{"type":"string","default":"Pylance","markdownDescription":"Allows specifying a different language server to use for diagnostics. Pylance will combine its results with this other server.","scope":"resource","enum":["Pylance","Pyright"],"markdownEnumDescriptions":["Use Pylance for diagnostics. (default)","Use Pyright for diagnostics. Allows running a different Pyright than the one shipped with the Pylance extension."]},"python.analysis.pyrightVersion":{"type":"string","default":"","markdownDescription":"Specifies the version of Pyright to use for diagnostics. Minimum value allowed is 1.1.397. This setting is only used when `python.analysis.diagnosticsSource` is set to `Pyright`. \n\nThis value can be one of\n- Version string = i.e. 1.1.397\n- Path to a local pyright-langserver.js file (which also has to come from at least 1.1.397 or higher).","scope":"resource"},"python.analysis.enablePrecomputeContext":{"type":"boolean","default":false,"markdownDescription":"Enable/disable experimental precompute context. For internal use only, may cause Pylance to stop working.","scope":"machine","requiresReload":true,"tags":["onExP"]},"python.analysis.enablePerfTelemetry":{"type":"boolean","default":false,"markdownDescription":"Enables internal perf telemetry if telemetry is enabled in VS Code.","scope":"resource","tags":["experimental","onExP"]},"python.analysis.enableColorPicker":{"type":"boolean","default":true,"markdownDescription":"Enable/disable color picker in the editor for '#RRGGBB' and '#RRGGBBAA' strings.","scope":"resource"},"python.analysis.aiHoverSummaries":{"type":"boolean","default":false,"markdownDescription":"Enable/disable AI assistance to show copilot-generated summaries in the hover tooltip. This feature requires a GitHub Copilot Pro or Pro+ subscription.","scope":"resource","tags":["experimental","onExP"]},"python.analysis.enableTroubleshootMissingImports":{"type":"boolean","default":false,"markdownDescription":"Enable/disable the Quick Fix for troubleshooting missing imports. This Quick Fix requires the Python Environments extension to be installed and enabled.","scope":"resource","tags":["experimental","onExP"]},"python.analysis.enableAsyncProgram":{"type":"boolean","default":false,"markdownDescription":"Enable/disable async communication with internal Type Server. For internal use only, may cause Pylance to stop working.","scope":"resource","tags":["experimental","onExP"]},"python.analysis.typeServerExecutable":{"type":"string","default":"","markdownDescription":"Path to a custom type server. For internal use only, may cause Pylance to stop working.","scope":"resource"},"python.analysis.typeServerArguments":{"type":"array","default":[],"items":{"type":"string"},"markdownDescription":"Arguments to pass to the type server. For internal use only, may cause Pylance to stop working.","scope":"resource"}}},"jsonValidation":[{"fileMatch":"pyrightconfig.json","url":"./dist/schemas/pyrightconfig.schema.json"}],"semanticTokenTypes":[{"id":"module","description":"module","superType":"namespace"},{"id":"intrinsic","description":"intrinsic","superType":"operator"},{"id":"selfParameter","description":"self parameter","superType":"parameter"},{"id":"clsParameter","description":"cls parameter","superType":"parameter"},{"id":"magicFunction","description":"magic aka dunder function","superType":"function"},{"id":"builtinConstant","description":"constants like True, False, None, or __debug__","superType":"constant"},{"id":"parenthesis","description":"() parenthesis"},{"id":"bracket","description":"[] bracket"},{"id":"curlybrace","description":"{} curly brace"},{"id":"colon","description":"colon token"},{"id":"semicolon","description":"semicolon token"},{"id":"arrow","description":"arrow token"}],"semanticTokenModifiers":[{"id":"typeHint","description":"inside a type annotation"},{"id":"typeHintComment","description":"inside a comment style type annotation"},{"id":"decorator","description":"inside a decorator"},{"id":"builtin","description":"built-in identifier"},{"id":"overridden","description":"overridden token"},{"id":"callable","description":"callable like a function"}],"semanticTokenScopes":[{"language":"python","scopes":{"selfParameter":["variable.parameter.function.language.special.self.python"],"clsParameter":["variable.parameter.function.language.special.cls.python"],"magicFunction":["support.function.magic.python"],"*.typeHintComment":["comment.typehint.type.notation.python"],"*.overridden":["support.function.magic.python"],"function.decorator":["meta.function.decorator.python"],"class.decorator":["meta.function.decorator.python"],"builtinConstant":["constant.language.python"],"parenthesis":["source.python"],"bracket":["source.python"],"curlybrace":["source.python"],"colon":["punctuation.separator.colon.python"],"semicolon":["source.python"],"arrow":["punctuation.separator.annotation.result.python"]}}]},"scripts":{"clean":"shx rm -rf ./dist ./out NOTICE.txt","package":"vsce package --githubBranch main","vscode:prepublish":"npm run clean && shx cp ../../NOTICE.txt . && node --max_old_space_size=8192 ./node_modules/webpack-cli/bin/cli.js --mode production --progress","webpack":"node --max_old_space_size=8192 ./node_modules/webpack-cli/bin/cli.js --mode development --progress","webpack-dev":"npm run clean && node --max_old_space_size=8192 ./node_modules/webpack-cli/bin/cli.js --mode development --watch --progress","webpack-prod":"npm run clean && node --max_old_space_size=8192 ./node_modules/webpack-cli/bin/cli.js --mode production --watch --progress","webpack-dev-fast":"npm run clean && webpack --env fast --mode development --watch --progress","build:tests":"tsc","watch:tests":"tsc --watch","encryptText":"ts-node --project ./tsconfig.json -r tsconfig-paths/register ./src/encryptText.ts","test":"npm run webpack && npm run test:extension && npm run test:web","test:extension":"npm run build:tests && node ./src/tests/runTests.js extension","test:smoke":"npm run build:tests && node ./src/tests/runTests.js smoke","test:web":"npm run webpack && node ./build/launchWebTests.js","test:copytestbundle":"shx cp ./dist/browser.tests/web/index.bundle.js ./test-web/ms-python.vscode-pylance/dist/browser.tests/web/index.bundle.js","test:web:exists":"vscode-test-web --coi --extensionDevelopmentPath=./test-web --extensionTestsPath=./test-web/ms-python.vscode-pylance/dist/browser.tests/web/index.bundle.js --verbose","test:web:exists:nocoi":"vscode-test-web --extensionDevelopmentPath=./test-web --extensionTestsPath=./test-web/ms-python.vscode-pylance/dist/browser.tests/web/index.bundle.js --verbose","download-api":"dts main"},"devDependencies":{"@types/jest":"^29.5.14","@types/mocha":"^10.0.10","@types/node":"^22.10.5","@types/sinon":"^17.0.3","@types/source-map-support":"^0.5.10","@types/vscode":"^1.101.0","@types/webpack":"^5.28.5","@types/webpack-env":"^1.18.5","@types/which":"^3.0.4","@vscode/dts":"^0.4.1","@vscode/test-electron":"^2.4.1","@vscode/test-web":"^0.0.68","@vscode/vsce":"^2.32.0","copy-webpack-plugin":"^11.0.0","esbuild-loader":"^3.2.0","javascript-obfuscator":"4.1.1","jest":"^29.7.0","jest-cli":"^29.7.0","jest-environment-node":"^29.7.0","jest-junit":"^16.0.0","mocha":"^10.8.2","shx":"^0.3.4","sinon":"^19.0.2","source-map-support":"^0.5.21","terser-webpack-plugin":"^5.3.11","ts-jest":"^29.2.5","ts-loader":"^9.5.1","ts-mockito":"^2.6.1","ts-node":"^10.9.2","typescript":"~5.5.4","webpack":"^5.97.1","webpack-cli":"^5.1.4","webpack-env":"^0.8.0","webpack-obfuscator":"^3.5.1"},"dependencies":{"@vscode/extension-telemetry":"^0.9.8","@vscode/jupyter-extension":"^1.1.1","@vscode/sync-api-common":"^0.9.0","@vscode/sync-api-service":"^0.9.0","ansi-regex":"^6.1.0","buffer":"^6.0.3","events":"^3.3.0","path-browserify":"^1.0.1","semver":"^7.6.3","stream-browserify":"^3.0.0","typescript-char":"^0.0.0","vscode-jsonrpc":"^9.0.0-next.5","vscode-languageclient":"^10.0.0-next.12","vscode-languageserver":"^10.0.0-next.10","vscode-languageserver-protocol":"^3.17.6-next.10","vscode-languageserver-types":"^3.17.6-next.5","vscode-tas-client":"^0.1.84","web-tree-sitter":"^0.24.4","which":"^4.0.0"},"overrides":{"loader-utils":"^2.0.4","braces":"^3.0.3"}},"location":{"$mid":1,"path":"/home/usainzg/.vscode/extensions/ms-python.vscode-pylance-2025.8.3","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"Microsoft","metadata":{"isApplicationScoped":false,"isMachineScoped":false,"isBuiltin":false,"installedTimestamp":1761027233162,"pinned":false,"source":"gallery","id":"364d2426-116a-433a-a5d8-a5098dc3afbd","publisherId":"998b010b-e2af-44a5-a6cd-0b5fd3b9b6f8","publisherDisplayName":"Microsoft","targetPlatform":"undefined","updated":true,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"preRelease":false,"size":69067451},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"github.copilot","uuid":"23c4aeee-f844-43cd-b53e-1113e483f1a6"},"manifest":{"name":"copilot","displayName":"GitHub Copilot","description":"Your AI pair programmer","version":"1.387.0","build":"1815","buildType":"prod","publisher":"GitHub","preview":false,"homepage":"https://github.com/features/copilot?editor=vscode","license":"https://docs.github.com/en/site-policy/github-terms/github-terms-for-additional-products-and-features","bugs":{"url":"https://github.com/microsoft/vscode/issues"},"qna":"https://github.com/github-community/community/discussions/categories/copilot","icon":"assets/Copilot-App-Icon.png","pricing":"Trial","extensionPack":["GitHub.copilot-chat","GitHub.copilot"],"engines":{"vscode":"^1.103.0","node":">=22.0.0","npm":">=9.0.0"},"categories":["AI","Chat","Programming Languages","Machine Learning"],"keywords":["ai","openai","codex","pilot","snippets","documentation","autocomplete","intellisense","refactor","javascript","python","typescript","php","go","golang","ruby","c++","c#","java","kotlin","co-pilot"],"badges":[{"url":"https://img.shields.io/badge/GitHub%20Copilot-Subscription%20Required-orange","href":"https://github.com/github-copilot/signup?editor=vscode","description":"Sign up for GitHub Copilot"},{"url":"https://img.shields.io/github/stars/github/copilot-docs?style=social","href":"https://github.com/github/copilot-docs","description":"Star Copilot on GitHub"},{"url":"https://img.shields.io/youtube/channel/views/UC7c3Kb6jYCRj4JOHHZTxKsQ?style=social","href":"https://www.youtube.com/@GitHub/search?query=copilot","description":"Check out GitHub on Youtube"},{"url":"https://img.shields.io/twitter/follow/github?style=social","href":"https://twitter.com/github","description":"Follow GitHub on Twitter"}],"activationEvents":["onStartupFinished"],"browser":"./dist/web","main":"./dist/extension","enabledApiProposals":["inlineCompletionsAdditions","devDeviceId"],"contributes":{"commands":[{"command":"github.copilot.toggleStatusMenu","title":"Open Status Menu","category":"GitHub Copilot"},{"command":"github.copilot.signIn","title":"Sign In","category":"GitHub Copilot","enablement":"!github.copilot.activated"},{"command":"github.copilot.acceptCursorPanelSolution","title":"Accept Panel Suggestion at the Cursor","enablement":"github.copilot.panelVisible","category":"GitHub Copilot"},{"command":"github.copilot.previousPanelSolution","title":"Navigate to the Previous Panel Suggestion","enablement":"github.copilot.panelVisible","category":"GitHub Copilot"},{"command":"github.copilot.nextPanelSolution","title":"Navigate to the Next Panel Suggestion","enablement":"github.copilot.panelVisible","category":"GitHub Copilot"},{"command":"github.copilot.generate","title":"Open Completions Panel","enablement":"github.copilot.activated && !isWeb","category":"GitHub Copilot"},{"command":"github.copilot.generateComparison","title":"Open Comparison Panel","enablement":"github.copilot.activated && !isWeb && github.copilot.comparisonPanelEnabled","category":"GitHub Copilot"},{"command":"github.copilot.acceptCursorComparisonPanelSolution","title":"Accept Comparison Panel Suggestion at the Cursor","enablement":"github.copilot.comparisonPanelVisible && github.copilot.comparisonPanelEnabled","category":"GitHub Copilot"},{"command":"github.copilot.previousComparisonPanelSolution","title":"Navigate to the Previous Comparison Panel Suggestion","enablement":"github.copilot.comparisonPanelVisible && github.copilot.comparisonPanelEnabled","category":"GitHub Copilot"},{"command":"github.copilot.nextComparisonPanelSolution","title":"Navigate to the Next Comparison Panel Suggestion","enablement":"github.copilot.comparisonPanelVisible && github.copilot.comparisonPanelEnabled","category":"GitHub Copilot"},{"command":"github.copilot.completions.disable","title":"Disable Completions","enablement":"github.copilot.activated && config.editor.inlineSuggest.enabled && github.copilot.completions.enabled","category":"GitHub Copilot"},{"command":"github.copilot.completions.enable","title":"Enable Completions","enablement":"github.copilot.activated && !(config.editor.inlineSuggest.enabled && github.copilot.completions.enabled)","category":"GitHub Copilot"},{"command":"github.copilot.completions.toggle","title":"Toggle (Enable/Disable) Completions","enablement":"github.copilot.activated","category":"GitHub Copilot"},{"command":"github.copilot.sendFeedback","title":"Send Feedback","category":"GitHub Copilot"},{"command":"github.copilot.collectDiagnostics","title":"Collect Diagnostics","category":"GitHub Copilot","enablement":"!isWeb"},{"command":"github.copilot.openLogs","title":"Open Logs","category":"GitHub Copilot"},{"command":"github.copilot.openModelPicker","title":"Change Completions Model","category":"GitHub Copilot","enablement":"!isWeb"},{"command":"github.copilot.sendCompletionFeedback","title":"Send Copilot Completion Feedback","category":"GitHub Copilot","enablement":"!isWeb"},{"command":"github-copilot-completions-debugger-view.refresh","title":"Refresh","icon":"$(refresh)"}],"keybindings":[{"command":"github.copilot.acceptCursorPanelSolution","key":"ctrl+/","mac":"ctrl+/","when":"activeWebviewPanelId == 'GitHub Copilot Suggestions'"},{"command":"github.copilot.previousPanelSolution","key":"alt+[","mac":"alt+[","when":"activeWebviewPanelId == 'GitHub Copilot Suggestions'"},{"command":"github.copilot.nextPanelSolution","key":"alt+]","mac":"alt+]","when":"activeWebviewPanelId == 'GitHub Copilot Suggestions'"},{"command":"github.copilot.acceptCursorComparisonPanelSolution","key":"ctrl+shift+/","mac":"ctrl+shift+/","when":"activeWebviewPanelId == 'GitHub Copilot Comparison' && github.copilot.comparisonPanelEnabled"},{"command":"github.copilot.previousComparisonPanelSolution","key":"alt+shift+[","mac":"alt+shift+[","when":"activeWebviewPanelId == 'GitHub Copilot Comparison' && github.copilot.comparisonPanelEnabled"},{"command":"github.copilot.nextComparisonPanelSolution","key":"alt+shift+]","mac":"alt+shift+]","when":"activeWebviewPanelId == 'GitHub Copilot Comparison' && github.copilot.comparisonPanelEnabled"},{"command":"editor.action.inlineSuggest.trigger","key":"alt+\\","when":"editorTextFocus && !editorHasSelection && !inlineSuggestionsVisible"}],"configuration":[{"title":"GitHub Copilot","properties":{"github.copilot.selectedCompletionModel":{"type":"string","default":"","markdownDescription":"The currently selected completion model ID. To select from a list of available models, use the __\"Change Completions Model\"__ command or open the model picker (from the Copilot menu in the VS Code title bar, select __\"Configure Code Completions\"__ then __\"Change Completions Model\"__. The value must be a valid model ID. An empty value indicates that the default model will be used."},"github.copilot.advanced":{"type":"object","title":"Advanced Settings","properties":{"authProvider":{"type":"string","enum":["github","github-enterprise"],"enumDescriptions":["GitHub.com","GitHub Enterprise"],"default":"github","description":"The GitHub identity to use for Copilot"},"authPermissions":{"type":"string","enum":["default","minimal"],"markdownEnumDescriptions":["Default (recommended) - The default permissions enable the best that Copilot has to offer including, but not limited to, faster repo indexing and the power of the `@github` agent.","Minimal - The minimal permissions required for Copilot functionality."],"default":"default","markdownDescription":"Controls what kind of permissions are asked for when signing in to Copilot. The options are\n* `default` - (strongly recommended) The default permissions enable the best that Copilot has to offer including, but not limited to, faster repo indexing and the power of the `@github` agent.\n* `minimal` - The minimal permissions are the least that Copilot needs to function. Some features may behave slower or not at all."},"useLanguageServer":{"type":"boolean","default":false,"description":"Experimental: Use language server"},"debug.overrideEngine":{"type":"string","default":"","description":"Override engine name"},"debug.overrideProxyUrl":{"type":"string","default":"","description":"Override GitHub authentication proxy full URL"},"debug.testOverrideProxyUrl":{"type":"string","default":"","description":"Override GitHub authentication proxy URL when running tests"},"debug.overrideCapiUrl":{"type":"string","default":"","description":"Override GitHub Copilot API full URL"},"debug.testOverrideCapiUrl":{"type":"string","default":"","description":"Override GitHub Copilot API URL when running tests"},"debug.filterLogCategories":{"type":"array","default":[],"deprecationMessage":"Set overrideLogLevels.* to ERROR to filter out unwanted categories.","description":"Show only log categories listed in this setting. If an array is empty, show all loggers"}}},"github.copilot.enable":{"type":"object","scope":"window","default":{"*":true,"plaintext":false,"markdown":false,"scminput":false},"additionalProperties":{"type":"boolean"},"markdownDescription":"Enable or disable auto triggering of Copilot completions for specified [languages](https://code.visualstudio.com/docs/languages/identifiers). You can still trigger suggestions manually using `Alt + \\`"}}}],"configurationDefaults":{"editor.tokenColorCustomizations":{"[*Light*]":{"textMateRules":[{"scope":"ref.matchtext","settings":{"foreground":"#000"}}]},"[*Dark*]":{"textMateRules":[{"scope":"ref.matchtext","settings":{"foreground":"#fff"}}]}}},"languages":[{"id":"code-referencing"}],"grammars":[{"language":"code-referencing","scopeName":"text.ref","path":"./syntaxes/ref.tmGrammar.json"}],"iconFonts":[{"id":"copilot-font","src":[{"path":"assets/copilot.woff","format":"woff"}]}],"viewsContainers":{"activitybar":[{"id":"github-copilot-completions-debugger-panel","title":"Debugger","icon":"$(bug)","when":"config.github.copilot.internal.showWorkspaceContextDebugger && config.github.copilot.internal.useWorkspaceContextCoordinator"}]},"views":{"github-copilot-completions-debugger-panel":[{"id":"github-copilot-completions-debugger-view","name":"Debugger","when":"config.github.copilot.internal.showWorkspaceContextDebugger && config.github.copilot.internal.useWorkspaceContextCoordinator","icon":"$(bug)"}]},"menus":{"view/title":[{"command":"github-copilot-completions-debugger-view.refresh","when":"view == github-copilot-completions-debugger-view","group":"navigation"}]}},"scripts":{"build":"tsx esbuild.ts","clean":"./script/build/clean.sh","compress":"tsx ./script/compressTokenizer.ts","forbid-sources-content:extension":"node script/forbid-sources-content.js --extension","generate_languages":"tsx script/generateLanguages.ts && prettier --write lib/src/language/generatedLanguages.ts","get_token":"tsx script/deviceFlow.ts --save-as-test-token","lint":"run-p --aggregate-output \"lint:*\"","lint:deps":"depcruise -c .dependency-cruiser.js .","lint:eslint":"eslint -f visualstudio --quiet --cache .","lint:prettier":"prettier --check . 2>&1","lint:types":"tsc --noEmit && tsc --noEmit -p extension/src/copilotPanel/webview","prebuild":"npm install","pretest":"npm run build","pretest:headless":"npm run build","pretest:extension":"npm run build","pretest:lsp-client":"npm run build","pretest:lib-e2e":"npm run build","prewatch":"npm run build","prewatch:esbuild":"npm run build","start":"npm run watch","test":"npm-run-all \"test:extension --ignore-scripts\" \"test:headless --ignore-scripts\" lint","test:headless":"npm-run-all test:lib test:agent \"test:lib-e2e --ignore-scripts\" test:prompt \"test:lsp-client --ignore-scripts\" lint","test:agent":"mocha \"agent/src/**/*.test.{ts,tsx}\"","test:extension":"tsx extension/test/runTest.ts","test:lib":"mocha \"lib/src/**/*.test.{ts,tsx}\"","test:lib-e2e":"mocha \"lib/e2e/src/**/*.test.{ts,tsx}\" --exclude \"lib/e2e/src/prompt/**/*.test.ts\"","test:lib-e2e-no-ci":"mocha \"lib/e2e/no-ci/**/*.test.{ts,tsx}\"","test:lib-prompt-e2e":"mocha \"lib/e2e/src/prompt/prompt.test.ts\"","test:lib-prompt-e2e-perf":"INCLUDE_PERFORMANCE=true npm run test:lib-prompt-e2e","test:lsp-client":"mocha \"lsp-client/test/*.test.{ts,tsx}\"","test:prompt":"mocha \"prompt/test/**/*.test.{ts,tsx}\"","test:prepare-msbench":"tsx script/setupMsbench.ts","test:run-msbench":"tsx lsp-client/test/msbench/agent/index.ts","vscode-dts":"vscode-dts dev && mv vscode.proposed.*.ts extension/src","vscode:prepublish":"run-s \"build --ignore-scripts\" forbid-sources-content:extension","vscode:uninstall":"node dist/extensionUninstalled.js","vsix":"vsce package --allow-missing-repository","watch":"run-p \"watch:esbuild --ignore-scripts\" \"watch:types -- --preserveWatchOutput\"","watch:esbuild":"tsx esbuild.ts --watch","watch:types":"tsc --noEmit --watch"},"devDependencies":{"@azure/identity":"^4.11.0","@azure/keyvault-secrets":"^4.10.0","@datadog/datadog-ci":"^3.17.0","@github/prettier-config":"0.0.6","@limegrass/eslint-plugin-import-alias":"^1.5.1","@parcel/watcher":"^2.5.1","@types/benchmark":"^2.1.5","@types/crypto-js":"^4.2.2","@types/diff":"^8.0.0","@types/git-url-parse":"^16.0.0","@types/js-yaml":"^4.0.6","@types/kerberos":"^1.1.2","@types/markdown-it":"^14.1.2","@types/mocha":"^10.0.10","@types/node":"~22.7.0","@types/semver":"^7.7.0","@types/sinon":"^17.0.4","@types/uuid":"^10.0.0","@types/vscode":"1.103.0","@types/yargs":"^17.0.24","@vscode/test-electron":"^2.5.2","@vscode/tree-sitter-wasm":"0.0.5-php.2","@vscode/vsce":"^3.6.0","@yao-pkg/pkg":"^6.8.0","benchmark":"^2.1.4","boxen":"^8.0.1","chalk":"^5.4.1","dependency-cruiser":"^17.0.1","electron":"^37.5.1","esbuild":"^0.25.8","esbuild-plugin-copy":"^2.1.1","eslint":"^9.32.0","eslint-formatter-visualstudio":"^8.40.0","eslint-plugin-mocha":"^10.5.0","glob":"^11.0.3","globals":"^16.3.0","js-yaml":"^4.1.0","mocha":"^11.2.2","mocha-junit-reporter":"^2.2.1","mocha-multi-reporters":"^1.5.1","npm-run-all":"^4.1.5","prettier":"^3.5.3","prettier-plugin-organize-imports":"^4.2.0","proxy":"^2.1.1","simple-git":"^3.28.0","sinon":"^20.0.0","ts-dedent":"^2.2.0","tsx":"^4.19.4","typescript":"^5.9.2","typescript-eslint":"^8.39.1","vscode-dts":"^0.3.3"},"dependencies":{"@adobe/helix-fetch":"github:devm33/helix-fetch#2a08fa939591a0e14f34f611adcc3ed767579e9a","@anthropic-ai/sdk":"^0.56.0","@github/memoize":"1.1.5","@microsoft/1ds-post-js":"^4.3.9","@microsoft/applicationinsights-web-basic":"^3.3.6","@microsoft/tiktokenizer":"^1.0.10","@modelcontextprotocol/sdk":"^1.17.0","@octokit/graphql":"^8.0.1","@octokit/rest":"^22.0.0","@sinclair/typebox":"^0.34.33","@types/vscode-webview":"^1.57.4","@vscode/chat-lib":"^0.0.4","@vscode/codicons":"^0.0.39","@vscode/policy-watcher":"^1.3.2","@vscode/prompt-tsx":"0.4.0-alpha.1","@vscode/webview-ui-toolkit":"^1.3.1","await-lock":"^2.2.2","crypto-js":"^4.2.0","diff":"^8.0.2","dldr":"^0.0.10","events":"^3.3.0","get-stream":"^6.0.1","git-url-parse":"^16.0.3","kerberos":"^2.2.0","mac-ca":"^3.1.3","markdown-it":"^14.1.0","microjob":"^0.7.0","minimatch":"^9.0.3","open":"^10.2.0","os-browserify":"^0.3.0","path-browserify":"^1.0.1","semver":"^7.7.1","shiki":"~1.15.0","source-map-support":"^0.5.21","sqlite3":"^5.1.7","undici":"^7.16.0","uuid":"^11.1.0","vscode-languageclient":"^9.0.0","vscode-languageserver":"^9.0.0","vscode-languageserver-protocol":"^3.17","vscode-languageserver-textdocument":"~1.0.11","vscode-uri":"^3.1.0","web-tree-sitter":"^0.23.0","windows-ca-certs":"^0.2.2","yargs":"^17.7.2"},"overrides":{"fsevents":"<0","bindings":"npm:bundled-bindings@^1.5.0"}},"location":{"$mid":1,"path":"/home/usainzg/.vscode/extensions/github.copilot-1.387.0","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"GitHub","metadata":{"isApplicationScoped":true,"isMachineScoped":false,"isBuiltin":false,"installedTimestamp":1761206959968,"pinned":false,"source":"gallery","id":"23c4aeee-f844-43cd-b53e-1113e483f1a6","publisherId":"7c1c19cd-78eb-4dfb-8999-99caf7679002","publisherDisplayName":"GitHub","targetPlatform":"undefined","updated":true,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"preRelease":false,"size":76828888},"isValid":true,"validations":[],"preRelease":false}]}